###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        14/Jul/2014  22:11:56
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12
#        晚六点；匀速\src\Sources\App\main.c
#    Command line =  
#        "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12
#        晚六点；匀速\src\Sources\App\main.c" -D IAR -D TWR_K60N512 -D DEBUG
#        -lCN "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\FLASH\List\"
#        -lB "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\FLASH\List\"
#        -o "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\FLASH\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I "F:\刘友才
#        (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\src\Sources\Cpu\" -I
#        "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\src\Sources\App\"
#        -I "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12
#        晚六点；匀速\src\Sources\Drivers\adc\" -I "F:\刘友才
#        (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\src\Sources\Drivers\delay\"
#        -I "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12
#        晚六点；匀速\src\Sources\Drivers\FTM\" -I "F:\刘友才
#        (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\src\Sources\Drivers\gpio\" -I
#        "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12
#        晚六点；匀速\src\Sources\Drivers\lptmr\" -I "F:\刘友才
#        (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\src\Sources\Drivers\mcg\" -I
#        "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12
#        晚六点；匀速\src\Sources\Drivers\PIT\" -I "F:\刘友才
#        (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\src\Sources\Drivers\uart\" -I
#        "F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12
#        晚六点；匀速\src\Sources\Drivers\oled\" -I "F:\刘友才
#        (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\src\Sources\Drivers\spi\" -On
#        --use_c++_inline
#    List file    =  
#        F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\FLASH\List\main.lst
#    Object file  =  
#        F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\FLASH\Obj\main.o
#
###############################################################################

F:\刘友才 (H)\飞思卡尔\liuyoucai\7.12 晚六点；匀速\src\Sources\App\main.c
      1          
      2          #include "MK60N512VMD100.h"
      3          #include "include.h"
      4          #include <math.h>
      5          
      6          #define TEST_TIME1(x) gpio_set(PORTB, 6, x)
      7          
      8          
      9           /*Globle variabls*/
     10           //旧标定：直立时
     11          //75cm-------42
     12          //110cm---------49
     13           //前瞻110cm
     14          
     15          //以白色电池垫住，75CM------35(36)hang
     16                           //110=-------42hang
     17          //摄像头顶端距离顶面32cm
     18          
     19          //新标定 摄像头顶端距离地面：32.8cm 车倒下前瞻67.5
     20          /*需调节的参数*/             

   \                                 In section .data, align 2
     21          uint16 Speed_set=240;//270   70、340、75,360//   250 75 360 80 380
   \                     Speed_set:
   \   00000000   0x00F0             DC16 240
     22          

   \                                 In section .data, align 2
     23          uint16 Speed_limit=50;
   \                     Speed_limit:
   \   00000000   0x0032             DC16 50

   \                                 In section .bss, align 2
     24          uint16 Speed_limit_record=0;
   \                     Speed_limit_record:
   \   00000000                      DS8 2
     25          

   \                                 In section .data, align 4
     26          float ft=1.8;
   \                     ft:
   \   00000000   0x3FE66666         DC32 3FE66666H

   \                                 In section .bss, align 1
     27          bool start1=0;
   \                     start1:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
     28          float ACCE_STATIC =1230;    //1251   1236 1228
   \                     ACCE_STATIC:
   \   00000000   0x4499C000         DC32 4499C000H

   \                                 In section .data, align 4
     29          float angle_kp_set=540,angle_kd_set=10.3;
   \                     angle_kp_set:
   \   00000000   0x44070000         DC32 44070000H

   \                                 In section .data, align 4
   \                     angle_kd_set:
   \   00000000   0x4124CCCD         DC32 4124CCCDH

   \                                 In section .data, align 4
     30          float angle_kp =540,angle_kd =9.3;    //600 8.3
   \                     angle_kp:
   \   00000000   0x44070000         DC32 44070000H

   \                                 In section .data, align 4
   \                     angle_kd:
   \   00000000   0x4114CCCD         DC32 4114CCCDH

   \                                 In section .bss, align 4
     31          float acce_static=0;
   \                     acce_static:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     32          float angle_kp_across =540,angle_kd_across =11.3;//600 8.3
   \                     angle_kp_across:
   \   00000000   0x44070000         DC32 44070000H

   \                                 In section .data, align 4
   \                     angle_kd_across:
   \   00000000   0x4134CCCD         DC32 4134CCCDH

   \                                 In section .data, align 4
     33          float speed_kp=80,speed_ki=0.3;//
   \                     speed_kp:
   \   00000000   0x42A00000         DC32 42A00000H

   \                                 In section .data, align 4
   \                     speed_ki:
   \   00000000   0x3E99999A         DC32 3E99999AH
     34          
     35          //float steer_kp=0,steer_kd = 0; //方向

   \                                 In section .bss, align 2
     36          uint16 error_servo_ref_d =0;          //105/110    sp=150//0518     110/120 170
   \                     error_servo_ref_d:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     37          uint16 error_servo_ref_p =0;//120      83 80/63/70 v=110   //83 45
   \                     error_servo_ref_p:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     38          int16 lcd_ref_p =0; 
   \                     lcd_ref_p:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     39          int16 lcd_ref_d =0; 
   \                     lcd_ref_d:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     40          int16 lcd_ref_p1 =52;//45       65     74     44
   \                     lcd_ref_p1:
   \   00000000   0x0034             DC16 52

   \                                 In section .data, align 2
     41          int16 lcd_ref_d1 =450;//150 260  250   300    300
   \                     lcd_ref_d1:
   \   00000000   0x01C2             DC16 450

   \                                 In section .data, align 2
     42          int16 lcd_ref_p2 =54;//54  50   70     84     57  54//sp=240/250
   \                     lcd_ref_p2:
   \   00000000   0x0036             DC16 54

   \                                 In section .data, align 2
     43          int16 lcd_ref_d2 =460;//250 300 340    320    320
   \                     lcd_ref_d2:
   \   00000000   0x01CC             DC16 460

   \                                 In section .data, align 2
     44          int16 zhongjian=30;
   \                     zhongjian:
   \   00000000   0x001E             DC16 30
     45          
     46          /*整体,时间等参数*/

   \                                 In section .bss, align 2
     47          uint16 SpeedControlCount = 0;                  //速控制周期计数值
   \                     SpeedControlCount:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
     48          uint8 g_nCarSpeedCount ;                //1ms控制周期计数
   \                     g_nCarSpeedCount:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     49          uint8 DirectionControlCount = 0;               //方向控制周期
   \                     DirectionControlCount:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     50          uint8 IntegrationTime;
   \                     IntegrationTime:
   \   00000000                      DS8 1
     51          

   \                                 In section .bss, align 2
     52          uint16 Time=0;
   \                     Time:
   \   00000000                      DS8 2
     53          

   \                                 In section .bss, align 1
     54          uint8 send_data_cnt = 0;
   \                     send_data_cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     55          uint8 TimerCnt20ms = 0;
   \                     TimerCnt20ms:
   \   00000000                      DS8 1
     56          

   \                                 In section .data, align 1
     57          uint8 disable_lcd_flag=1;
   \                     disable_lcd_flag:
   \   00000000   0x01               DC8 1

   \                                 In section .data, align 1
     58          uint8 disable_key_flag=1;
   \                     disable_key_flag:
   \   00000000   0x01               DC8 1
     59          

   \                                 In section .bss, align 4
     60          float V;
   \                     V:
   \   00000000                      DS8 4
     61          
     62          
     63           //---------------------------------------------------------------

   \                                 In section .bss, align 2
     64          int16 tingting_p=0;
   \                     tingting_p:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
     65          int16 tingting_d=130;
   \                     tingting_d:
   \   00000000   0x0082             DC16 130
     66          

   \                                 In section .bss, align 1
     67          uint8 summ=0;
   \                     summ:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     68          uint8 da=30;
   \                     da:
   \   00000000   0x1E               DC8 30

   \                                 In section .data, align 1
     69          uint8 fuxiao=30;
   \                     fuxiao:
   \   00000000   0x1E               DC8 30
     70          
     71          ////***************************************************************************
     72          /*直立平衡控制相关参数 */
     73          

   \                                 In section .bss, align 4
     74          float acce=0,gyro=0,w=0;                     //送入滤波的加速度计角度，陀螺仪角速度
   \                     acce:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     gyro:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     w:
   \   00000000                      DS8 4
     75          

   \                                 In section .bss, align 4
     76          float GYRO_STATIC =0;                                  //零点偏移量
   \                     GYRO_STATIC:
   \   00000000                      DS8 4
     77          

   \                                 In section .bss, align 4
     78          float AD_AngleData[2];              //均值滤波之后的陀螺仪和加速度计传感器数据
   \                     AD_AngleData:
   \   00000000                      DS8 8
     79          

   \                                 In section .bss, align 4
     80          float acce_G=0,acce_angle=0,gyro_angle=0,acce_offset=0,gyro_offset=0;
   \                     acce_G:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     acce_angle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     gyro_angle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     acce_offset:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     gyro_offset:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     81          float g_nCarAngle=0;
   \                     g_nCarAngle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     82          float gyroIntegral=0;                     
   \                     gyroIntegral:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     83          float angle_error=0;               //角度偏差
   \                     angle_error:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     84          int16 anglePDout=0;
   \                     anglePDout:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     85          int16 anglePD=0;
   \                     anglePD:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     86          int16 last_anglePD=0;
   \                     last_anglePD:
   \   00000000                      DS8 2
     87          
     88          //*****************************************************************************
     89          /*速度控制相关参数*/ 

   \                                 In section .bss, align 2
     90          int16 g_nLeftCount=0, g_nRightCount=0;                  //两个电机的速度计数，符号位表示方向
   \                     g_nLeftCount:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     g_nRightCount:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     91          float RealSpeed;
   \                     RealSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     92          float LeftRealSpeed,RightRealSpeed;
   \                     LeftRealSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     RightRealSpeed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     93          float Speed_error,motor_P,motor_I=0;
   \                     Speed_error:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     motor_P:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     motor_I:
   \   00000000                      DS8 4
     94          

   \                                 In section .bss, align 4
     95          float SpeedPID = 0;                                 //速度控制的输出量
   \                     SpeedPID:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     96          float SpeedPIDold=0;
   \                     SpeedPIDold:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
     97          int16 SpeedPIDout=0;
   \                     SpeedPIDout:
   \   00000000                      DS8 2
     98          
     99          //*****************************************************************************
    100          /*转向控制相关参数*/
    101          
    102           /*float  Distance[30];
    103           float error=0;
    104           
    105           float  dis_error=0;
    106           float  steerpwm=0;                                     //转向控制输出数量
    107           float  steerpwmold=0;*/

   \                                 In section .bss, align 2
    108           int16 steerpwmout=0;
   \                     steerpwmout:
   \   00000000                      DS8 2
    109          
    110           

   \                                 In section .bss, align 2
    111          int16 LeftSpeedPwm,RightSpeedPwm;
   \                     LeftSpeedPwm:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     RightSpeedPwm:
   \   00000000                      DS8 2
    112          
    113          
    114          
    115          //--------------------------采集图像的相关变量-------------------------------------//

   \                                 In section .bss, align 1
    116          bool     OddEvenStatus;		  //奇偶场状态标志
   \                     OddEvenStatus:
   \   00000000                      DS8 1
    117          #define  OddStatus  0
    118          #define  EvenStatus 1
    119          #define  ODD_EVEN_STATUS  (bool)(0x00000001 & (GPIOB_PDIR  >> 20))  //奇偶变换标志  将第ptc端口的第1位右移动后，置1
    120          #define VIF_START	0   	 //开始模式				 
    121          #define VIF_WAITSAMPLE	1        //   等待模式
    122          #define VIF_SAMPLELINE	2         //   除去消隐行的状态
    123          #define VIF Videoclo_Flag         //
    124          #define PIANYI 170 //实际采集列数为COLUMN + PIANYI，PIANYI为每行消隐点  中心值大于中值，消隐行减少98
    125          #define VIDEO_START_LINE  80//图像采集起始行27

   \                                 In section .bss, align 1
    126          bool ImageReady;               //图像准备好标志
   \                     ImageReady:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    127          uint8 Videoclo_Flag, VideoImageLine;   //采集状态标志位，行中断实际采集行数计数器
   \                     Videoclo_Flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     VideoImageLine:
   \   00000000                      DS8 1

   \                                 In section .bss, align 2
    128          uint16 LineCount=0;                       //行中断采集行数计数器   这个数据一定是要定义为uint16  自己以前定义为uint8  伤心痛苦折磨了好几天
   \                     LineCount:
   \   00000000                      DS8 2

   \                                 In section .data, align 1
    129          bool lcd_debug = 1;    
   \                     lcd_debug:
   \   00000000   0x01               DC8 1
    130          //-------------------------处理图像的相关变量--------------------------//
    131          #define ROW 50	                 //采集行数
    132          #define COLUMN	157 		//每行点数
    133          #define MID  78           //列中心 78 2014 。0515

   \                                 In section .bss, align 4
    134          uint8 VideoImage1[ROW][COLUMN] =       //原始图像数组[0][0]在左下角
   \                     VideoImage1:
   \   00000000                      DS8 7852
    135          {
    136             0
    137          };

   \                                 In section .bss, align 4
    138          uint8 VideoImage2[ROW][COLUMN] =       //原始图像数组[0][0]在左下角
   \                     VideoImage2:
   \   00000000                      DS8 7852
    139          {
    140             0
    141          };

   \                                 In section .bss, align 4
    142          uint8 left_black[ROW]=                 //左边沿线的采集数组
   \                     left_black:
   \   00000000                      DS8 52
    143          {
    144            0
    145          };

   \                                 In section .bss, align 4
    146          uint8 right_black[ROW]=                //右边沿线的采集数组
   \                     right_black:
   \   00000000                      DS8 52
    147          {
    148            0
    149          };

   \                                 In section .bss, align 4
    150          uint8 center_white[ROW]=              //（虚拟出来的）中线的数组
   \                     center_white:
   \   00000000                      DS8 52
    151          {
    152            0
    153          };
    154          
    155          
    156          //-------------------------------------搜两边黑线----------------------------------//
    157          #define MIN_WHITEBASE_POINT 30                    //最少连续白点个数成为基准的要求
    158          #define WHITE_TOP_WHITELINE_POINT 15                  //两边的黑线的宽度小于这个值，判定为最高有效
    159          #define CENTER_LOST_POINT 20

   \                                 In section .bss, align 1
    160          uint8 current_deal_line=0;     //当前处理的行
   \                     current_deal_line:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    161          uint8 deal_start_line = 0;                //这个 值时控制处理的起始行一般定义为基准行 + 4
   \                     deal_start_line:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    162          uint8 hang_search_start = 0;             //定义每次扫描的开始是从哪个点开始的
   \                     hang_search_start:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    163          uint8 whitepoint_start=0;                //从左至右白点开始处
   \                     whitepoint_start:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    164          uint8 whitepoint_end=0;                 //从左至右白点结束处
   \                     whitepoint_end:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    165          uint8 whitebase_searchstart = MID;
   \                     whitebase_searchstart:
   \   00000000   0x4E               DC8 78

   \                                 In section .bss, align 1
    166          uint8 left_whitebase_searchstart = 0;
   \                     left_whitebase_searchstart:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    167          uint8 right_whitebase_searchstart = 0; 
   \                     right_whitebase_searchstart:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    168          uint8 re_whitepoint_start =14;  // 20发车的时候车子一定要在赛道的中心左右，否则会出现找不到赛道的危险??
   \                     re_whitepoint_start:
   \   00000000   0x0E               DC8 14

   \                                 In section .data, align 1
    169          uint8 re_whitepoint_end=144;   
   \                     re_whitepoint_end:
   \   00000000   0x90               DC8 144

   \                                 In section .bss, align 1
    170          uint8 center_lost_hang = 0;
   \                     center_lost_hang:
   \   00000000                      DS8 1
    171          /*
    172          uint8 refer_road_width[ROW] ={130,130,129,127,125,124,122,121,120,118,117,114,112,111,109,
    173                                        106,105,104,102,99,97,94,92,91,88,85,84,82,79,77,74,73,70,68,65,
    174                                        64,61,58,55,53,50,47,45,43,41,39,37,35,34,32
    175          };*/ /* 
    176          uint8 refer_road_width[ROW] ={116,114,112,111,109,108,107,105,104,103,
    177                                        101,98,96,94,92,90,87,85,83,81,
    178                                        79,77,75,73,71,69,66,64,62,59,
    179                                        56,54,52,50,48,46,42,40,37,35,
    180                                        32,29,26,25,25,24,24,22,21,20
    181                                        
    182          }; 
    183          
    184          uint8 refer_road_width[ROW] ={129,128,127,125,123,121,121,120,119,119,
    185                                        118,116,116,113,110,108,108,105,102,99,
    186                                         98,97,95,92,90,89,87,84,79,76,
    187                                         75,72,70,68,67,65,61,58,55,53,
    188                                         51,49,45,43,42,40,38,36,32
    189                                        
    190          };  
    191          
    192          */
    193          

   \                                 In section .data, align 4
    194          uint8 refer_road_width[ROW] ={
   \                     refer_road_width:
   \   00000000   0x7E 0x7C          DC8 126, 124, 123, 122, 120, 118, 117, 114, 113, 112, 111, 109, 107
   \              0x7B 0x7A    
   \              0x78 0x76    
   \              0x75 0x72    
   \              0x71 0x70    
   \              0x6F 0x6D    
   \              0x6B         
   \   0000000D   0x69 0x68          DC8 105, 104, 101, 100, 97, 95, 93, 92, 90, 88, 86, 83, 81, 79, 77, 74
   \              0x65 0x64    
   \              0x61 0x5F    
   \              0x5D 0x5C    
   \              0x5A 0x58    
   \              0x56 0x53    
   \              0x51 0x4F    
   \              0x4D 0x4A    
   \   0000001D   0x48 0x47          DC8 72, 71, 69, 66, 63, 60, 56, 55, 54, 52, 48, 46, 43, 40, 37, 34, 33
   \              0x45 0x42    
   \              0x3F 0x3C    
   \              0x38 0x37    
   \              0x36 0x34    
   \              0x30 0x2E    
   \              0x2B 0x28    
   \              0x25 0x22    
   \              0x21         
   \   0000002E   0x20 0x1F          DC8 32, 31, 30, 29, 0, 0
   \              0x1E 0x1D    
   \              0x00 0x00    
    195                                        126,124,123,122,120,118,117,114,113,112,
    196                                        111,109,107,105,104,101,100,97,95,93,
    197                                        92,90,88,86,83,81,79,77,74,72,
    198                                        71,69,66,63,60,56,55,54,52,48,
    199                                        46,43,40,37,34,33,32,31,30,29
    200          };  

   \                                 In section .data, align 1
    201          uint8 OT=36;                                     //////判定为灰度值的跳变沿的最小灰度的跳变值
   \                     OT:
   \   00000000   0x24               DC8 36

   \                                 In section .data, align 1
    202          uint8 BASE_OT = 140;
   \                     BASE_OT:
   \   00000000   0x8C               DC8 140

   \                                 In section .data, align 1
    203          uint8 WHITE_BLACK_OT = 140;           //进行二值化的分界值
   \                     WHITE_BLACK_OT:
   \   00000000   0x8C               DC8 140
    204          #define WHITE 255
    205          #define BLACK 10
    206          

   \                                 In section .data, align 1
    207          uint8 top_whiteline = ROW-1;                          //图像的最顶行
   \                     top_whiteline:
   \   00000000   0x31               DC8 49

   \                                 In section .data, align 1
    208          uint8 left_top_whiteline = ROW-1;
   \                     left_top_whiteline:
   \   00000000   0x31               DC8 49

   \                                 In section .data, align 1
    209          uint8 right_top_whiteline = ROW-1;
   \                     right_top_whiteline:
   \   00000000   0x31               DC8 49
    210          

   \                                 In section .bss, align 1
    211          uint8 bottom_whitebase = 0;                       //图像的基准行 
   \                     bottom_whitebase:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    212          bool find_whitebase_flag = 0;  //基准行的标志位
   \                     find_whitebase_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    213          bool  tingting=0;
   \                     tingting:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    214          bool ting=0;
   \                     ting:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    215          bool ting_check_stop=0;
   \                     ting_check_stop:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    216          bool stop_special_flag=0;
   \                     stop_special_flag:
   \   00000000                      DS8 1
    217          

   \                                 In section .data, align 1
    218          int8 jump_stop=10;
   \                     jump_stop:
   \   00000000   0x0A               DC8 10

   \                                 In section .data, align 1
    219          uint8 re_white_refer = MID;  //这个点作为每场搜索基准行的开始的点  ，最开始的时候定义为 默认为MID
   \                     re_white_refer:
   \   00000000   0x4E               DC8 78

   \                                 In section .bss, align 1
    220          uint8 white_refer = 0;                            //基准行上的赛道的中点
   \                     white_refer:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    221          uint8 Row_state[ROW] =
   \                     Row_state:
   \   00000000                      DS8 52
    222          {
    223            0
    224          };
    225          //-------------------------------赛道处理的相关参数-----------------------//

   \                                 In section .bss, align 1
    226          uint8 S_right = 0;//向右拐的计数
   \                     S_right:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    227          uint8 S_left =0 ; //向左拐计数
   \                     S_left:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    228          uint8 S_straight = 0;
   \                     S_straight:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    229          uint8 direction = 0; //4是初始化的值
   \                     direction:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    230          uint8 re_direction = 0;//记录上一次的当有的时候，无法判断出赛道的类型的时候，用上一次的状态
   \                     re_direction:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    231          uint32 center_average = 0;
   \                     center_average:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    232          uint32 speed_center_average = 0;
   \                     speed_center_average:
   \   00000000                      DS8 4
    233          //uint16 center_error_average = 0;  

   \                                 In section .bss, align 4
    234          uint32 center_linear_average = 0;
   \                     center_linear_average:
   \   00000000                      DS8 4
    235               

   \                                 In section .data, align 2
    236          uint16 ramp_delay_time = 150;
   \                     ramp_delay_time:
   \   00000000   0x0096             DC16 150

   \                                 In section .bss, align 2
    237          uint16 ramp_time = 0;                //进入坡道后多长时间重新开启起跑线检测
   \                     ramp_time:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    238          uint16 ramp_dis_time = 0;       //防止下坡的误判而延时
   \                     ramp_dis_time:
   \   00000000                      DS8 2

   \                                 In section .data, align 2
    239          uint16 ramp_speed = 75;                    //坡道减速值70
   \                     ramp_speed:
   \   00000000   0x004B             DC16 75

   \                                 In section .bss, align 1
    240          bool ramp_flag = 0;                          //进入坡道标志,主要用于控制
   \                     ramp_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    241          bool ramp_dis_flag = 0;                     //主要是防止下坡误判
   \                     ramp_dis_flag:
   \   00000000                      DS8 1
    242           

   \                                 In section .bss, align 4
    243          float linear_factor = 0;
   \                     linear_factor:
   \   00000000                      DS8 4
    244          

   \                                 In section .bss, align 2
    245          int16 angle=0;
   \                     angle:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    246          int16 re_angle=0;
   \                     re_angle:
   \   00000000                      DS8 2
    247          
    248          

   \                                 In section .bss, align 2
    249          uint16 control_top_whiteline = 0; //re_control_top_whiteline top_error_servo_p
   \                     control_top_whiteline:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    250          uint16 danger_count = 0;  //记录危险的点数
   \                     danger_count:
   \   00000000                      DS8 2

   \                                 In section .data, align 1
    251          bool danger_flag = 1;  //这个的初始值为1.当出了控制最高行了则置为0；
   \                     danger_flag:
   \   00000000   0x01               DC8 1
    252           

   \                                 In section .bss, align 2
    253          int16 refer_error =0;
   \                     refer_error:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    254          uint16 center_average_a =0;
   \                     center_average_a:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    255          uint16 center_average_b = 0;
   \                     center_average_b:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    256          int16 re_refer_error = 0;
   \                     re_refer_error:
   \   00000000                      DS8 2
    257          

   \                                 In section .bss, align 4
    258          uint32 start_stop_count = 0;  //起跑线检测计数
   \                     start_stop_count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    259          bool stopflag = 0;//速度反馈
   \                     stopflag:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
    260          uint32 stop_pit_count = 8;
   \                     stop_pit_count:
   \   00000000   0x00000008         DC32 8

   \                                 In section .bss, align 1
    261          bool start_stop_en = 0;   //起跑线检测使能
   \                     start_stop_en:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    262          bool start_stop_cs =0;   //起跑线检测的片选信号   当为1的时候选中检测起跑线
   \                     start_stop_cs:
   \   00000000                      DS8 1
    263          

   \                                 In section .bss, align 2
    264          uint16 car_test_run = 0; 
   \                     car_test_run:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    265          bool test_run = 0;  
   \                     test_run:
   \   00000000                      DS8 1
    266          #define BUS_CLOCK  100  //(MHZ)50 82 90 100 105 110 115//这里设置的内核时钟等于总线时钟100M
    267          #define BAUD  19200    //波特率9600
    268          #define CORE_CLOCK 180

   \                                 In section .bss, align 2
    269            uint16 sumbel=0; 
   \                     sumbel:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    270             uint16 sumbe2=0; 
   \                     sumbe2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    271              uint16 sumbe3=0;
   \                     sumbe3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
    272            int16  angleout;
   \                     angleout:
   \   00000000                      DS8 2
    273          //-----串口功能选择----//

   \                                 In section .bss, align 1
    274          uint8 send_mes=0;              //根据上位机发送来的数据来选择不同的串口功能
   \                     send_mes:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    275          uint8 fanting=1;
   \                     fanting:
   \   00000000   0x01               DC8 1
    276          
    277          //-----串口功能选择----//

   \                                 In section .bss, align 1
    278          uint8 se1=0,se2=0,se3=0;
   \                     se1:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     se2:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     se3:
   \   00000000                      DS8 1
    279          

   \                                 In section .bss, align 2
    280          uint16 r_count=0;
   \                     r_count:
   \   00000000                      DS8 2

   \                                 In section .bss, align 1
    281          bool deal_r_flag=0;
   \                     deal_r_flag:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    282          bool response=1;
   \                     response:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 2
    283          uint16 Speed=0;
   \                     Speed:
   \   00000000                      DS8 2

   \                                 In section .data, align 1
    284          bool liu=1;
   \                     liu:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
    285          bool begin=0,begin2=0;
   \                     begin:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     begin2:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    286           bool bm3,feng;
   \                     bm3:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     feng:
   \   00000000                      DS8 1
    287          //int16 big=1100;
    288           //-----------------------------延迟-------------------------------//

   \                                 In section .text, align 2, keep-with-next
    289          void Delay_MS(uint32 ms)
    290          {
    291             while(ms--);
   \                     Delay_MS: (+1)
   \                     ??Delay_MS_0: (+1)
   \   00000000   0x0001             MOVS     R1,R0
   \   00000002   0x1E48             SUBS     R0,R1,#+1
   \   00000004   0x2900             CMP      R1,#+0
   \   00000006   0xD1FB             BNE.N    ??Delay_MS_0
    292          }
   \   00000008   0x4770             BX       LR               ;; return
    293          
    294          //---------------------------行中断捕捉端口初始化-------------------//

   \                                 In section .text, align 2, keep-with-next
    295          void EXIT_Init(void)
    296          {
    297               SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;  //开启B端口时钟
   \                     EXIT_Init: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable5  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable5  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    298              PORTB_PCR22 =PORT_PCR_MUX(1);  //GPIO
   \   00000010   0xF44F 0x7080      MOV      R0,#+256
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable5_1  ;; 0x4004a058
   \   00000018   0x6008             STR      R0,[R1, #+0]
    299              GPIOB_PDDR &= ~GPIO_PIN(22);   //输入
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable5_2  ;; 0x400ff054
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF430 0x0080      BICS     R0,R0,#0x400000
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable5_2  ;; 0x400ff054
   \   00000028   0x6008             STR      R0,[R1, #+0]
    300              PORTB_PCR22 |= PORT_PCR_PE_MASK | PORT_PCR_PS_MASK; //上拉电阻;
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable5_1  ;; 0x4004a058
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable5_1  ;; 0x4004a058
   \   00000038   0x6008             STR      R0,[R1, #+0]
    301              PORTB_PCR22 |= PORT_PCR_IRQC(9); //9为上升沿触发外部中断 10为下降沿触
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable5_1  ;; 0x4004a058
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF450 0x2010      ORRS     R0,R0,#0x90000
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable5_1  ;; 0x4004a058
   \   00000048   0x6008             STR      R0,[R1, #+0]
    302          }
   \   0000004A   0x4770             BX       LR               ;; return
    303          
    304          //---------------------------数组初始化--------------------------//

   \                                 In section .text, align 2, keep-with-next
    305          void Initial(void)
    306          {
    307            int16 i;
    308               for(i = 0;i < ROW;i++)
   \                     Initial: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x0008             MOVS     R0,R1
   \                     ??Initial_0: (+1)
   \   00000004   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000006   0x2832             CMP      R0,#+50
   \   00000008   0xDA15             BGE.N    ??Initial_1
    309                 {
    310                   left_black[i] = 0;
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000010   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000012   0x5481             STRB     R1,[R0, R2]
    311                   right_black[i] = 0;
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x.... 0x....      LDR.W    R2,??DataTable5_4
   \   0000001A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000001C   0x5481             STRB     R1,[R0, R2]
    312                   center_white[i] = 0;
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x.... 0x....      LDR.W    R2,??DataTable5_5
   \   00000024   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000026   0x5481             STRB     R1,[R0, R2]
    313                   Row_state[i] = 3; //3代表的是两边都没有出现丢点
   \   00000028   0x2103             MOVS     R1,#+3
   \   0000002A   0x.... 0x....      LDR.W    R2,??DataTable5_6
   \   0000002E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000030   0x5481             STRB     R1,[R0, R2]
    314                 }
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0xE7E6             B.N      ??Initial_0
    315                 start_stop_count = 0;
   \                     ??Initial_1: (+1)
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x.... 0x....      LDR.W    R2,??DataTable5_7
   \   0000003C   0x6011             STR      R1,[R2, #+0]
    316                 ramp_dis_flag = 0;
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x.... 0x....      LDR.W    R2,??DataTable5_8
   \   00000044   0x7011             STRB     R1,[R2, #+0]
    317                 ramp_flag = 0;
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0x.... 0x....      LDR.W    R2,??DataTable5_9
   \   0000004C   0x7011             STRB     R1,[R2, #+0]
    318          }
   \   0000004E   0x4770             BX       LR               ;; return
    319          
    320                                                                                     
    321          /*1.端口初始化*/

   \                                 In section .text, align 2, keep-with-next
    322           void GIPO_init()
    323           {   
   \                     GIPO_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    324              gpio_init (PORTB , 10, GPO, HIGH);
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210A             MOVS     R1,#+10
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x.... 0x....      BL       gpio_init
    325              //gpio_init (PORTB , 6, GPO,LOW);
    326                gpio_init (PORTA , 16, GPO, HIGH);
   \   0000000E   0x2301             MOVS     R3,#+1
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x2110             MOVS     R1,#+16
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       gpio_init
    327                 gpio_init (PORTA , 17, GPO, HIGH);
   \   0000001A   0x2301             MOVS     R3,#+1
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x2111             MOVS     R1,#+17
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       gpio_init
    328                 
    329               gpio_init (PORTA, 27, GPI, HIGH);//boma
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x211B             MOVS     R1,#+27
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       gpio_init
    330                gpio_init (PORTA, 26, GPI, HIGH);
   \   00000032   0x2301             MOVS     R3,#+1
   \   00000034   0x2200             MOVS     R2,#+0
   \   00000036   0x211A             MOVS     R1,#+26
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      BL       gpio_init
    331                gpio_init (PORTA, 25, GPI, HIGH);
   \   0000003E   0x2301             MOVS     R3,#+1
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x2119             MOVS     R1,#+25
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x.... 0x....      BL       gpio_init
    332                gpio_init (PORTA, 24, GPI, HIGH);
   \   0000004A   0x2301             MOVS     R3,#+1
   \   0000004C   0x2200             MOVS     R2,#+0
   \   0000004E   0x2118             MOVS     R1,#+24
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      BL       gpio_init
    333                
    334                //gpio_init (PORTB, 10, GPO, HIGH);//蜂鸣器
    335           
    336              PORTE_PCR0 = PORT_PCR_MUX(1)| PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//E4引脚设置为GPIO模式
   \   00000056   0xF240 0x1003      MOVW     R0,#+259
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable5_10  ;; 0x4004d000
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    337              PORTE_PCR1 = PORT_PCR_MUX(1)| PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//E5引脚设置为GPIO模式
   \   00000060   0xF240 0x1003      MOVW     R0,#+259
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable5_11  ;; 0x4004d004
   \   00000068   0x6008             STR      R0,[R1, #+0]
    338              PORTE_PCR2 = PORT_PCR_MUX(1)| PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//E6引脚设置为GPIO模式
   \   0000006A   0xF240 0x1003      MOVW     R0,#+259
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable5_12  ;; 0x4004d008
   \   00000072   0x6008             STR      R0,[R1, #+0]
    339              PORTE_PCR3 = PORT_PCR_MUX(1)| PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//E7引脚设置为GPIO模式
   \   00000074   0xF240 0x1003      MOVW     R0,#+259
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable5_13  ;; 0x4004d00c
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    340              PORTE_PCR4 = PORT_PCR_MUX(1)| PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//E8引脚设置为GPIO模式
   \   0000007E   0xF240 0x1003      MOVW     R0,#+259
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable5_14  ;; 0x4004d010
   \   00000086   0x6008             STR      R0,[R1, #+0]
    341              PORTE_PCR5 = PORT_PCR_MUX(1)| PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//E9引脚设置为GPIO模式
   \   00000088   0xF240 0x1003      MOVW     R0,#+259
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable5_15  ;; 0x4004d014
   \   00000090   0x6008             STR      R0,[R1, #+0]
    342              PORTE_PCR6 = PORT_PCR_MUX(1)| PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//E10引脚设置为GPIO模式
   \   00000092   0xF240 0x1003      MOVW     R0,#+259
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable5_16  ;; 0x4004d018
   \   0000009A   0x6008             STR      R0,[R1, #+0]
    343              PORTE_PCR7 = PORT_PCR_MUX(1)| PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//E11引脚设置为GPIO模式
   \   0000009C   0xF240 0x1003      MOVW     R0,#+259
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable5_17  ;; 0x4004d01c
   \   000000A4   0x6008             STR      R0,[R1, #+0]
    344                   
    345                  GPIOE_PDDR = 0xffffff00;  //E0~E7设置为输入口 
   \   000000A6   0xF07F 0x00FF      MVNS     R0,#+255
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable5_18  ;; 0x400ff114
   \   000000AE   0x6008             STR      R0,[R1, #+0]
    346                  
    347                  PORTB_PCR20 = PORT_PCR_MUX(1) | PORT_PCR_PE_MASK |  PORT_PCR_PS_MASK;//PTB20引脚设置为GPIO模式 上拉
   \   000000B0   0xF240 0x1003      MOVW     R0,#+259
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable5_19  ;; 0x4004a050
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    348                  GPIOB_PDDR = 0xffefff00;  //PTB20设置为输入
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable5_20  ;; 0xffefff00
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable5_2  ;; 0x400ff054
   \   000000C2   0x6008             STR      R0,[R1, #+0]
    349            }
   \   000000C4   0xBD01             POP      {R0,PC}          ;; return
    350            
    351          /*2.陀螺仪初始化*/
    352           

   \                                 In section .text, align 2, keep-with-next
    353           void init_gyro()
    354           {
   \                     init_gyro: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    355                  int i=0;
   \   00000002   0x2600             MOVS     R6,#+0
    356                  adc_start(ADC1, AD10, ADC_10bit );
   \   00000004   0x2202             MOVS     R2,#+2
   \   00000006   0x210A             MOVS     R1,#+10
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x.... 0x....      BL       adc_start
    357                  
    358                  for(i=0;i<10;i++)
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x0006             MOVS     R6,R0
   \                     ??init_gyro_0: (+1)
   \   00000012   0x2E0A             CMP      R6,#+10
   \   00000014   0xDA21             BGE.N    ??init_gyro_1
    359                  {
    360             
    361                  
    362                  
    363           	GYRO_STATIC =ad_ave(ADC1, AD10, ADC_10bit, 100)*3.22265625+GYRO_STATIC;   //16精度* 0.050354
   \   00000016   0x2364             MOVS     R3,#+100
   \   00000018   0x2202             MOVS     R2,#+2
   \   0000001A   0x210A             MOVS     R1,#+10
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x.... 0x....      BL       ad_ave
   \   00000022   0x.... 0x....      BL       __aeabi_f2d
   \   00000026   0x2200             MOVS     R2,#+0
   \   00000028   0x.... 0x....      LDR.W    R3,??DataTable5_21  ;; 0x4009c800
   \   0000002C   0x.... 0x....      BL       __aeabi_dmul
   \   00000030   0x0004             MOVS     R4,R0
   \   00000032   0x000D             MOVS     R5,R1
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable5_22
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x.... 0x....      BL       __aeabi_f2d
   \   0000003E   0x0022             MOVS     R2,R4
   \   00000040   0x002B             MOVS     R3,R5
   \   00000042   0x.... 0x....      BL       __aeabi_dadd
   \   00000046   0x.... 0x....      BL       __aeabi_d2f
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable5_22
   \   0000004E   0x6008             STR      R0,[R1, #+0]
    364                  
    365                  Delay_MS(100);
   \   00000050   0x2064             MOVS     R0,#+100
   \   00000052   0x.... 0x....      BL       Delay_MS
    366                  
    367                  
    368           	}
   \   00000056   0x1C76             ADDS     R6,R6,#+1
   \   00000058   0xE7DB             B.N      ??init_gyro_0
    369                  adc_stop(ADC1);
   \                     ??init_gyro_1: (+1)
   \   0000005A   0x2001             MOVS     R0,#+1
   \   0000005C   0x.... 0x....      BL       adc_stop
    370                  GYRO_STATIC=GYRO_STATIC/10.0;
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable5_22
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x.... 0x....      BL       __aeabi_f2d
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0x.... 0x....      LDR.W    R3,??DataTable5_23  ;; 0x40240000
   \   00000070   0x.... 0x....      BL       __aeabi_ddiv
   \   00000074   0x.... 0x....      BL       __aeabi_d2f
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable5_22
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    371           }
   \   0000007E   0xBD70             POP      {R4-R6,PC}       ;; return
    372          
    373          

   \                                 In section .text, align 2, keep-with-next
    374          void sensor_init()
    375          {
   \                     sensor_init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    376              adc_init(ADC1, AD10);
   \   00000002   0x210A             MOVS     R1,#+10
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0x.... 0x....      BL       adc_init
    377            adc_init(ADC1, AD11);
   \   0000000A   0x210B             MOVS     R1,#+11
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      BL       adc_init
    378              adc_init(ADC0, AD14);
   \   00000012   0x210E             MOVS     R1,#+14
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       adc_init
    379          
    380          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
    381          
    382          
    383          
    384          /*------------------------------------------------------------------------------
    385                                                  小函数                                                 
    386          ------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    387          int abs(int num)     //绝对值函数
    388          {
    389                   if(num<0)
   \                     abs: (+1)
   \   00000000   0x2800             CMP      R0,#+0
   \   00000002   0xD501             BPL.N    ??abs_0
    390                       return -num;
   \   00000004   0x4240             RSBS     R0,R0,#+0
   \   00000006   0xE7FF             B.N      ??abs_1
    391                   else
    392                       return num;
   \                     ??abs_0: (+1)
   \                     ??abs_1: (+1)
   \   00000008   0x4770             BX       LR               ;; return
    393          }
    394          

   \                                 In section .text, align 2, keep-with-next
    395          int16 f_abs16(int16 x)
    396          {
    397            if(x>0) return x;
   \                     f_abs16: (+1)
   \   00000000   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000002   0x2801             CMP      R0,#+1
   \   00000004   0xDB01             BLT.N    ??f_abs16_0
   \   00000006   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000008   0xE002             B.N      ??f_abs16_1
    398            else return -x;
   \                     ??f_abs16_0: (+1)
   \   0000000A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000000C   0x4240             RSBS     R0,R0,#+0
   \   0000000E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \                     ??f_abs16_1: (+1)
   \   00000010   0x4770             BX       LR               ;; return
    399          }
    400          

   \                                 In section .text, align 2, keep-with-next
    401          float f_absf(float x)
    402          {
   \                     f_absf: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    403              if(x>=0.0) return x;
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000008   0xD901             BLS.N    ??f_absf_0
    404              else  return -x;
   \                     ??f_absf_1: (+1)
   \   0000000A   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \                     ??f_absf_0: (+1)
   \   0000000E   0xBD02             POP      {R1,PC}          ;; return
    405          }
    406          

   \                                 In section .text, align 2, keep-with-next
    407          int MIN_INT( int a, int b)
    408          {
   \                     MIN_INT: (+1)
   \   00000000   0x0002             MOVS     R2,R0
    409              if(a>b) return b;
   \   00000002   0x4291             CMP      R1,R2
   \   00000004   0xDA01             BGE.N    ??MIN_INT_0
   \   00000006   0x0008             MOVS     R0,R1
   \   00000008   0xE000             B.N      ??MIN_INT_1
    410              else  return a;
   \                     ??MIN_INT_0: (+1)
   \   0000000A   0x0010             MOVS     R0,R2
   \                     ??MIN_INT_1: (+1)
   \   0000000C   0x4770             BX       LR               ;; return
    411          }
    412          

   \                                 In section .bss, align 2
    413          uint16 counter=0;
   \                     counter:
   \   00000000                      DS8 2

   \                                 In section .text, align 2, keep-with-next
    414          void stop_special(void)              //非正常情况停车
    415          {
   \                     stop_special: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    416              int i=0,j=0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
    417              
    418              if(jump_stop>0 ) jump_stop--;
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable5_24
   \   0000000A   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xDB07             BLT.N    ??stop_special_0
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable5_24
   \   00000016   0x7800             LDRB     R0,[R0, #+0]
   \   00000018   0x1E40             SUBS     R0,R0,#+1
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable5_24
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
   \   00000020   0xE02B             B.N      ??stop_special_1
    419              else
    420              { 
    421                for(i=0;i<COLUMN;i++)  
   \                     ??stop_special_0: (+1)
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x0004             MOVS     R4,R0
   \                     ??stop_special_2: (+1)
   \   00000026   0x2C9D             CMP      R4,#+157
   \   00000028   0xDA0C             BGE.N    ??stop_special_3
    422                {
    423                  if( VideoImage2[3][i]<=WHITE_BLACK_OT) 
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable5_25
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable5_26
   \   00000034   0x1861             ADDS     R1,R4,R1
   \   00000036   0xF891 0x11D7      LDRB     R1,[R1, #+471]
   \   0000003A   0x4288             CMP      R0,R1
   \   0000003C   0xD300             BCC.N    ??stop_special_4
    424                    j++;
   \   0000003E   0x1C6D             ADDS     R5,R5,#+1
    425                }
   \                     ??stop_special_4: (+1)
   \   00000040   0x1C64             ADDS     R4,R4,#+1
   \   00000042   0xE7F0             B.N      ??stop_special_2
    426                
    427                if(j>85) counter++;
   \                     ??stop_special_3: (+1)
   \   00000044   0x2D56             CMP      R5,#+86
   \   00000046   0xDB07             BLT.N    ??stop_special_5
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable5_27
   \   0000004C   0x8800             LDRH     R0,[R0, #+0]
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable5_27
   \   00000054   0x8008             STRH     R0,[R1, #+0]
   \   00000056   0xE003             B.N      ??stop_special_6
    428                else   counter=0;
   \                     ??stop_special_5: (+1)
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable5_27
   \   0000005E   0x8008             STRH     R0,[R1, #+0]
    429                if(counter>10)  
   \                     ??stop_special_6: (+1)
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable5_27
   \   00000064   0x8800             LDRH     R0,[R0, #+0]
   \   00000066   0x280B             CMP      R0,#+11
   \   00000068   0xDB07             BLT.N    ??stop_special_1
    430                {
    431                  ting=1;
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable5_28
   \   00000070   0x7008             STRB     R0,[R1, #+0]
    432                  counter=0;
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable5_27
   \   00000078   0x8008             STRH     R0,[R1, #+0]
    433                }
    434              }
    435              
    436              //---------------------角度判断停车
    437              if(g_nCarAngle>da||g_nCarAngle<-fuxiao)
   \                     ??stop_special_1: (+1)
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable5_29
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x.... 0x....      BL       __aeabi_ui2f
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable5_30
   \   00000088   0x6809             LDR      R1,[R1, #+0]
   \   0000008A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000008E   0xD30C             BCC.N    ??stop_special_7
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable5_31
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x4240             RSBS     R0,R0,#+0
   \   00000098   0x.... 0x....      BL       __aeabi_i2f
   \   0000009C   0x0001             MOVS     R1,R0
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable5_30
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000A8   0xD203             BCS.N    ??stop_special_8
    438              {
    439                   ting=1; 
   \                     ??stop_special_7: (+1)
   \   000000AA   0x2001             MOVS     R0,#+1
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable5_28
   \   000000B0   0x7008             STRB     R0,[R1, #+0]
    440              }/* */
    441          }
   \                     ??stop_special_8: (+1)
   \   000000B2   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    442          
    443          //-----------------------------------扫描白线基准线---------------------------------//
    444          /*
    445          1、由于赛道的宽度在图像中所占的比例较大，故可认为在中点的位置（79处）就一定是在赛道中，
    446          ，除非车子跑出了赛道，而不需要考虑中心偏离赛道的情况。
    447          */

   \                                 In section .text, align 2, keep-with-next
    448          void Search_WhiteBase(void)   //从图像底部中间开始向两边扫描白线基准
    449          { 
   \                     Search_WhiteBase: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    450            uint8 i = 0,j = 0 ;//定义十六位的有符号变量   i代表行变量  j代表列变量
   \   00000002   0x2500             MOVS     R5,#+0
   \   00000004   0x2600             MOVS     R6,#+0
    451           uint8 base_sum = 0; 
   \   00000006   0x2400             MOVS     R4,#+0
    452            current_deal_line=0;                //记录在搜索基准行的时候的当前处理的行 
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable5_32
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    453            bottom_whitebase = 0;//基准行赋初值  int
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable5_33
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    454            find_whitebase_flag = 0;               //是否发现白线基准标志
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable5_34
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
    455          
    456            //////////////////////////////滤波开始///////////////////////////////////  
    457          //首先对整幅图像进行滤波，采用的方法是中值滤波
    458           for(i = 0;i < 5;i++)                 //只是对图像前几行进行滤波，原因是远处的滤波可能会把跑道的信息滤除掉这里对赛道的前13行滤波
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x0005             MOVS     R5,R0
   \                     ??Search_WhiteBase_0: (+1)
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x2D05             CMP      R5,#+5
   \   00000028   0xDA3C             BGE.N    ??Search_WhiteBase_1
    459              for(j = 1;j< COLUMN-1;j++) 
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x0006             MOVS     R6,R0
   \                     ??Search_WhiteBase_2: (+1)
   \   0000002E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000030   0x2E9C             CMP      R6,#+156
   \   00000032   0xDA35             BGE.N    ??Search_WhiteBase_3
    460              {
    461                  base_sum = (VideoImage1[i][j-1] + VideoImage1[i][j+1])/ 2;
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable5_35
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x219D             MOVS     R1,#+157
   \   0000003C   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   00000040   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000042   0x1830             ADDS     R0,R6,R0
   \   00000044   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   0000004C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004E   0x229D             MOVS     R2,#+157
   \   00000050   0xFB02 0x1105      MLA      R1,R2,R5,R1
   \   00000054   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000056   0x1871             ADDS     R1,R6,R1
   \   00000058   0x7849             LDRB     R1,[R1, #+1]
   \   0000005A   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   0000005E   0x2102             MOVS     R1,#+2
   \   00000060   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000064   0x0004             MOVS     R4,R0
    462                  if( f_abs16( base_sum - VideoImage1[i][j]) > OT)
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable5_35
   \   0000006C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006E   0x219D             MOVS     R1,#+157
   \   00000070   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   00000074   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000076   0x5C30             LDRB     R0,[R6, R0]
   \   00000078   0x1A20             SUBS     R0,R4,R0
   \   0000007A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000007C   0x.... 0x....      BL       f_abs16
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable5_36
   \   00000084   0x7809             LDRB     R1,[R1, #+0]
   \   00000086   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000088   0x4281             CMP      R1,R0
   \   0000008A   0xDA07             BGE.N    ??Search_WhiteBase_4
    463                     VideoImage1[i][j] = base_sum;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable5_35
   \   00000090   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000092   0x219D             MOVS     R1,#+157
   \   00000094   0xFB01 0x0005      MLA      R0,R1,R5,R0
   \   00000098   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000009A   0x5434             STRB     R4,[R6, R0]
    464              }  //滤波可能带来一个后果，就是可能把远处的边沿线滤除掉，这里只是对近端进行滤波
   \                     ??Search_WhiteBase_4: (+1)
   \   0000009C   0x1C76             ADDS     R6,R6,#+1
   \   0000009E   0xE7C6             B.N      ??Search_WhiteBase_2
   \                     ??Search_WhiteBase_3: (+1)
   \   000000A0   0x1C6D             ADDS     R5,R5,#+1
   \   000000A2   0xE7BF             B.N      ??Search_WhiteBase_0
    465           
    466            
    467            /*////////////////////////对图像上的噪点进行滤除//////////////   限幅滤波会带来一个后果，导致跳变沿检测出现问题，跳变太小
    468            for(i = 0;i < ROW ;i++)                 //图像上突然的出现了很多的噪点，这个程序是为了将图像上的这些噪点滤除。经过验证效果很好
    469              for(j = 0;j< COLUMN;j++)
    470              {
    471                if(VideoImage1[i][j] >245 || VideoImage1[i][j]<10)
    472                {
    473                  if( j>0 && j < COLUMN - 1)
    474                  {
    475                    VideoImage1[i][j] = (VideoImage1[i][j+1] + VideoImage1[i][j-1])/2;
    476                  }
    477                  else
    478                  {
    479                    if( i>0 && i < ROW - 1)
    480                    VideoImage1[i][j] =  (VideoImage1[i+1][j] +  VideoImage1[i-1][j])/2;
    481                  }
    482                }
    483              }
    484          *////////////////////////////滤波结束////////////////////////////////
    485            
    486            /*对于搜索基准行最重要的就是解决搜索的开始点的问题，这个点找到了，其他的问题就好解决了*/
    487            if(VideoImage1[0][re_white_refer] > BASE_OT && VideoImage1[0][re_white_refer-1] >BASE_OT && VideoImage1[0][re_white_refer+1]>BASE_OT)
   \                     ??Search_WhiteBase_1: (+1)
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000000AE   0x.... 0x....      LDR.W    R2,??DataTable5_38
   \   000000B2   0x7812             LDRB     R2,[R2, #+0]
   \   000000B4   0x5C51             LDRB     R1,[R2, R1]
   \   000000B6   0x4288             CMP      R0,R1
   \   000000B8   0xD21F             BCS.N    ??Search_WhiteBase_5
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   000000BE   0x7800             LDRB     R0,[R0, #+0]
   \   000000C0   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000000C4   0x.... 0x....      LDR.W    R2,??DataTable5_38
   \   000000C8   0x7812             LDRB     R2,[R2, #+0]
   \   000000CA   0x1851             ADDS     R1,R2,R1
   \   000000CC   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000000D0   0x4288             CMP      R0,R1
   \   000000D2   0xD212             BCS.N    ??Search_WhiteBase_5
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   000000D8   0x7800             LDRB     R0,[R0, #+0]
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000000DE   0x.... 0x....      LDR.W    R2,??DataTable5_38
   \   000000E2   0x7812             LDRB     R2,[R2, #+0]
   \   000000E4   0x1851             ADDS     R1,R2,R1
   \   000000E6   0x7849             LDRB     R1,[R1, #+1]
   \   000000E8   0x4288             CMP      R0,R1
   \   000000EA   0xD206             BCS.N    ??Search_WhiteBase_5
    488            {
    489              whitebase_searchstart = re_white_refer;
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable5_38
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable5_39
   \   000000F6   0x7008             STRB     R0,[R1, #+0]
   \   000000F8   0xE09B             B.N      ??Search_WhiteBase_6
    490            }
    491            else
    492            {
    493              j = MID-1;//从MID开始搜索基准行的开始点
   \                     ??Search_WhiteBase_5: (+1)
   \   000000FA   0x204D             MOVS     R0,#+77
   \   000000FC   0x0006             MOVS     R6,R0
    494              left_whitebase_searchstart = MID-1;
   \   000000FE   0x204D             MOVS     R0,#+77
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable5_40
   \   00000104   0x7008             STRB     R0,[R1, #+0]
    495              while(j > 10)
   \                     ??Search_WhiteBase_7: (+1)
   \   00000106   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000108   0x2E0B             CMP      R6,#+11
   \   0000010A   0xDB3A             BLT.N    ??Search_WhiteBase_8
    496              {
    497                if(VideoImage1[0][j] > BASE_OT && VideoImage1[0][j-1] > BASE_OT &&VideoImage1[0][j-2]>BASE_OT
    498                   &&VideoImage1[0][j-3] >BASE_OT &&VideoImage1[0][j-4]>BASE_OT)
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   00000110   0x7800             LDRB     R0,[R0, #+0]
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   00000116   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000118   0x5C71             LDRB     R1,[R6, R1]
   \   0000011A   0x4288             CMP      R0,R1
   \   0000011C   0xD22F             BCS.N    ??Search_WhiteBase_9
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   00000122   0x7800             LDRB     R0,[R0, #+0]
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   00000128   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000012A   0x1871             ADDS     R1,R6,R1
   \   0000012C   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000130   0x4288             CMP      R0,R1
   \   00000132   0xD224             BCS.N    ??Search_WhiteBase_9
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   00000138   0x7800             LDRB     R0,[R0, #+0]
   \   0000013A   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   0000013E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000140   0x1871             ADDS     R1,R6,R1
   \   00000142   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000146   0x4288             CMP      R0,R1
   \   00000148   0xD219             BCS.N    ??Search_WhiteBase_9
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   0000014E   0x7800             LDRB     R0,[R0, #+0]
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   00000154   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000156   0x1871             ADDS     R1,R6,R1
   \   00000158   0xF811 0x1C03      LDRB     R1,[R1, #-3]
   \   0000015C   0x4288             CMP      R0,R1
   \   0000015E   0xD20E             BCS.N    ??Search_WhiteBase_9
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   00000164   0x7800             LDRB     R0,[R0, #+0]
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   0000016A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000016C   0x1871             ADDS     R1,R6,R1
   \   0000016E   0xF811 0x1C04      LDRB     R1,[R1, #-4]
   \   00000172   0x4288             CMP      R0,R1
   \   00000174   0xD203             BCS.N    ??Search_WhiteBase_9
    499                {
    500                  left_whitebase_searchstart = j;
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable5_40
   \   0000017A   0x7006             STRB     R6,[R0, #+0]
    501                  break;
   \   0000017C   0xE001             B.N      ??Search_WhiteBase_8
    502                }
    503                j--;
   \                     ??Search_WhiteBase_9: (+1)
   \   0000017E   0x1E76             SUBS     R6,R6,#+1
   \   00000180   0xE7C1             B.N      ??Search_WhiteBase_7
    504              }
    505              /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    506              j = MID+1; 
   \                     ??Search_WhiteBase_8: (+1)
   \   00000182   0x204F             MOVS     R0,#+79
   \   00000184   0x0006             MOVS     R6,R0
    507              right_whitebase_searchstart = MID+1;
   \   00000186   0x204F             MOVS     R0,#+79
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable5_41
   \   0000018C   0x7008             STRB     R0,[R1, #+0]
    508              while(j < 150)
   \                     ??Search_WhiteBase_10: (+1)
   \   0000018E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000190   0x2E96             CMP      R6,#+150
   \   00000192   0xDA36             BGE.N    ??Search_WhiteBase_11
    509              {
    510                 if(VideoImage1[0][j] > BASE_OT && VideoImage1[0][j+1] > BASE_OT && VideoImage1[0][j+2]>BASE_OT
    511                   && VideoImage1[0][j+3] > BASE_OT &&VideoImage1[0][j+4] > BASE_OT)
   \   00000194   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   00000198   0x7800             LDRB     R0,[R0, #+0]
   \   0000019A   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   0000019E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001A0   0x5C71             LDRB     R1,[R6, R1]
   \   000001A2   0x4288             CMP      R0,R1
   \   000001A4   0xD22B             BCS.N    ??Search_WhiteBase_12
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   000001AA   0x7800             LDRB     R0,[R0, #+0]
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000001B0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001B2   0x1871             ADDS     R1,R6,R1
   \   000001B4   0x7849             LDRB     R1,[R1, #+1]
   \   000001B6   0x4288             CMP      R0,R1
   \   000001B8   0xD221             BCS.N    ??Search_WhiteBase_12
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   000001BE   0x7800             LDRB     R0,[R0, #+0]
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000001C4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001C6   0x1871             ADDS     R1,R6,R1
   \   000001C8   0x7889             LDRB     R1,[R1, #+2]
   \   000001CA   0x4288             CMP      R0,R1
   \   000001CC   0xD217             BCS.N    ??Search_WhiteBase_12
   \   000001CE   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   000001D2   0x7800             LDRB     R0,[R0, #+0]
   \   000001D4   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000001D8   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001DA   0x1871             ADDS     R1,R6,R1
   \   000001DC   0x78C9             LDRB     R1,[R1, #+3]
   \   000001DE   0x4288             CMP      R0,R1
   \   000001E0   0xD20D             BCS.N    ??Search_WhiteBase_12
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable5_37
   \   000001E6   0x7800             LDRB     R0,[R0, #+0]
   \   000001E8   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000001EC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001EE   0x1871             ADDS     R1,R6,R1
   \   000001F0   0x7909             LDRB     R1,[R1, #+4]
   \   000001F2   0x4288             CMP      R0,R1
   \   000001F4   0xD203             BCS.N    ??Search_WhiteBase_12
    512                {
    513                  right_whitebase_searchstart = j;
   \   000001F6   0x.... 0x....      LDR.W    R0,??DataTable5_41
   \   000001FA   0x7006             STRB     R6,[R0, #+0]
    514                  break;
   \   000001FC   0xE001             B.N      ??Search_WhiteBase_11
    515                }
    516                j++;
   \                     ??Search_WhiteBase_12: (+1)
   \   000001FE   0x1C76             ADDS     R6,R6,#+1
   \   00000200   0xE7C5             B.N      ??Search_WhiteBase_10
    517              }
    518              
    519              if(right_whitebase_searchstart-MID > MID-left_whitebase_searchstart)
   \                     ??Search_WhiteBase_11: (+1)
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable5_40
   \   00000206   0x7800             LDRB     R0,[R0, #+0]
   \   00000208   0xF1D0 0x004E      RSBS     R0,R0,#+78
   \   0000020C   0x.... 0x....      LDR.W    R1,??DataTable5_41
   \   00000210   0x7809             LDRB     R1,[R1, #+0]
   \   00000212   0x394E             SUBS     R1,R1,#+78
   \   00000214   0x4288             CMP      R0,R1
   \   00000216   0xDA06             BGE.N    ??Search_WhiteBase_13
    520              {
    521                whitebase_searchstart  = left_whitebase_searchstart;
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable5_40
   \   0000021C   0x7800             LDRB     R0,[R0, #+0]
   \   0000021E   0x.... 0x....      LDR.W    R1,??DataTable5_39
   \   00000222   0x7008             STRB     R0,[R1, #+0]
   \   00000224   0xE005             B.N      ??Search_WhiteBase_6
    522              }
    523                
    524              else
    525              {
    526                whitebase_searchstart = right_whitebase_searchstart;
   \                     ??Search_WhiteBase_13: (+1)
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable5_41
   \   0000022A   0x7800             LDRB     R0,[R0, #+0]
   \   0000022C   0x.... 0x....      LDR.W    R1,??DataTable5_39
   \   00000230   0x7008             STRB     R0,[R1, #+0]
    527              }
    528            } 
    529            
    530            
    531            
    532            while( find_whitebase_flag ==0 && current_deal_line < ROW - 1) //基准行的搜索范围从0到ROW-1 
   \                     ??Search_WhiteBase_6: (+1)
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable5_34
   \   00000236   0x7800             LDRB     R0,[R0, #+0]
   \   00000238   0x2800             CMP      R0,#+0
   \   0000023A   0xF040 0x823B      BNE.W    ??Search_WhiteBase_14
   \   0000023E   0x.... 0x....      LDR.W    R0,??DataTable5_32
   \   00000242   0x7800             LDRB     R0,[R0, #+0]
   \   00000244   0x2831             CMP      R0,#+49
   \   00000246   0xF280 0x8235      BGE.W    ??Search_WhiteBase_14
    533            {
    534                //每行的处理清零
    535                whitepoint_start = whitebase_searchstart;   //uint8 
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable5_39
   \   0000024E   0x7800             LDRB     R0,[R0, #+0]
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable5_42
   \   00000254   0x7008             STRB     R0,[R1, #+0]
    536                //搜索左边的基准边沿/////////////////////////////
    537                 j = whitebase_searchstart;   //有的时候出现前一行的中点在下一行的图像的外面
   \   00000256   0x.... 0x....      LDR.W    R0,??DataTable5_39
   \   0000025A   0x7800             LDRB     R0,[R0, #+0]
   \   0000025C   0x0006             MOVS     R6,R0
    538                 //每次从上一场的基准的中点开始向两边搜索基准行
    539                 while(j >= 3  )//一般为了使得跳变沿更加的明显，采用隔点判断
   \                     ??Search_WhiteBase_15: (+1)
   \   0000025E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000260   0x2E03             CMP      R6,#+3
   \   00000262   0xDB5A             BLT.N    ??Search_WhiteBase_16
    540                {
    541                  
    542                    if( whitepoint_start != whitebase_searchstart && f_abs16(j-re_whitepoint_start) > f_abs16(whitepoint_start -re_whitepoint_start) )
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable5_42
   \   00000268   0x7800             LDRB     R0,[R0, #+0]
   \   0000026A   0x.... 0x....      LDR.W    R1,??DataTable5_39
   \   0000026E   0x7809             LDRB     R1,[R1, #+0]
   \   00000270   0x4288             CMP      R0,R1
   \   00000272   0xD015             BEQ.N    ??Search_WhiteBase_17
   \   00000274   0x.... 0x....      LDR.W    R0,??DataTable5_42
   \   00000278   0x7800             LDRB     R0,[R0, #+0]
   \   0000027A   0x.... 0x....      LDR.W    R1,??DataTable5_43
   \   0000027E   0x7809             LDRB     R1,[R1, #+0]
   \   00000280   0x1A40             SUBS     R0,R0,R1
   \   00000282   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000284   0x.... 0x....      BL       f_abs16
   \   00000288   0x0007             MOVS     R7,R0
   \   0000028A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable5_43
   \   00000290   0x7800             LDRB     R0,[R0, #+0]
   \   00000292   0x1A30             SUBS     R0,R6,R0
   \   00000294   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000296   0x.... 0x....      BL       f_abs16
   \   0000029A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000029C   0x4287             CMP      R7,R0
   \   0000029E   0xDB3C             BLT.N    ??Search_WhiteBase_16
    543                    {
    544                      break;
    545                    }
    546                    else if(VideoImage1[current_deal_line][j] - VideoImage1[current_deal_line][j-2] > OT 
    547                       && VideoImage1[current_deal_line][j] - VideoImage1[current_deal_line][j-3] > OT
    548                         )
   \                     ??Search_WhiteBase_17: (+1)
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable5_36
   \   000002A4   0x7800             LDRB     R0,[R0, #+0]
   \   000002A6   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000002AA   0x.... 0x....      LDR.W    R2,??DataTable5_32
   \   000002AE   0x7812             LDRB     R2,[R2, #+0]
   \   000002B0   0x239D             MOVS     R3,#+157
   \   000002B2   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   000002B6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000002B8   0x5C71             LDRB     R1,[R6, R1]
   \   000002BA   0x.... 0x....      LDR.W    R2,??DataTable5_35
   \   000002BE   0x.... 0x....      LDR.W    R3,??DataTable5_32
   \   000002C2   0x781B             LDRB     R3,[R3, #+0]
   \   000002C4   0x279D             MOVS     R7,#+157
   \   000002C6   0xFB07 0x2203      MLA      R2,R7,R3,R2
   \   000002CA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000002CC   0x18B2             ADDS     R2,R6,R2
   \   000002CE   0xF812 0x2C02      LDRB     R2,[R2, #-2]
   \   000002D2   0x1A89             SUBS     R1,R1,R2
   \   000002D4   0x4288             CMP      R0,R1
   \   000002D6   0xDA1E             BGE.N    ??Search_WhiteBase_18
   \   000002D8   0x.... 0x....      LDR.W    R0,??DataTable5_36
   \   000002DC   0x7800             LDRB     R0,[R0, #+0]
   \   000002DE   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   000002E2   0x.... 0x....      LDR.W    R2,??DataTable5_32
   \   000002E6   0x7812             LDRB     R2,[R2, #+0]
   \   000002E8   0x239D             MOVS     R3,#+157
   \   000002EA   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   000002EE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000002F0   0x5C71             LDRB     R1,[R6, R1]
   \   000002F2   0x.... 0x....      LDR.W    R2,??DataTable5_35
   \   000002F6   0x.... 0x....      LDR.W    R3,??DataTable5_32
   \   000002FA   0x781B             LDRB     R3,[R3, #+0]
   \   000002FC   0x279D             MOVS     R7,#+157
   \   000002FE   0xFB07 0x2203      MLA      R2,R7,R3,R2
   \   00000302   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000304   0x18B2             ADDS     R2,R6,R2
   \   00000306   0xF812 0x2C03      LDRB     R2,[R2, #-3]
   \   0000030A   0x1A89             SUBS     R1,R1,R2
   \   0000030C   0x4288             CMP      R0,R1
   \   0000030E   0xDA02             BGE.N    ??Search_WhiteBase_18
    549                    {//当第一个if不满足的时候说明此时的j到上一场的点的距离一定小于 f_abs16(whitepoint_start -re_whitepoint_start) 
    550                      //所以这里只要遇到了跳变，就给基准行的起始点赋值
    551                         whitepoint_start = j;
   \   00000310   0x.... 0x....      LDR.W    R0,??DataTable5_42
   \   00000314   0x7006             STRB     R6,[R0, #+0]
    552                    }
    553                    j--;
   \                     ??Search_WhiteBase_18: (+1)
   \   00000316   0x1E76             SUBS     R6,R6,#+1
   \   00000318   0xE7A1             B.N      ??Search_WhiteBase_15
    554                }
    555                
    556                if( j == 2  && whitepoint_start == whitebase_searchstart)  //到达边界了，但是还没有对whitepoint_start赋值过，说明没有找到基准的开始点
   \                     ??Search_WhiteBase_16: (+1)
   \   0000031A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000031C   0x2E02             CMP      R6,#+2
   \   0000031E   0xD14F             BNE.N    ??Search_WhiteBase_19
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable5_42
   \   00000324   0x7800             LDRB     R0,[R0, #+0]
   \   00000326   0x.... 0x....      LDR.W    R1,??DataTable5_39
   \   0000032A   0x7809             LDRB     R1,[R1, #+0]
   \   0000032C   0x4288             CMP      R0,R1
   \   0000032E   0xD147             BNE.N    ??Search_WhiteBase_19
    557                {
    558                  if(VideoImage1[current_deal_line][j] - VideoImage1[current_deal_line][j-2] > OT)
   \   00000330   0x.... 0x....      LDR.W    R0,??DataTable5_36
   \   00000334   0x7800             LDRB     R0,[R0, #+0]
   \   00000336   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   0000033A   0x.... 0x....      LDR.W    R2,??DataTable5_32
   \   0000033E   0x7812             LDRB     R2,[R2, #+0]
   \   00000340   0x239D             MOVS     R3,#+157
   \   00000342   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   00000346   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000348   0x5C71             LDRB     R1,[R6, R1]
   \   0000034A   0x.... 0x....      LDR.W    R2,??DataTable5_35
   \   0000034E   0x.... 0x....      LDR.W    R3,??DataTable5_32
   \   00000352   0x781B             LDRB     R3,[R3, #+0]
   \   00000354   0x279D             MOVS     R7,#+157
   \   00000356   0xFB07 0x2203      MLA      R2,R7,R3,R2
   \   0000035A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000035C   0x18B2             ADDS     R2,R6,R2
   \   0000035E   0xF812 0x2C02      LDRB     R2,[R2, #-2]
   \   00000362   0x1A89             SUBS     R1,R1,R2
   \   00000364   0x4288             CMP      R0,R1
   \   00000366   0xDA04             BGE.N    ??Search_WhiteBase_20
    559                  {
    560                     whitepoint_start = 2; //到达了边界
   \   00000368   0x2002             MOVS     R0,#+2
   \   0000036A   0x.... 0x....      LDR.W    R1,??DataTable5_42
   \   0000036E   0x7008             STRB     R0,[R1, #+0]
   \   00000370   0xE026             B.N      ??Search_WhiteBase_19
    561                  }
    562                  else if( VideoImage1[current_deal_line][j-1] - VideoImage1[current_deal_line][j-2] > OT)
   \                     ??Search_WhiteBase_20: (+1)
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable5_36
   \   00000376   0x7800             LDRB     R0,[R0, #+0]
   \   00000378   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   0000037C   0x.... 0x....      LDR.W    R2,??DataTable5_32
   \   00000380   0x7812             LDRB     R2,[R2, #+0]
   \   00000382   0x239D             MOVS     R3,#+157
   \   00000384   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   00000388   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000038A   0x1871             ADDS     R1,R6,R1
   \   0000038C   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000390   0x.... 0x....      LDR.W    R2,??DataTable5_35
   \   00000394   0x.... 0x....      LDR.W    R3,??DataTable5_32
   \   00000398   0x781B             LDRB     R3,[R3, #+0]
   \   0000039A   0x279D             MOVS     R7,#+157
   \   0000039C   0xFB07 0x2203      MLA      R2,R7,R3,R2
   \   000003A0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000003A2   0x18B2             ADDS     R2,R6,R2
   \   000003A4   0xF812 0x2C02      LDRB     R2,[R2, #-2]
   \   000003A8   0x1A89             SUBS     R1,R1,R2
   \   000003AA   0x4288             CMP      R0,R1
   \   000003AC   0xDA04             BGE.N    ??Search_WhiteBase_21
    563                  {
    564                     whitepoint_start = 1; //到达了边界
   \   000003AE   0x2001             MOVS     R0,#+1
   \   000003B0   0x.... 0x....      LDR.W    R1,??DataTable5_42
   \   000003B4   0x7008             STRB     R0,[R1, #+0]
   \   000003B6   0xE003             B.N      ??Search_WhiteBase_19
    565                  }
    566                  else
    567                  { 
    568                     whitepoint_start = 0;
   \                     ??Search_WhiteBase_21: (+1)
   \   000003B8   0x2000             MOVS     R0,#+0
   \   000003BA   0x.... 0x....      LDR.W    R1,??DataTable5_42
   \   000003BE   0x7008             STRB     R0,[R1, #+0]
    569                  }
    570                }
    571                //左边搜索结束///////////////////////
    572                
    573                //右边搜索开始/////////////////////
    574                whitepoint_end = whitebase_searchstart;    //uint8
   \                     ??Search_WhiteBase_19: (+1)
   \   000003C0   0x.... 0x....      LDR.W    R0,??DataTable5_39
   \   000003C4   0x7800             LDRB     R0,[R0, #+0]
   \   000003C6   0x.... 0x....      LDR.W    R1,??DataTable5_44
   \   000003CA   0x7008             STRB     R0,[R1, #+0]
    575                j = whitebase_searchstart;   //每次从上一场的white_refer向两边搜索基准行
   \   000003CC   0x.... 0x....      LDR.W    R0,??DataTable5_39
   \   000003D0   0x7800             LDRB     R0,[R0, #+0]
   \   000003D2   0x0006             MOVS     R6,R0
    576                while( j <= COLUMN-4 )//一般为了使得跳变沿更加的明显，采用隔点判断
   \                     ??Search_WhiteBase_22: (+1)
   \   000003D4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000003D6   0x2E9A             CMP      R6,#+154
   \   000003D8   0xDA58             BGE.N    ??Search_WhiteBase_23
    577                {
    578                 
    579                    if( whitepoint_end != whitebase_searchstart && f_abs16(j-re_whitepoint_end) > f_abs16(whitepoint_end -re_whitepoint_end) )
   \   000003DA   0x.... 0x....      LDR.W    R0,??DataTable5_44
   \   000003DE   0x7800             LDRB     R0,[R0, #+0]
   \   000003E0   0x.... 0x....      LDR.W    R1,??DataTable5_39
   \   000003E4   0x7809             LDRB     R1,[R1, #+0]
   \   000003E6   0x4288             CMP      R0,R1
   \   000003E8   0xD015             BEQ.N    ??Search_WhiteBase_24
   \   000003EA   0x.... 0x....      LDR.W    R0,??DataTable5_44
   \   000003EE   0x7800             LDRB     R0,[R0, #+0]
   \   000003F0   0x.... 0x....      LDR.W    R1,??DataTable5_45
   \   000003F4   0x7809             LDRB     R1,[R1, #+0]
   \   000003F6   0x1A40             SUBS     R0,R0,R1
   \   000003F8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003FA   0x.... 0x....      BL       f_abs16
   \   000003FE   0x0007             MOVS     R7,R0
   \   00000400   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable5_45
   \   00000406   0x7800             LDRB     R0,[R0, #+0]
   \   00000408   0x1A30             SUBS     R0,R6,R0
   \   0000040A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000040C   0x.... 0x....      BL       f_abs16
   \   00000410   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000412   0x4287             CMP      R7,R0
   \   00000414   0xDB3A             BLT.N    ??Search_WhiteBase_23
    580                    {
    581                       break;
    582                    }//1.不同
    583                    else if(VideoImage1[current_deal_line][j] - VideoImage1[current_deal_line][j+2] > OT
    584                          && VideoImage1[current_deal_line][j] - VideoImage1[current_deal_line][j+3] > OT)
   \                     ??Search_WhiteBase_24: (+1)
   \   00000416   0x.... 0x....      LDR.W    R0,??DataTable5_36
   \   0000041A   0x7800             LDRB     R0,[R0, #+0]
   \   0000041C   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   00000420   0x.... 0x....      LDR.W    R2,??DataTable5_32
   \   00000424   0x7812             LDRB     R2,[R2, #+0]
   \   00000426   0x239D             MOVS     R3,#+157
   \   00000428   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   0000042C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000042E   0x5C71             LDRB     R1,[R6, R1]
   \   00000430   0x.... 0x....      LDR.W    R2,??DataTable5_35
   \   00000434   0x.... 0x....      LDR.W    R3,??DataTable5_32
   \   00000438   0x781B             LDRB     R3,[R3, #+0]
   \   0000043A   0x279D             MOVS     R7,#+157
   \   0000043C   0xFB07 0x2203      MLA      R2,R7,R3,R2
   \   00000440   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000442   0x18B2             ADDS     R2,R6,R2
   \   00000444   0x7892             LDRB     R2,[R2, #+2]
   \   00000446   0x1A89             SUBS     R1,R1,R2
   \   00000448   0x4288             CMP      R0,R1
   \   0000044A   0xDA1D             BGE.N    ??Search_WhiteBase_25
   \   0000044C   0x.... 0x....      LDR.W    R0,??DataTable5_36
   \   00000450   0x7800             LDRB     R0,[R0, #+0]
   \   00000452   0x.... 0x....      LDR.W    R1,??DataTable5_35
   \   00000456   0x.... 0x....      LDR.W    R2,??DataTable5_32
   \   0000045A   0x7812             LDRB     R2,[R2, #+0]
   \   0000045C   0x239D             MOVS     R3,#+157
   \   0000045E   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   00000462   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000464   0x5C71             LDRB     R1,[R6, R1]
   \   00000466   0x.... 0x....      LDR.W    R2,??DataTable5_35
   \   0000046A   0x.... 0x....      LDR.W    R3,??DataTable5_32
   \   0000046E   0x781B             LDRB     R3,[R3, #+0]
   \   00000470   0x279D             MOVS     R7,#+157
   \   00000472   0xFB07 0x2203      MLA      R2,R7,R3,R2
   \   00000476   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000478   0x18B2             ADDS     R2,R6,R2
   \   0000047A   0x78D2             LDRB     R2,[R2, #+3]
   \   0000047C   0x1A89             SUBS     R1,R1,R2
   \   0000047E   0x4288             CMP      R0,R1
   \   00000480   0xDA02             BGE.N    ??Search_WhiteBase_25
    585                    {
    586                       whitepoint_end = j;
   \   00000482   0x.... 0x....      LDR.W    R0,??DataTable5_44
   \   00000486   0x7006             STRB     R6,[R0, #+0]
    587                    } 
    588                    j++;
   \                     ??Search_WhiteBase_25: (+1)
   \   00000488   0x1C76             ADDS     R6,R6,#+1
   \   0000048A   0xE7A3             B.N      ??Search_WhiteBase_22
    589                } 
    590                
    591                if(j == COLUMN-3  &&   whitepoint_end == whitebase_searchstart)
   \                     ??Search_WhiteBase_23: (+1)
   \   0000048C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000048E   0x2E9A             CMP      R6,#+154
   \   00000490   0xD13E             BNE.N    ??Search_WhiteBase_26
   \   00000492   0x.... 0x....      LDR.W    R0,??DataTable5_44
   \   00000496   0x7800             LDRB     R0,[R0, #+0]
   \   00000498   0x....             LDR.N    R1,??DataTable5_39
   \   0000049A   0x7809             LDRB     R1,[R1, #+0]
   \   0000049C   0x4288             CMP      R0,R1
   \   0000049E   0xD137             BNE.N    ??Search_WhiteBase_26
    592                {
    593                   if( VideoImage1[current_deal_line][j] - VideoImage1[current_deal_line][j+2] > OT)
   \   000004A0   0x....             LDR.N    R0,??DataTable5_36
   \   000004A2   0x7800             LDRB     R0,[R0, #+0]
   \   000004A4   0x....             LDR.N    R1,??DataTable5_35
   \   000004A6   0x....             LDR.N    R2,??DataTable5_32
   \   000004A8   0x7812             LDRB     R2,[R2, #+0]
   \   000004AA   0x239D             MOVS     R3,#+157
   \   000004AC   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   000004B0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000004B2   0x5C71             LDRB     R1,[R6, R1]
   \   000004B4   0x....             LDR.N    R2,??DataTable5_35
   \   000004B6   0x....             LDR.N    R3,??DataTable5_32
   \   000004B8   0x781B             LDRB     R3,[R3, #+0]
   \   000004BA   0x279D             MOVS     R7,#+157
   \   000004BC   0xFB07 0x2203      MLA      R2,R7,R3,R2
   \   000004C0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000004C2   0x18B2             ADDS     R2,R6,R2
   \   000004C4   0x7892             LDRB     R2,[R2, #+2]
   \   000004C6   0x1A89             SUBS     R1,R1,R2
   \   000004C8   0x4288             CMP      R0,R1
   \   000004CA   0xDA03             BGE.N    ??Search_WhiteBase_27
    594                   {
    595                     whitepoint_end = COLUMN-3;
   \   000004CC   0x209A             MOVS     R0,#+154
   \   000004CE   0x....             LDR.N    R1,??DataTable5_44
   \   000004D0   0x7008             STRB     R0,[R1, #+0]
   \   000004D2   0xE01D             B.N      ??Search_WhiteBase_26
    596                   }
    597                   else if( VideoImage1[current_deal_line][j+1] - VideoImage1[current_deal_line][j+2] > OT)
   \                     ??Search_WhiteBase_27: (+1)
   \   000004D4   0x....             LDR.N    R0,??DataTable5_36
   \   000004D6   0x7800             LDRB     R0,[R0, #+0]
   \   000004D8   0x....             LDR.N    R1,??DataTable5_35
   \   000004DA   0x....             LDR.N    R2,??DataTable5_32
   \   000004DC   0x7812             LDRB     R2,[R2, #+0]
   \   000004DE   0x239D             MOVS     R3,#+157
   \   000004E0   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   000004E4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000004E6   0x1871             ADDS     R1,R6,R1
   \   000004E8   0x7849             LDRB     R1,[R1, #+1]
   \   000004EA   0x....             LDR.N    R2,??DataTable5_35
   \   000004EC   0x....             LDR.N    R3,??DataTable5_32
   \   000004EE   0x781B             LDRB     R3,[R3, #+0]
   \   000004F0   0x279D             MOVS     R7,#+157
   \   000004F2   0xFB07 0x2203      MLA      R2,R7,R3,R2
   \   000004F6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000004F8   0x18B2             ADDS     R2,R6,R2
   \   000004FA   0x7892             LDRB     R2,[R2, #+2]
   \   000004FC   0x1A89             SUBS     R1,R1,R2
   \   000004FE   0x4288             CMP      R0,R1
   \   00000500   0xDA03             BGE.N    ??Search_WhiteBase_28
    598                   {
    599                     whitepoint_end = COLUMN-2;
   \   00000502   0x209B             MOVS     R0,#+155
   \   00000504   0x....             LDR.N    R1,??DataTable5_44
   \   00000506   0x7008             STRB     R0,[R1, #+0]
   \   00000508   0xE002             B.N      ??Search_WhiteBase_26
    600                   }
    601                   else
    602                   {
    603                     whitepoint_end = COLUMN-1;
   \                     ??Search_WhiteBase_28: (+1)
   \   0000050A   0x209C             MOVS     R0,#+156
   \   0000050C   0x....             LDR.N    R1,??DataTable5_44
   \   0000050E   0x7008             STRB     R0,[R1, #+0]
    604                   }
    605                }
    606                //右边搜索结束///////////////////////
    607                //左右边沿线的搜索方法用的是跟踪的搜索方法，目的是只想找到一行可靠的基准行的信息
    608                
    609                
    610                //无论这一行是否符合要求，始终记录赛道信息
    611          
    612                  left_black[current_deal_line] = whitepoint_start;   //记录左黑线位置 (若为0，很可能说明左边黑线丢失，即车身偏右)
   \                     ??Search_WhiteBase_26: (+1)
   \   00000510   0x....             LDR.N    R0,??DataTable5_42
   \   00000512   0x7800             LDRB     R0,[R0, #+0]
   \   00000514   0x....             LDR.N    R1,??DataTable5_3
   \   00000516   0x....             LDR.N    R2,??DataTable5_32
   \   00000518   0x7812             LDRB     R2,[R2, #+0]
   \   0000051A   0x5450             STRB     R0,[R2, R1]
    613                  right_black[current_deal_line] = whitepoint_end;    //记录右黑线位置(若为COLUMN，很可能说明右边黑线丢失,即车身偏左)
   \   0000051C   0x....             LDR.N    R0,??DataTable5_44
   \   0000051E   0x7800             LDRB     R0,[R0, #+0]
   \   00000520   0x....             LDR.N    R1,??DataTable5_4
   \   00000522   0x....             LDR.N    R2,??DataTable5_32
   \   00000524   0x7812             LDRB     R2,[R2, #+0]
   \   00000526   0x5450             STRB     R0,[R2, R1]
    614                  /*对于第一行的状态的判断有两种想法，第一：无论第一行是什么状态始终认为没有丢点 第二：将到达边沿的点视为丢点
    615                  此外这里需要对上面的三个值进行一定的修正，并且在这里将基准行上的状态设定为没有丢点（即使有时候到达了边界）。
    616                  （否则，这里的跟踪搜索的优势就没有了）
    617                  */
    618                  if(left_black[current_deal_line] == 0 && right_black[current_deal_line] < COLUMN - 1 &&  (right_black[current_deal_line] - left_black[current_deal_line]) > 155)  
   \   00000528   0x....             LDR.N    R0,??DataTable5_3
   \   0000052A   0x....             LDR.N    R1,??DataTable5_32
   \   0000052C   0x7809             LDRB     R1,[R1, #+0]
   \   0000052E   0x5C08             LDRB     R0,[R1, R0]
   \   00000530   0x2800             CMP      R0,#+0
   \   00000532   0xD127             BNE.N    ??Search_WhiteBase_29
   \   00000534   0x....             LDR.N    R0,??DataTable5_4
   \   00000536   0x....             LDR.N    R1,??DataTable5_32
   \   00000538   0x7809             LDRB     R1,[R1, #+0]
   \   0000053A   0x5C08             LDRB     R0,[R1, R0]
   \   0000053C   0x289C             CMP      R0,#+156
   \   0000053E   0xDA21             BGE.N    ??Search_WhiteBase_29
   \   00000540   0x....             LDR.N    R0,??DataTable5_4
   \   00000542   0x....             LDR.N    R1,??DataTable5_32
   \   00000544   0x7809             LDRB     R1,[R1, #+0]
   \   00000546   0x5C08             LDRB     R0,[R1, R0]
   \   00000548   0x....             LDR.N    R1,??DataTable5_3
   \   0000054A   0x....             LDR.N    R2,??DataTable5_32
   \   0000054C   0x7812             LDRB     R2,[R2, #+0]
   \   0000054E   0x5C51             LDRB     R1,[R2, R1]
   \   00000550   0x1A40             SUBS     R0,R0,R1
   \   00000552   0x289C             CMP      R0,#+156
   \   00000554   0xDB16             BLT.N    ??Search_WhiteBase_29
    619                  {  //表示左边到达边界 丢点                                                               //////////////////////////////////////？？？？？？？/////////////////////////////////////
    620                    
    621                    left_black[current_deal_line] = re_whitepoint_start;         
   \   00000556   0x....             LDR.N    R0,??DataTable5_43
   \   00000558   0x7800             LDRB     R0,[R0, #+0]
   \   0000055A   0x....             LDR.N    R1,??DataTable5_3
   \   0000055C   0x....             LDR.N    R2,??DataTable5_32
   \   0000055E   0x7812             LDRB     R2,[R2, #+0]
   \   00000560   0x5450             STRB     R0,[R2, R1]
    622                    center_white[current_deal_line] = (left_black[current_deal_line] +  right_black[current_deal_line]) / 2; 
   \   00000562   0x....             LDR.N    R0,??DataTable5_3
   \   00000564   0x....             LDR.N    R1,??DataTable5_32
   \   00000566   0x7809             LDRB     R1,[R1, #+0]
   \   00000568   0x5C08             LDRB     R0,[R1, R0]
   \   0000056A   0x....             LDR.N    R1,??DataTable5_4
   \   0000056C   0x....             LDR.N    R2,??DataTable5_32
   \   0000056E   0x7812             LDRB     R2,[R2, #+0]
   \   00000570   0x5C51             LDRB     R1,[R2, R1]
   \   00000572   0x1808             ADDS     R0,R1,R0
   \   00000574   0x2102             MOVS     R1,#+2
   \   00000576   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000057A   0x....             LDR.N    R1,??DataTable5_5
   \   0000057C   0x....             LDR.N    R2,??DataTable5_32
   \   0000057E   0x7812             LDRB     R2,[R2, #+0]
   \   00000580   0x5450             STRB     R0,[R2, R1]
   \   00000582   0xE05C             B.N      ??Search_WhiteBase_30
    623                  }
    624                  else if(right_black[current_deal_line] == COLUMN - 1 && left_black[current_deal_line] > 0 &&  (right_black[current_deal_line] - left_black[current_deal_line]) > 155)
   \                     ??Search_WhiteBase_29: (+1)
   \   00000584   0x....             LDR.N    R0,??DataTable5_4
   \   00000586   0x....             LDR.N    R1,??DataTable5_32
   \   00000588   0x7809             LDRB     R1,[R1, #+0]
   \   0000058A   0x5C08             LDRB     R0,[R1, R0]
   \   0000058C   0x289C             CMP      R0,#+156
   \   0000058E   0xD127             BNE.N    ??Search_WhiteBase_31
   \   00000590   0x....             LDR.N    R0,??DataTable5_3
   \   00000592   0x....             LDR.N    R1,??DataTable5_32
   \   00000594   0x7809             LDRB     R1,[R1, #+0]
   \   00000596   0x5C08             LDRB     R0,[R1, R0]
   \   00000598   0x2800             CMP      R0,#+0
   \   0000059A   0xD021             BEQ.N    ??Search_WhiteBase_31
   \   0000059C   0x....             LDR.N    R0,??DataTable5_4
   \   0000059E   0x....             LDR.N    R1,??DataTable5_32
   \   000005A0   0x7809             LDRB     R1,[R1, #+0]
   \   000005A2   0x5C08             LDRB     R0,[R1, R0]
   \   000005A4   0x....             LDR.N    R1,??DataTable5_3
   \   000005A6   0x....             LDR.N    R2,??DataTable5_32
   \   000005A8   0x7812             LDRB     R2,[R2, #+0]
   \   000005AA   0x5C51             LDRB     R1,[R2, R1]
   \   000005AC   0x1A40             SUBS     R0,R0,R1
   \   000005AE   0x289C             CMP      R0,#+156
   \   000005B0   0xDB16             BLT.N    ??Search_WhiteBase_31
    625                  { //表示右边到达边界 丢点
    626                     right_black[current_deal_line] = re_whitepoint_end;
   \   000005B2   0x....             LDR.N    R0,??DataTable5_45
   \   000005B4   0x7800             LDRB     R0,[R0, #+0]
   \   000005B6   0x....             LDR.N    R1,??DataTable5_4
   \   000005B8   0x....             LDR.N    R2,??DataTable5_32
   \   000005BA   0x7812             LDRB     R2,[R2, #+0]
   \   000005BC   0x5450             STRB     R0,[R2, R1]
    627                   center_white[current_deal_line] = (left_black[current_deal_line] +  right_black[current_deal_line]) / 2;  //记录中心点,大于MID说明车身偏左，反之，说明车身偏右
   \   000005BE   0x....             LDR.N    R0,??DataTable5_3
   \   000005C0   0x....             LDR.N    R1,??DataTable5_32
   \   000005C2   0x7809             LDRB     R1,[R1, #+0]
   \   000005C4   0x5C08             LDRB     R0,[R1, R0]
   \   000005C6   0x....             LDR.N    R1,??DataTable5_4
   \   000005C8   0x....             LDR.N    R2,??DataTable5_32
   \   000005CA   0x7812             LDRB     R2,[R2, #+0]
   \   000005CC   0x5C51             LDRB     R1,[R2, R1]
   \   000005CE   0x1808             ADDS     R0,R1,R0
   \   000005D0   0x2102             MOVS     R1,#+2
   \   000005D2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000005D6   0x....             LDR.N    R1,??DataTable5_5
   \   000005D8   0x....             LDR.N    R2,??DataTable5_32
   \   000005DA   0x7812             LDRB     R2,[R2, #+0]
   \   000005DC   0x5450             STRB     R0,[R2, R1]
   \   000005DE   0xE02E             B.N      ??Search_WhiteBase_30
    628                  }
    629                  else if(right_black[current_deal_line] == COLUMN - 1 && left_black[current_deal_line] == 0 )
   \                     ??Search_WhiteBase_31: (+1)
   \   000005E0   0x....             LDR.N    R0,??DataTable5_4
   \   000005E2   0x....             LDR.N    R1,??DataTable5_32
   \   000005E4   0x7809             LDRB     R1,[R1, #+0]
   \   000005E6   0x5C08             LDRB     R0,[R1, R0]
   \   000005E8   0x289C             CMP      R0,#+156
   \   000005EA   0xD118             BNE.N    ??Search_WhiteBase_32
   \   000005EC   0x....             LDR.N    R0,??DataTable5_3
   \   000005EE   0x....             LDR.N    R1,??DataTable5_32
   \   000005F0   0x7809             LDRB     R1,[R1, #+0]
   \   000005F2   0x5C08             LDRB     R0,[R1, R0]
   \   000005F4   0x2800             CMP      R0,#+0
   \   000005F6   0xD112             BNE.N    ??Search_WhiteBase_32
    630                  {//表示两边到达边界 丢点
    631                    left_black[current_deal_line] = re_whitepoint_start;
   \   000005F8   0x....             LDR.N    R0,??DataTable5_43
   \   000005FA   0x7800             LDRB     R0,[R0, #+0]
   \   000005FC   0x....             LDR.N    R1,??DataTable5_3
   \   000005FE   0x....             LDR.N    R2,??DataTable5_32
   \   00000600   0x7812             LDRB     R2,[R2, #+0]
   \   00000602   0x5450             STRB     R0,[R2, R1]
    632                    right_black[current_deal_line] = re_whitepoint_end;
   \   00000604   0x....             LDR.N    R0,??DataTable5_45
   \   00000606   0x7800             LDRB     R0,[R0, #+0]
   \   00000608   0x....             LDR.N    R1,??DataTable5_4
   \   0000060A   0x....             LDR.N    R2,??DataTable5_32
   \   0000060C   0x7812             LDRB     R2,[R2, #+0]
   \   0000060E   0x5450             STRB     R0,[R2, R1]
    633                    center_white[current_deal_line] = re_white_refer;
   \   00000610   0x....             LDR.N    R0,??DataTable5_38
   \   00000612   0x7800             LDRB     R0,[R0, #+0]
   \   00000614   0x....             LDR.N    R1,??DataTable5_5
   \   00000616   0x....             LDR.N    R2,??DataTable5_32
   \   00000618   0x7812             LDRB     R2,[R2, #+0]
   \   0000061A   0x5450             STRB     R0,[R2, R1]
   \   0000061C   0xE00F             B.N      ??Search_WhiteBase_30
    634                  }
    635                  //说明由于前三行的信息一般不做处理默认为左右边沿都找到了的点 
    636                  else
    637                  {  //表示两边都没有丢点
    638                    center_white[current_deal_line] = (left_black[current_deal_line] +  right_black[current_deal_line]) / 2;  //记录中心点,大于MID说明车身偏左，反之，说明车身偏右
   \                     ??Search_WhiteBase_32: (+1)
   \   0000061E   0x....             LDR.N    R0,??DataTable5_3
   \   00000620   0x....             LDR.N    R1,??DataTable5_32
   \   00000622   0x7809             LDRB     R1,[R1, #+0]
   \   00000624   0x5C08             LDRB     R0,[R1, R0]
   \   00000626   0x....             LDR.N    R1,??DataTable5_4
   \   00000628   0x....             LDR.N    R2,??DataTable5_32
   \   0000062A   0x7812             LDRB     R2,[R2, #+0]
   \   0000062C   0x5C51             LDRB     R1,[R2, R1]
   \   0000062E   0x1808             ADDS     R0,R1,R0
   \   00000630   0x2102             MOVS     R1,#+2
   \   00000632   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000636   0x....             LDR.N    R1,??DataTable5_5
   \   00000638   0x....             LDR.N    R2,??DataTable5_32
   \   0000063A   0x7812             LDRB     R2,[R2, #+0]
   \   0000063C   0x5450             STRB     R0,[R2, R1]
    639                  }
    640                  //处理后重新得到图像搜索的开始结束及中心值
    641                whitepoint_start = left_black[current_deal_line];
   \                     ??Search_WhiteBase_30: (+1)
   \   0000063E   0x....             LDR.N    R0,??DataTable5_3
   \   00000640   0x....             LDR.N    R1,??DataTable5_32
   \   00000642   0x7809             LDRB     R1,[R1, #+0]
   \   00000644   0x5C08             LDRB     R0,[R1, R0]
   \   00000646   0x....             LDR.N    R1,??DataTable5_42
   \   00000648   0x7008             STRB     R0,[R1, #+0]
    642                whitepoint_end =  right_black[current_deal_line];
   \   0000064A   0x....             LDR.N    R0,??DataTable5_4
   \   0000064C   0x....             LDR.N    R1,??DataTable5_32
   \   0000064E   0x7809             LDRB     R1,[R1, #+0]
   \   00000650   0x5C08             LDRB     R0,[R1, R0]
   \   00000652   0x....             LDR.N    R1,??DataTable5_44
   \   00000654   0x7008             STRB     R0,[R1, #+0]
    643                white_refer = center_white[current_deal_line];
   \   00000656   0x....             LDR.N    R0,??DataTable5_5
   \   00000658   0x....             LDR.N    R1,??DataTable5_32
   \   0000065A   0x7809             LDRB     R1,[R1, #+0]
   \   0000065C   0x5C08             LDRB     R0,[R1, R0]
   \   0000065E   0x....             LDR.N    R1,??DataTable5_46
   \   00000660   0x7008             STRB     R0,[R1, #+0]
    644                
    645                  //加上一个赛道的宽度的限制
    646                 if(whitepoint_end - whitepoint_start > MIN_WHITEBASE_POINT ) //这个值设置为20 
   \   00000662   0x....             LDR.N    R0,??DataTable5_44
   \   00000664   0x7800             LDRB     R0,[R0, #+0]
   \   00000666   0x....             LDR.N    R1,??DataTable5_42
   \   00000668   0x7809             LDRB     R1,[R1, #+0]
   \   0000066A   0x1A40             SUBS     R0,R0,R1
   \   0000066C   0x281F             CMP      R0,#+31
   \   0000066E   0xDB18             BLT.N    ??Search_WhiteBase_33
    647                  {
    648                    find_whitebase_flag = 1;
   \   00000670   0x2001             MOVS     R0,#+1
   \   00000672   0x....             LDR.N    R1,??DataTable5_34
   \   00000674   0x7008             STRB     R0,[R1, #+0]
    649                    re_white_refer = white_refer;  //保存本场图像的信息
   \   00000676   0x....             LDR.N    R0,??DataTable5_46
   \   00000678   0x7800             LDRB     R0,[R0, #+0]
   \   0000067A   0x....             LDR.N    R1,??DataTable5_38
   \   0000067C   0x7008             STRB     R0,[R1, #+0]
    650                    re_whitepoint_start = whitepoint_start;
   \   0000067E   0x....             LDR.N    R0,??DataTable5_42
   \   00000680   0x7800             LDRB     R0,[R0, #+0]
   \   00000682   0x....             LDR.N    R1,??DataTable5_43
   \   00000684   0x7008             STRB     R0,[R1, #+0]
    651                    re_whitepoint_end  = whitepoint_end ;
   \   00000686   0x....             LDR.N    R0,??DataTable5_44
   \   00000688   0x7800             LDRB     R0,[R0, #+0]
   \   0000068A   0x....             LDR.N    R1,??DataTable5_45
   \   0000068C   0x7008             STRB     R0,[R1, #+0]
    652                    bottom_whitebase = current_deal_line;//记录基准行
   \   0000068E   0x....             LDR.N    R0,??DataTable5_32
   \   00000690   0x7800             LDRB     R0,[R0, #+0]
   \   00000692   0x....             LDR.N    R1,??DataTable5_33
   \   00000694   0x7008             STRB     R0,[R1, #+0]
    653                    Row_state[bottom_whitebase] = 3; //行的状态标志位
   \   00000696   0x2003             MOVS     R0,#+3
   \   00000698   0x....             LDR.N    R1,??DataTable5_6
   \   0000069A   0x....             LDR.N    R2,??DataTable5_33
   \   0000069C   0x7812             LDRB     R2,[R2, #+0]
   \   0000069E   0x5450             STRB     R0,[R2, R1]
   \   000006A0   0xE5C7             B.N      ??Search_WhiteBase_6
    654                  }
    655                  else
    656                  {
    657                    find_whitebase_flag = 0;
   \                     ??Search_WhiteBase_33: (+1)
   \   000006A2   0x2000             MOVS     R0,#+0
   \   000006A4   0x....             LDR.N    R1,??DataTable5_34
   \   000006A6   0x7008             STRB     R0,[R1, #+0]
    658                    current_deal_line++;
   \   000006A8   0x....             LDR.N    R0,??DataTable5_32
   \   000006AA   0x7800             LDRB     R0,[R0, #+0]
   \   000006AC   0x1C40             ADDS     R0,R0,#+1
   \   000006AE   0x....             LDR.N    R1,??DataTable5_32
   \   000006B0   0x7008             STRB     R0,[R1, #+0]
   \   000006B2   0xE5BE             B.N      ??Search_WhiteBase_6
    659                  }
    660                  
    661            }//while循环的结束
    662            if(bottom_whitebase > 0)
   \                     ??Search_WhiteBase_14: (+1)
   \   000006B4   0x....             LDR.N    R0,??DataTable5_33
   \   000006B6   0x7800             LDRB     R0,[R0, #+0]
   \   000006B8   0x2800             CMP      R0,#+0
   \   000006BA   0xD014             BEQ.N    ??Search_WhiteBase_34
    663            {
    664               for( i = 0 ; i < bottom_whitebase ;i++)////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \   000006BC   0x2000             MOVS     R0,#+0
   \   000006BE   0x0005             MOVS     R5,R0
   \                     ??Search_WhiteBase_35: (+1)
   \   000006C0   0x....             LDR.N    R0,??DataTable5_33
   \   000006C2   0x7800             LDRB     R0,[R0, #+0]
   \   000006C4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006C6   0x4285             CMP      R5,R0
   \   000006C8   0xD20D             BCS.N    ??Search_WhiteBase_34
    665               {//对之前的行进行标记
    666                  center_white[i] = MID;  
   \   000006CA   0x204E             MOVS     R0,#+78
   \   000006CC   0x....             LDR.N    R1,??DataTable5_5
   \   000006CE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006D0   0x5468             STRB     R0,[R5, R1]
    667                  left_black[i] = MID - 2;   
   \   000006D2   0x204C             MOVS     R0,#+76
   \   000006D4   0x....             LDR.N    R1,??DataTable5_3
   \   000006D6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006D8   0x5468             STRB     R0,[R5, R1]
    668                  right_black[i] = MID + 2;  
   \   000006DA   0x2050             MOVS     R0,#+80
   \   000006DC   0x....             LDR.N    R1,??DataTable5_4
   \   000006DE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006E0   0x5468             STRB     R0,[R5, R1]
    669               }
   \   000006E2   0x1C6D             ADDS     R5,R5,#+1
   \   000006E4   0xE7EC             B.N      ??Search_WhiteBase_35
    670            }
    671          }//
   \                     ??Search_WhiteBase_34: (+1)
   \   000006E6   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    672          
    673          //------------------------由基准线定出的两边黑线为基准，找出赛道边缘-----------------------// 
    674          /*本函数的功能定义为找线，为了处理在某些断点的情况能继续在前方找到边沿线，
    675          只是对于边沿线进行初步的虚构，真正的对赛道两边沿线的处理虚构，主要由下一个函数完成*/

   \                                 In section .text, align 2, keep-with-next
    676          void Search_BlackEdge(void)  //0509   
    677          {   
   \                     Search_BlackEdge: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
    678            int16 i = 0,j = 0,n = 0, k = 0;
   \   00000004   0x2700             MOVS     R7,#+0
   \   00000006   0xF05F 0x0800      MOVS     R8,#+0
   \   0000000A   0x2400             MOVS     R4,#+0
   \   0000000C   0x2500             MOVS     R5,#+0
    679            int16 un_lost_hang = bottom_whitebase;//这两个变量是用来跟踪记录最近的一行的没有丢点的行，以便于对下一行的状态进行准确的判断.初始值为bottom_whitebase因为第bottom_whitebase行始终判断为没有丢点
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000012   0x7806             LDRB     R6,[R0, #+0]
    680            deal_start_line = bottom_whitebase + 1;  
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000020   0x7008             STRB     R0,[R1, #+0]
    681            top_whiteline = ROW -1;
   \   00000022   0x2031             MOVS     R0,#+49
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    682            hang_search_start = white_refer;  //从基准行的中点进行扫描 
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000034   0x7008             STRB     R0,[R1, #+0]
    683             
    684            for(i = deal_start_line ; i < ROW ;i++)//对状态标志进行初始化
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x0007             MOVS     R7,R0
   \                     ??Search_BlackEdge_0: (+1)
   \   0000003E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000040   0x2F32             CMP      R7,#+50
   \   00000042   0xDA06             BGE.N    ??Search_BlackEdge_1
    685              {
    686                Row_state[i] = 3;
   \   00000044   0x2003             MOVS     R0,#+3
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000004A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000004C   0x5478             STRB     R0,[R7, R1]
    687              }
   \   0000004E   0x1C7F             ADDS     R7,R7,#+1
   \   00000050   0xE7F5             B.N      ??Search_BlackEdge_0
    688            
    689            for(i = deal_start_line ;i < ROW;i++) 
   \                     ??Search_BlackEdge_1: (+1)
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x0007             MOVS     R7,R0
   \                     ??Search_BlackEdge_2: (+1)
   \   0000005A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000005C   0x2F32             CMP      R7,#+50
   \   0000005E   0xF280 0x8612      BGE.W    ??Search_BlackEdge_3
    690            {
    691              //////////////////左右的搜索开始///////////////////////
    692              //左边搜索
    693              j = hang_search_start;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000066   0x7800             LDRB     R0,[R0, #+0]
   \   00000068   0x4680             MOV      R8,R0
    694              left_black[i] = hang_search_start;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   0000006E   0x7800             LDRB     R0,[R0, #+0]
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000074   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000076   0x5478             STRB     R0,[R7, R1]
    695              while(j >= 2)
   \                     ??Search_BlackEdge_4: (+1)
   \   00000078   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000007C   0xF1B8 0x0F02      CMP      R8,#+2
   \   00000080   0xF2C0 0x80FC      BLT.W    ??Search_BlackEdge_5
    696              {     
    697                
    698                if(VideoImage1[i][j] - VideoImage1[i][j-2] > OT
    699                   && f_abs16(VideoImage1[i][j]-VideoImage1[i][j+1]) < OT && f_abs16(VideoImage1[i][j+1]-VideoImage1[i][j+2]) < OT && VideoImage1[i][j+2]-VideoImage1[i][j+3] < OT)  //滤除内部的边沿噪点
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000008E   0x229D             MOVS     R2,#+157
   \   00000090   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000094   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000098   0xF818 0x1001      LDRB     R1,[R8, R1]
   \   0000009C   0x.... 0x....      LDR.W    R2,??DataTable6_8
   \   000000A0   0x239D             MOVS     R3,#+157
   \   000000A2   0xFB17 0x2203      SMLABB   R2,R7,R3,R2
   \   000000A6   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000AA   0xEB18 0x0202      ADDS     R2,R8,R2
   \   000000AE   0xF812 0x2C02      LDRB     R2,[R2, #-2]
   \   000000B2   0x1A89             SUBS     R1,R1,R2
   \   000000B4   0x4288             CMP      R0,R1
   \   000000B6   0xDA77             BGE.N    ??Search_BlackEdge_6
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000BC   0x219D             MOVS     R1,#+157
   \   000000BE   0xFB17 0x0001      SMLABB   R0,R7,R1,R0
   \   000000C2   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000C6   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   000000CE   0x229D             MOVS     R2,#+157
   \   000000D0   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   000000D4   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000D8   0xEB18 0x0101      ADDS     R1,R8,R1
   \   000000DC   0x7849             LDRB     R1,[R1, #+1]
   \   000000DE   0x1A40             SUBS     R0,R0,R1
   \   000000E0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E2   0x.... 0x....      BL       f_abs16
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   000000EA   0x7809             LDRB     R1,[R1, #+0]
   \   000000EC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000000EE   0x4288             CMP      R0,R1
   \   000000F0   0xDA5A             BGE.N    ??Search_BlackEdge_6
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000F6   0x219D             MOVS     R1,#+157
   \   000000F8   0xFB17 0x0001      SMLABB   R0,R7,R1,R0
   \   000000FC   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000100   0xEB18 0x0000      ADDS     R0,R8,R0
   \   00000104   0x7840             LDRB     R0,[R0, #+1]
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000010A   0x229D             MOVS     R2,#+157
   \   0000010C   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000110   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000114   0xEB18 0x0101      ADDS     R1,R8,R1
   \   00000118   0x7889             LDRB     R1,[R1, #+2]
   \   0000011A   0x1A40             SUBS     R0,R0,R1
   \   0000011C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000011E   0x.... 0x....      BL       f_abs16
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   00000126   0x7809             LDRB     R1,[R1, #+0]
   \   00000128   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000012A   0x4288             CMP      R0,R1
   \   0000012C   0xDA3C             BGE.N    ??Search_BlackEdge_6
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000132   0x219D             MOVS     R1,#+157
   \   00000134   0xFB17 0x0001      SMLABB   R0,R7,R1,R0
   \   00000138   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000013C   0xEB18 0x0000      ADDS     R0,R8,R0
   \   00000140   0x7880             LDRB     R0,[R0, #+2]
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   00000146   0x229D             MOVS     R2,#+157
   \   00000148   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   0000014C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000150   0xEB18 0x0101      ADDS     R1,R8,R1
   \   00000154   0x78C9             LDRB     R1,[R1, #+3]
   \   00000156   0x1A40             SUBS     R0,R0,R1
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   0000015C   0x7809             LDRB     R1,[R1, #+0]
   \   0000015E   0x4288             CMP      R0,R1
   \   00000160   0xDA22             BGE.N    ??Search_BlackEdge_6
    700                  {
    701                    if(f_abs16(j - left_black[i-1]) < f_abs16(left_black[i] - left_black[i-1]))//滤除干扰
   \   00000162   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000166   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000168   0x1838             ADDS     R0,R7,R0
   \   0000016A   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000016E   0xEBB8 0x0000      SUBS     R0,R8,R0
   \   00000172   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000174   0x.... 0x....      BL       f_abs16
   \   00000178   0x4681             MOV      R9,R0
   \   0000017A   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000017E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000180   0x5C38             LDRB     R0,[R7, R0]
   \   00000182   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000186   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000188   0x1879             ADDS     R1,R7,R1
   \   0000018A   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000018E   0x1A40             SUBS     R0,R0,R1
   \   00000190   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000192   0x.... 0x....      BL       f_abs16
   \   00000196   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   0000019A   0x4581             CMP      R9,R0
   \   0000019C   0xDA04             BGE.N    ??Search_BlackEdge_6
    702                     left_black[i] = j;
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000001A2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000001A4   0xF807 0x8000      STRB     R8,[R7, R0]
    703                  } 
    704                 if(left_black[i] != hang_search_start && (f_abs16(j - left_black[i-1]) > f_abs16(left_black[i] - left_black[i-1])
    705                                                           || (f_abs16(left_black[i] - left_black[i-1])  < 5 && j<=left_black[i-1] )))
   \                     ??Search_BlackEdge_6: (+1)
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000001AC   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000001AE   0x5C38             LDRB     R0,[R7, R0]
   \   000001B0   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000001B4   0x7809             LDRB     R1,[R1, #+0]
   \   000001B6   0x4288             CMP      R0,R1
   \   000001B8   0xD039             BEQ.N    ??Search_BlackEdge_7
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000001BE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000001C0   0x5C38             LDRB     R0,[R7, R0]
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000001C6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000001C8   0x1879             ADDS     R1,R7,R1
   \   000001CA   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000001CE   0x1A40             SUBS     R0,R0,R1
   \   000001D0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001D2   0x.... 0x....      BL       f_abs16
   \   000001D6   0x4681             MOV      R9,R0
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000001DC   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000001DE   0x1838             ADDS     R0,R7,R0
   \   000001E0   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000001E4   0xEBB8 0x0000      SUBS     R0,R8,R0
   \   000001E8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001EA   0x.... 0x....      BL       f_abs16
   \   000001EE   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   000001F2   0x4581             CMP      R9,R0
   \   000001F4   0xDB1A             BLT.N    ??Search_BlackEdge_8
   \   000001F6   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000001FA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000001FC   0x5C38             LDRB     R0,[R7, R0]
   \   000001FE   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000202   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000204   0x1879             ADDS     R1,R7,R1
   \   00000206   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000020A   0x1A40             SUBS     R0,R0,R1
   \   0000020C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000020E   0x.... 0x....      BL       f_abs16
   \   00000212   0x2805             CMP      R0,#+5
   \   00000214   0xDA0B             BGE.N    ??Search_BlackEdge_7
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000021A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000021C   0x1838             ADDS     R0,R7,R0
   \   0000021E   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000222   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000224   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000228   0x4540             CMP      R0,R8
   \   0000022A   0xDB00             BLT.N    ??Search_BlackEdge_7
    706                 {
    707                  break;
   \                     ??Search_BlackEdge_8: (+1)
   \   0000022C   0xE026             B.N      ??Search_BlackEdge_5
    708                 }//减少计算量，搜索到最近的一个跳变点，则停止
    709               
    710                   //当前一个状态是断点的状态时，这个时候当在内部搜索到了跳变沿的时候，则就不进行搜索，若是没有搜到，
    711                    //则再到赛道的两边进行搜索
    712                 if(Row_state[i-1] == 0 || Row_state[i-1] == 2)//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \                     ??Search_BlackEdge_7: (+1)
   \   0000022E   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000232   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000234   0x1838             ADDS     R0,R7,R0
   \   00000236   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000023A   0x2800             CMP      R0,#+0
   \   0000023C   0xD007             BEQ.N    ??Search_BlackEdge_9
   \   0000023E   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000242   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000244   0x1838             ADDS     R0,R7,R0
   \   00000246   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000024A   0x2802             CMP      R0,#+2
   \   0000024C   0xD113             BNE.N    ??Search_BlackEdge_10
    713                    {
    714                      if( j <  left_black[i - 1]  && left_black[i] != hang_search_start) //前一行为断点状态时，搜索到了点之后，则不允许继续的搜索
   \                     ??Search_BlackEdge_9: (+1)
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000252   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000254   0x1838             ADDS     R0,R7,R0
   \   00000256   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000025A   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000025E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000260   0x4580             CMP      R8,R0
   \   00000262   0xDA08             BGE.N    ??Search_BlackEdge_10
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000268   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000026A   0x5C38             LDRB     R0,[R7, R0]
   \   0000026C   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000270   0x7809             LDRB     R1,[R1, #+0]
   \   00000272   0x4288             CMP      R0,R1
   \   00000274   0xD102             BNE.N    ??Search_BlackEdge_5
    715                       {
    716                        break; 
    717                      }
    718                    }
    719                    j--;
   \                     ??Search_BlackEdge_10: (+1)
   \   00000276   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \   0000027A   0xE6FD             B.N      ??Search_BlackEdge_4
    720              }      //搜索左边沿线的while结束
    721              //对左边沿线的出界判定
    722              if(j == 1 && left_black[i] == hang_search_start)      //到达边界了，但是边沿线没有改变时，在搜索范围内没有找到跳变点，则认为是图像依然丢点
   \                     ??Search_BlackEdge_5: (+1)
   \   0000027C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000280   0xF1B8 0x0F01      CMP      R8,#+1
   \   00000284   0xD12D             BNE.N    ??Search_BlackEdge_11
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000028A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000028C   0x5C38             LDRB     R0,[R7, R0]
   \   0000028E   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000292   0x7809             LDRB     R1,[R1, #+0]
   \   00000294   0x4288             CMP      R0,R1
   \   00000296   0xD124             BNE.N    ??Search_BlackEdge_11
    723              {
    724                if(VideoImage1[i][j] - VideoImage1[i][j-1] > OT)
   \   00000298   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   0000029C   0x7800             LDRB     R0,[R0, #+0]
   \   0000029E   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   000002A2   0x229D             MOVS     R2,#+157
   \   000002A4   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   000002A8   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002AC   0xF818 0x1001      LDRB     R1,[R8, R1]
   \   000002B0   0x.... 0x....      LDR.W    R2,??DataTable6_8
   \   000002B4   0x239D             MOVS     R3,#+157
   \   000002B6   0xFB17 0x2203      SMLABB   R2,R7,R3,R2
   \   000002BA   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002BE   0xEB18 0x0202      ADDS     R2,R8,R2
   \   000002C2   0xF812 0x2C01      LDRB     R2,[R2, #-1]
   \   000002C6   0x1A89             SUBS     R1,R1,R2
   \   000002C8   0x4288             CMP      R0,R1
   \   000002CA   0xDA05             BGE.N    ??Search_BlackEdge_12
    725                   left_black[i] = 1;
   \   000002CC   0x2001             MOVS     R0,#+1
   \   000002CE   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000002D2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002D4   0x5478             STRB     R0,[R7, R1]
   \   000002D6   0xE004             B.N      ??Search_BlackEdge_11
    726                else
    727                  left_black[i] = 0;
   \                     ??Search_BlackEdge_12: (+1)
   \   000002D8   0x2000             MOVS     R0,#+0
   \   000002DA   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000002DE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002E0   0x5478             STRB     R0,[R7, R1]
    728              }
    729          
    730            
    731              //右边搜索
    732              j = hang_search_start;
   \                     ??Search_BlackEdge_11: (+1)
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000002E6   0x7800             LDRB     R0,[R0, #+0]
   \   000002E8   0x4680             MOV      R8,R0
    733              right_black[i] = hang_search_start;
   \   000002EA   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000002EE   0x7800             LDRB     R0,[R0, #+0]
   \   000002F0   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000002F4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002F6   0x5478             STRB     R0,[R7, R1]
    734              
    735              while( j <=COLUMN-3 )
   \                     ??Search_BlackEdge_13: (+1)
   \   000002F8   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000002FC   0xF1B8 0x0F9B      CMP      R8,#+155
   \   00000300   0xF280 0x8100      BGE.W    ??Search_BlackEdge_14
    736              { 
    737                if( VideoImage1[i][j] - VideoImage1[i][j+2] > OT 
    738                   && f_abs16(VideoImage1[i][j]-VideoImage1[i][j-1]) < OT && f_abs16(VideoImage1[i][j-1]-VideoImage1[i][j-2]) < OT && VideoImage1[i][j-2]-VideoImage1[i][j-3] < OT)  //滤除边沿噪点
   \   00000304   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000308   0x7800             LDRB     R0,[R0, #+0]
   \   0000030A   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000030E   0x229D             MOVS     R2,#+157
   \   00000310   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000314   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000318   0xF818 0x1001      LDRB     R1,[R8, R1]
   \   0000031C   0x.... 0x....      LDR.W    R2,??DataTable6_8
   \   00000320   0x239D             MOVS     R3,#+157
   \   00000322   0xFB17 0x2203      SMLABB   R2,R7,R3,R2
   \   00000326   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000032A   0xEB18 0x0202      ADDS     R2,R8,R2
   \   0000032E   0x7892             LDRB     R2,[R2, #+2]
   \   00000330   0x1A89             SUBS     R1,R1,R2
   \   00000332   0x4288             CMP      R0,R1
   \   00000334   0xDA7C             BGE.N    ??Search_BlackEdge_15
   \   00000336   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000033A   0x219D             MOVS     R1,#+157
   \   0000033C   0xFB17 0x0001      SMLABB   R0,R7,R1,R0
   \   00000340   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000344   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000348   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000034C   0x229D             MOVS     R2,#+157
   \   0000034E   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000352   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000356   0xEB18 0x0101      ADDS     R1,R8,R1
   \   0000035A   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000035E   0x1A40             SUBS     R0,R0,R1
   \   00000360   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000362   0x.... 0x....      BL       f_abs16
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   0000036A   0x7809             LDRB     R1,[R1, #+0]
   \   0000036C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000036E   0x4288             CMP      R0,R1
   \   00000370   0xDA5E             BGE.N    ??Search_BlackEdge_15
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000376   0x219D             MOVS     R1,#+157
   \   00000378   0xFB17 0x0001      SMLABB   R0,R7,R1,R0
   \   0000037C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000380   0xEB18 0x0000      ADDS     R0,R8,R0
   \   00000384   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000388   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000038C   0x229D             MOVS     R2,#+157
   \   0000038E   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000392   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000396   0xEB18 0x0101      ADDS     R1,R8,R1
   \   0000039A   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   0000039E   0x1A40             SUBS     R0,R0,R1
   \   000003A0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003A2   0x.... 0x....      BL       f_abs16
   \   000003A6   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   000003AA   0x7809             LDRB     R1,[R1, #+0]
   \   000003AC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000003AE   0x4288             CMP      R0,R1
   \   000003B0   0xDA3E             BGE.N    ??Search_BlackEdge_15
   \   000003B2   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000003B6   0x219D             MOVS     R1,#+157
   \   000003B8   0xFB17 0x0001      SMLABB   R0,R7,R1,R0
   \   000003BC   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000003C0   0xEB18 0x0000      ADDS     R0,R8,R0
   \   000003C4   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   000003C8   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   000003CC   0x229D             MOVS     R2,#+157
   \   000003CE   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   000003D2   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000003D6   0xEB18 0x0101      ADDS     R1,R8,R1
   \   000003DA   0xF811 0x1C03      LDRB     R1,[R1, #-3]
   \   000003DE   0x1A40             SUBS     R0,R0,R1
   \   000003E0   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   000003E4   0x7809             LDRB     R1,[R1, #+0]
   \   000003E6   0x4288             CMP      R0,R1
   \   000003E8   0xDA22             BGE.N    ??Search_BlackEdge_15
    739                  {
    740                    if(f_abs16(j-right_black[i-1]) < f_abs16(right_black[i] - right_black[i-1]))
   \   000003EA   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000003EE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003F0   0x1838             ADDS     R0,R7,R0
   \   000003F2   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000003F6   0xEBB8 0x0000      SUBS     R0,R8,R0
   \   000003FA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003FC   0x.... 0x....      BL       f_abs16
   \   00000400   0x4681             MOV      R9,R0
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000406   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000408   0x5C38             LDRB     R0,[R7, R0]
   \   0000040A   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000040E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000410   0x1879             ADDS     R1,R7,R1
   \   00000412   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000416   0x1A40             SUBS     R0,R0,R1
   \   00000418   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000041A   0x.... 0x....      BL       f_abs16
   \   0000041E   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   00000422   0x4581             CMP      R9,R0
   \   00000424   0xDA04             BGE.N    ??Search_BlackEdge_15
    741                    {
    742                          right_black[i] = j ;
   \   00000426   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000042A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000042C   0xF807 0x8000      STRB     R8,[R7, R0]
    743                    }
    744                  }
    745                if(right_black[i] != hang_search_start &&( f_abs16(j-right_black[i-1]) > f_abs16(right_black[i] - right_black[i-1])
    746                   ||(f_abs16(right_black[i] - right_black[i-1])<5 && j== right_black[i-1] ) ))//在附近搜索到了点，只要到达了前一行的列位置，则停止
   \                     ??Search_BlackEdge_15: (+1)
   \   00000430   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000434   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000436   0x5C38             LDRB     R0,[R7, R0]
   \   00000438   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000043C   0x7809             LDRB     R1,[R1, #+0]
   \   0000043E   0x4288             CMP      R0,R1
   \   00000440   0xD039             BEQ.N    ??Search_BlackEdge_16
   \   00000442   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000446   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000448   0x5C38             LDRB     R0,[R7, R0]
   \   0000044A   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000044E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000450   0x1879             ADDS     R1,R7,R1
   \   00000452   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000456   0x1A40             SUBS     R0,R0,R1
   \   00000458   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000045A   0x.... 0x....      BL       f_abs16
   \   0000045E   0x4681             MOV      R9,R0
   \   00000460   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000464   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000466   0x1838             ADDS     R0,R7,R0
   \   00000468   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000046C   0xEBB8 0x0000      SUBS     R0,R8,R0
   \   00000470   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000472   0x.... 0x....      BL       f_abs16
   \   00000476   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   0000047A   0x4581             CMP      R9,R0
   \   0000047C   0xDB1A             BLT.N    ??Search_BlackEdge_17
   \   0000047E   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000482   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000484   0x5C38             LDRB     R0,[R7, R0]
   \   00000486   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000048A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000048C   0x1879             ADDS     R1,R7,R1
   \   0000048E   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000492   0x1A40             SUBS     R0,R0,R1
   \   00000494   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000496   0x.... 0x....      BL       f_abs16
   \   0000049A   0x2805             CMP      R0,#+5
   \   0000049C   0xDA0B             BGE.N    ??Search_BlackEdge_16
   \   0000049E   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000004A2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000004A4   0x1838             ADDS     R0,R7,R0
   \   000004A6   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000004AA   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000004AE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004B0   0x4580             CMP      R8,R0
   \   000004B2   0xD100             BNE.N    ??Search_BlackEdge_16
    747                {
    748                  break;
   \                     ??Search_BlackEdge_17: (+1)
   \   000004B4   0xE026             B.N      ??Search_BlackEdge_14
    749                }
    750                if(Row_state[i-1] == 1 || Row_state[i-1] == 2)
   \                     ??Search_BlackEdge_16: (+1)
   \   000004B6   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000004BA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000004BC   0x1838             ADDS     R0,R7,R0
   \   000004BE   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000004C2   0x2801             CMP      R0,#+1
   \   000004C4   0xD007             BEQ.N    ??Search_BlackEdge_18
   \   000004C6   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000004CA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000004CC   0x1838             ADDS     R0,R7,R0
   \   000004CE   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000004D2   0x2802             CMP      R0,#+2
   \   000004D4   0xD113             BNE.N    ??Search_BlackEdge_19
    751                    {
    752                      if( j > right_black[i - 1]  && right_black[i] != hang_search_start) //当前一行为断点状态时，搜索到了点之后，则不允许继续的搜索
   \                     ??Search_BlackEdge_18: (+1)
   \   000004D6   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000004DA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000004DC   0x1838             ADDS     R0,R7,R0
   \   000004DE   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000004E2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004E4   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000004E8   0x4540             CMP      R0,R8
   \   000004EA   0xDA08             BGE.N    ??Search_BlackEdge_19
   \   000004EC   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000004F0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000004F2   0x5C38             LDRB     R0,[R7, R0]
   \   000004F4   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000004F8   0x7809             LDRB     R1,[R1, #+0]
   \   000004FA   0x4288             CMP      R0,R1
   \   000004FC   0xD102             BNE.N    ??Search_BlackEdge_14
    753                       {
    754                        break;
    755                      }
    756                      //当搜索到的线大于了
    757                      //if()
    758                    }
    759                  j++;
   \                     ??Search_BlackEdge_19: (+1)
   \   000004FE   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00000502   0xE6F9             B.N      ??Search_BlackEdge_13
    760              }    //右边的while搜索结束
    761            
    762              if(j == COLUMN-2 && right_black[i] == hang_search_start)
   \                     ??Search_BlackEdge_14: (+1)
   \   00000504   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000508   0xF1B8 0x0F9B      CMP      R8,#+155
   \   0000050C   0xD12C             BNE.N    ??Search_BlackEdge_20
   \   0000050E   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000512   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000514   0x5C38             LDRB     R0,[R7, R0]
   \   00000516   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000051A   0x7809             LDRB     R1,[R1, #+0]
   \   0000051C   0x4288             CMP      R0,R1
   \   0000051E   0xD123             BNE.N    ??Search_BlackEdge_20
    763              {
    764                if( VideoImage1[i][j] - VideoImage1[i][j+1] > OT)
   \   00000520   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000524   0x7800             LDRB     R0,[R0, #+0]
   \   00000526   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000052A   0x229D             MOVS     R2,#+157
   \   0000052C   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000530   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000534   0xF818 0x1001      LDRB     R1,[R8, R1]
   \   00000538   0x.... 0x....      LDR.W    R2,??DataTable6_8
   \   0000053C   0x239D             MOVS     R3,#+157
   \   0000053E   0xFB17 0x2203      SMLABB   R2,R7,R3,R2
   \   00000542   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000546   0xEB18 0x0202      ADDS     R2,R8,R2
   \   0000054A   0x7852             LDRB     R2,[R2, #+1]
   \   0000054C   0x1A89             SUBS     R1,R1,R2
   \   0000054E   0x4288             CMP      R0,R1
   \   00000550   0xDA05             BGE.N    ??Search_BlackEdge_21
    765                   right_black[i] = COLUMN - 2 ;
   \   00000552   0x209B             MOVS     R0,#+155
   \   00000554   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000558   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000055A   0x5478             STRB     R0,[R7, R1]
   \   0000055C   0xE004             B.N      ??Search_BlackEdge_20
    766                else
    767                   right_black[i] = COLUMN - 1 ;
   \                     ??Search_BlackEdge_21: (+1)
   \   0000055E   0x209C             MOVS     R0,#+156
   \   00000560   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000564   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000566   0x5478             STRB     R0,[R7, R1]
    768              }
    769              ///////////////////////左右的搜索结束//////////////////////////
    770              
    771              
    772              //  /////////////赛道的状态标记开始////////////////////////////////
    773            if(i >= deal_start_line)//只是对处于控制区域的边界进行处理
   \                     ??Search_BlackEdge_20: (+1)
   \   00000568   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   0000056C   0x7800             LDRB     R0,[R0, #+0]
   \   0000056E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000570   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000572   0x4287             CMP      R7,R0
   \   00000574   0xF2C0 0x829F      BLT.W    ??Search_BlackEdge_22
    774              {    
    775                //当图像的边沿到达了边界的时候，判定为丢点      ---------------------丢点的第一次判断
    776                if((left_black[i] <= 1  || left_black[i] >= COLUMN-2 )&& (Row_state[i - 1] == 0||Row_state[i - 1] == 2) && right_black[i] >= 1 && right_black[i] <= COLUMN-2)
   \   00000578   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000057C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000057E   0x5C38             LDRB     R0,[R7, R0]
   \   00000580   0x2802             CMP      R0,#+2
   \   00000582   0xDB05             BLT.N    ??Search_BlackEdge_23
   \   00000584   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000588   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000058A   0x5C38             LDRB     R0,[R7, R0]
   \   0000058C   0x289B             CMP      R0,#+155
   \   0000058E   0xDB21             BLT.N    ??Search_BlackEdge_24
   \                     ??Search_BlackEdge_23: (+1)
   \   00000590   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000594   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000596   0x1838             ADDS     R0,R7,R0
   \   00000598   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   0000059C   0x2800             CMP      R0,#+0
   \   0000059E   0xD007             BEQ.N    ??Search_BlackEdge_25
   \   000005A0   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000005A4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000005A6   0x1838             ADDS     R0,R7,R0
   \   000005A8   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   000005AC   0x2802             CMP      R0,#+2
   \   000005AE   0xD111             BNE.N    ??Search_BlackEdge_24
   \                     ??Search_BlackEdge_25: (+1)
   \   000005B0   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000005B4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000005B6   0x5C38             LDRB     R0,[R7, R0]
   \   000005B8   0x2800             CMP      R0,#+0
   \   000005BA   0xD00B             BEQ.N    ??Search_BlackEdge_24
   \   000005BC   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000005C0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000005C2   0x5C38             LDRB     R0,[R7, R0]
   \   000005C4   0x289C             CMP      R0,#+156
   \   000005C6   0xDA05             BGE.N    ??Search_BlackEdge_24
    777                {         //对于到达边界之后是否认为丢点的问题，这个视情况而定
    778                     Row_state[i] =0;//左边丢点
   \   000005C8   0x2000             MOVS     R0,#+0
   \   000005CA   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000005CE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000005D0   0x5478             STRB     R0,[R7, R1]
   \   000005D2   0xE050             B.N      ??Search_BlackEdge_26
    779                }
    780                else if(left_black[i] >= 1 && left_black[i] <= COLUMN-2 && (right_black[i] <= 1 || right_black[i] >= COLUMN-2)&& (Row_state[i - 1] == 1||Row_state[i - 1] == 2))
   \                     ??Search_BlackEdge_24: (+1)
   \   000005D4   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000005D8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000005DA   0x5C38             LDRB     R0,[R7, R0]
   \   000005DC   0x2800             CMP      R0,#+0
   \   000005DE   0xD027             BEQ.N    ??Search_BlackEdge_27
   \   000005E0   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000005E4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000005E6   0x5C38             LDRB     R0,[R7, R0]
   \   000005E8   0x289C             CMP      R0,#+156
   \   000005EA   0xDA21             BGE.N    ??Search_BlackEdge_27
   \   000005EC   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000005F0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000005F2   0x5C38             LDRB     R0,[R7, R0]
   \   000005F4   0x2802             CMP      R0,#+2
   \   000005F6   0xDB05             BLT.N    ??Search_BlackEdge_28
   \   000005F8   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000005FC   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000005FE   0x5C38             LDRB     R0,[R7, R0]
   \   00000600   0x289B             CMP      R0,#+155
   \   00000602   0xDB15             BLT.N    ??Search_BlackEdge_27
   \                     ??Search_BlackEdge_28: (+1)
   \   00000604   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000608   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000060A   0x1838             ADDS     R0,R7,R0
   \   0000060C   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000610   0x2801             CMP      R0,#+1
   \   00000612   0xD007             BEQ.N    ??Search_BlackEdge_29
   \   00000614   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000618   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000061A   0x1838             ADDS     R0,R7,R0
   \   0000061C   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000620   0x2802             CMP      R0,#+2
   \   00000622   0xD105             BNE.N    ??Search_BlackEdge_27
    781                {
    782                     Row_state[i] = 1;//右边丢点
   \                     ??Search_BlackEdge_29: (+1)
   \   00000624   0x2001             MOVS     R0,#+1
   \   00000626   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000062A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000062C   0x5478             STRB     R0,[R7, R1]
   \   0000062E   0xE022             B.N      ??Search_BlackEdge_26
    783                } 
    784                else if((left_black[i] <= 1 || left_black[i] >= COLUMN-2 ) && (right_black[i] <= 1 || right_black[i] >= COLUMN-2))
   \                     ??Search_BlackEdge_27: (+1)
   \   00000630   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000634   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000636   0x5C38             LDRB     R0,[R7, R0]
   \   00000638   0x2802             CMP      R0,#+2
   \   0000063A   0xDB05             BLT.N    ??Search_BlackEdge_30
   \   0000063C   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000640   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000642   0x5C38             LDRB     R0,[R7, R0]
   \   00000644   0x289B             CMP      R0,#+155
   \   00000646   0xDB11             BLT.N    ??Search_BlackEdge_31
   \                     ??Search_BlackEdge_30: (+1)
   \   00000648   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000064C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000064E   0x5C38             LDRB     R0,[R7, R0]
   \   00000650   0x2802             CMP      R0,#+2
   \   00000652   0xDB05             BLT.N    ??Search_BlackEdge_32
   \   00000654   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000658   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000065A   0x5C38             LDRB     R0,[R7, R0]
   \   0000065C   0x289B             CMP      R0,#+155
   \   0000065E   0xDB05             BLT.N    ??Search_BlackEdge_31
    785                {
    786                     Row_state[i] = 2;//两边都边丢点
   \                     ??Search_BlackEdge_32: (+1)
   \   00000660   0x2002             MOVS     R0,#+2
   \   00000662   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000666   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000668   0x5478             STRB     R0,[R7, R1]
   \   0000066A   0xE004             B.N      ??Search_BlackEdge_26
    787                }
    788                else
    789                {
    790                     Row_state[i] = 3;//两边都边没有丢点
   \                     ??Search_BlackEdge_31: (+1)
   \   0000066C   0x2003             MOVS     R0,#+3
   \   0000066E   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000672   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000674   0x5478             STRB     R0,[R7, R1]
    791                }
    792                
    793           /*这个状态专门用来标记十字道路的丢点的情况，此时十字道路的赛道的一边到达了边界，但是另外的一边却是以很大趋势向外伸展*/
    794                if( i> 10)
   \                     ??Search_BlackEdge_26: (+1)
   \   00000676   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000678   0x2F0B             CMP      R7,#+11
   \   0000067A   0xF2C0 0x8089      BLT.W    ??Search_BlackEdge_33
    795                {
    796                  if(left_black[i] <= 1 && right_black[i]-right_black[i-1] >= 2 && right_black[i]-right_black[i-2] > 5 && right_black[i]-right_black[i-3] > 6)
   \   0000067E   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000682   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000684   0x5C38             LDRB     R0,[R7, R0]
   \   00000686   0x2802             CMP      R0,#+2
   \   00000688   0xDA3E             BGE.N    ??Search_BlackEdge_34
   \   0000068A   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000068E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000690   0x5C38             LDRB     R0,[R7, R0]
   \   00000692   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000696   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000698   0x1879             ADDS     R1,R7,R1
   \   0000069A   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000069E   0x1A40             SUBS     R0,R0,R1
   \   000006A0   0x2802             CMP      R0,#+2
   \   000006A2   0xDB31             BLT.N    ??Search_BlackEdge_34
   \   000006A4   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000006A8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000006AA   0x5C38             LDRB     R0,[R7, R0]
   \   000006AC   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000006B0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000006B2   0x1879             ADDS     R1,R7,R1
   \   000006B4   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   000006B8   0x1A40             SUBS     R0,R0,R1
   \   000006BA   0x2806             CMP      R0,#+6
   \   000006BC   0xDB24             BLT.N    ??Search_BlackEdge_34
   \   000006BE   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000006C2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000006C4   0x5C38             LDRB     R0,[R7, R0]
   \   000006C6   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000006CA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000006CC   0x1879             ADDS     R1,R7,R1
   \   000006CE   0xF811 0x1C03      LDRB     R1,[R1, #-3]
   \   000006D2   0x1A40             SUBS     R0,R0,R1
   \   000006D4   0x2807             CMP      R0,#+7
   \   000006D6   0xDB17             BLT.N    ??Search_BlackEdge_34
    797                  {
    798                    if(Row_state[i] == 0 ||Row_state[i] == 2)//对于第一次进行一个判断
   \   000006D8   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000006DC   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000006DE   0x5C38             LDRB     R0,[R7, R0]
   \   000006E0   0x2800             CMP      R0,#+0
   \   000006E2   0xD005             BEQ.N    ??Search_BlackEdge_35
   \   000006E4   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000006E8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000006EA   0x5C38             LDRB     R0,[R7, R0]
   \   000006EC   0x2802             CMP      R0,#+2
   \   000006EE   0xD105             BNE.N    ??Search_BlackEdge_36
    799                        Row_state[i] = 2;
   \                     ??Search_BlackEdge_35: (+1)
   \   000006F0   0x2002             MOVS     R0,#+2
   \   000006F2   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000006F6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000006F8   0x5478             STRB     R0,[R7, R1]
   \   000006FA   0xE049             B.N      ??Search_BlackEdge_33
    800                     else //if(Row_state[i] == 1 ||Row_state[i] == 3)
    801                       Row_state[i] = 1;//1表示的是只有右边丢点
   \                     ??Search_BlackEdge_36: (+1)
   \   000006FC   0x2001             MOVS     R0,#+1
   \   000006FE   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000702   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000704   0x5478             STRB     R0,[R7, R1]
   \   00000706   0xE043             B.N      ??Search_BlackEdge_33
    802                  }
    803                  else if(right_black[i] >= COLUMN-2 && left_black[i-3] - left_black[i] > 6 && left_black[i-2] - left_black[i] > 5 && left_black[i-1] - left_black[i] >= 2 )
   \                     ??Search_BlackEdge_34: (+1)
   \   00000708   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000070C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000070E   0x5C38             LDRB     R0,[R7, R0]
   \   00000710   0x289B             CMP      R0,#+155
   \   00000712   0xDB3D             BLT.N    ??Search_BlackEdge_33
   \   00000714   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000718   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000071A   0x1838             ADDS     R0,R7,R0
   \   0000071C   0xF810 0x0C03      LDRB     R0,[R0, #-3]
   \   00000720   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000724   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000726   0x5C79             LDRB     R1,[R7, R1]
   \   00000728   0x1A40             SUBS     R0,R0,R1
   \   0000072A   0x2807             CMP      R0,#+7
   \   0000072C   0xDB30             BLT.N    ??Search_BlackEdge_33
   \   0000072E   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   00000732   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000734   0x1838             ADDS     R0,R7,R0
   \   00000736   0xF810 0x0C02      LDRB     R0,[R0, #-2]
   \   0000073A   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   0000073E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000740   0x5C79             LDRB     R1,[R7, R1]
   \   00000742   0x1A40             SUBS     R0,R0,R1
   \   00000744   0x2806             CMP      R0,#+6
   \   00000746   0xDB23             BLT.N    ??Search_BlackEdge_33
   \   00000748   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000074C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000074E   0x1838             ADDS     R0,R7,R0
   \   00000750   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000754   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000758   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000075A   0x5C79             LDRB     R1,[R7, R1]
   \   0000075C   0x1A40             SUBS     R0,R0,R1
   \   0000075E   0x2802             CMP      R0,#+2
   \   00000760   0xDB16             BLT.N    ??Search_BlackEdge_33
    804                  {
    805                   if(Row_state[i] == 1||Row_state[i] == 2)//对于第一次进行一个判断
   \   00000762   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000766   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000768   0x5C38             LDRB     R0,[R7, R0]
   \   0000076A   0x2801             CMP      R0,#+1
   \   0000076C   0xD005             BEQ.N    ??Search_BlackEdge_37
   \   0000076E   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000772   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000774   0x5C38             LDRB     R0,[R7, R0]
   \   00000776   0x2802             CMP      R0,#+2
   \   00000778   0xD105             BNE.N    ??Search_BlackEdge_38
    806                        Row_state[i] = 2;//0表示的是左边丢点,而右边没有丢点
   \                     ??Search_BlackEdge_37: (+1)
   \   0000077A   0x2002             MOVS     R0,#+2
   \   0000077C   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000780   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000782   0x5478             STRB     R0,[R7, R1]
   \   00000784   0xE004             B.N      ??Search_BlackEdge_33
    807                     else
    808                        Row_state[i] = 0;//0表示的是只有左边丢点
   \                     ??Search_BlackEdge_38: (+1)
   \   00000786   0x2000             MOVS     R0,#+0
   \   00000788   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000078C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000078E   0x5478             STRB     R0,[R7, R1]
    809                  }
    810                }
    811                
    812                  //对两边沿线的状态进行判断//---------------------------丢点的第二次判断
    813                //注意这里的判断必须要分两种情况一个是跳变点的状态，其次是前一行的状态（前一行的状态的不同需要作出不同的处理），
    814                if((right_black[i] - left_black[i])-(right_black[i-1] - left_black[i-1])>= 8)//  若是3的话可能出现误判//这里采用绝对值限制是为了防止噪点
   \                     ??Search_BlackEdge_33: (+1)
   \   00000790   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000794   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000796   0x5C38             LDRB     R0,[R7, R0]
   \   00000798   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   0000079C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000079E   0x5C79             LDRB     R1,[R7, R1]
   \   000007A0   0x1A40             SUBS     R0,R0,R1
   \   000007A2   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000007A6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000007A8   0x1879             ADDS     R1,R7,R1
   \   000007AA   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000007AE   0x1A40             SUBS     R0,R0,R1
   \   000007B0   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000007B4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000007B6   0x1879             ADDS     R1,R7,R1
   \   000007B8   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000007BC   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000007C0   0x2808             CMP      R0,#+8
   \   000007C2   0xF2C0 0x8097      BLT.W    ??Search_BlackEdge_39
    815                {
    816                   if(( f_abs16(left_black[i] - left_black[i-1]) < f_abs16(right_black[i] - right_black[i-1]))
    817                      && f_abs16(left_black[i] - left_black[i-1]) <= 3)//左边的突变小于右边的  说明右边的点发生了突变
   \   000007C6   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   000007CA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000007CC   0x5C38             LDRB     R0,[R7, R0]
   \   000007CE   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000007D2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000007D4   0x1879             ADDS     R1,R7,R1
   \   000007D6   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000007DA   0x1A40             SUBS     R0,R0,R1
   \   000007DC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000007DE   0x.... 0x....      BL       f_abs16
   \   000007E2   0x4681             MOV      R9,R0
   \   000007E4   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   000007E8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000007EA   0x5C38             LDRB     R0,[R7, R0]
   \   000007EC   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000007F0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000007F2   0x1879             ADDS     R1,R7,R1
   \   000007F4   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000007F8   0x1A40             SUBS     R0,R0,R1
   \   000007FA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000007FC   0x.... 0x....      BL       f_abs16
   \   00000800   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   00000804   0x4581             CMP      R9,R0
   \   00000806   0xDA27             BGE.N    ??Search_BlackEdge_40
   \   00000808   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000080C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000080E   0x5C38             LDRB     R0,[R7, R0]
   \   00000810   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000814   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000816   0x1879             ADDS     R1,R7,R1
   \   00000818   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000081C   0x1A40             SUBS     R0,R0,R1
   \   0000081E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000820   0x.... 0x....      BL       f_abs16
   \   00000824   0x2804             CMP      R0,#+4
   \   00000826   0xDA17             BGE.N    ??Search_BlackEdge_40
    818                   {
    819                     if(Row_state[i] == 0 ||Row_state[i] == 2)//对于第一次进行一个判断
   \   00000828   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000082C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000082E   0x5C38             LDRB     R0,[R7, R0]
   \   00000830   0x2800             CMP      R0,#+0
   \   00000832   0xD005             BEQ.N    ??Search_BlackEdge_41
   \   00000834   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000838   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000083A   0x5C38             LDRB     R0,[R7, R0]
   \   0000083C   0x2802             CMP      R0,#+2
   \   0000083E   0xD105             BNE.N    ??Search_BlackEdge_42
    820                        Row_state[i] = 2;
   \                     ??Search_BlackEdge_41: (+1)
   \   00000840   0x2002             MOVS     R0,#+2
   \   00000842   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000846   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000848   0x5478             STRB     R0,[R7, R1]
   \   0000084A   0xE053             B.N      ??Search_BlackEdge_39
    821                     else //if(Row_state[i] == 1 ||Row_state[i] == 3)
    822                     {
    823                       Row_state[i] = 1;//1表示的是只有右边丢点
   \                     ??Search_BlackEdge_42: (+1)
   \   0000084C   0x2001             MOVS     R0,#+1
   \   0000084E   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000852   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000854   0x5478             STRB     R0,[R7, R1]
   \   00000856   0xE04D             B.N      ??Search_BlackEdge_39
    824                     }
    825                   } 
    826                  else if(( f_abs16(left_black[i] - left_black[i-1]) > f_abs16(right_black[i] - right_black[i-1]))
    827                      && f_abs16(right_black[i] - right_black[i-1]) <= 3)//左边的突变小于右边的  说明右边的点发生了突变
   \                     ??Search_BlackEdge_40: (+1)
   \   00000858   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000085C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000085E   0x5C38             LDRB     R0,[R7, R0]
   \   00000860   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000864   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000866   0x1879             ADDS     R1,R7,R1
   \   00000868   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000086C   0x1A40             SUBS     R0,R0,R1
   \   0000086E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000870   0x.... 0x....      BL       f_abs16
   \   00000874   0x4681             MOV      R9,R0
   \   00000876   0x.... 0x....      LDR.W    R0,??DataTable6_6
   \   0000087A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000087C   0x5C38             LDRB     R0,[R7, R0]
   \   0000087E   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000882   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000884   0x1879             ADDS     R1,R7,R1
   \   00000886   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   0000088A   0x1A40             SUBS     R0,R0,R1
   \   0000088C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000088E   0x.... 0x....      BL       f_abs16
   \   00000892   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   00000896   0x4581             CMP      R9,R0
   \   00000898   0xDA27             BGE.N    ??Search_BlackEdge_43
   \   0000089A   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   0000089E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000008A0   0x5C38             LDRB     R0,[R7, R0]
   \   000008A2   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   000008A6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000008A8   0x1879             ADDS     R1,R7,R1
   \   000008AA   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000008AE   0x1A40             SUBS     R0,R0,R1
   \   000008B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000008B2   0x.... 0x....      BL       f_abs16
   \   000008B6   0x2804             CMP      R0,#+4
   \   000008B8   0xDA17             BGE.N    ??Search_BlackEdge_43
    828                   {
    829                     if(Row_state[i] == 1||Row_state[i] == 2)//对于第一次进行一个判断
   \   000008BA   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000008BE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000008C0   0x5C38             LDRB     R0,[R7, R0]
   \   000008C2   0x2801             CMP      R0,#+1
   \   000008C4   0xD005             BEQ.N    ??Search_BlackEdge_44
   \   000008C6   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000008CA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000008CC   0x5C38             LDRB     R0,[R7, R0]
   \   000008CE   0x2802             CMP      R0,#+2
   \   000008D0   0xD105             BNE.N    ??Search_BlackEdge_45
    830                        Row_state[i] = 2;//0表示的是左边丢点,而右边没有丢点
   \                     ??Search_BlackEdge_44: (+1)
   \   000008D2   0x2002             MOVS     R0,#+2
   \   000008D4   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000008D8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000008DA   0x5478             STRB     R0,[R7, R1]
   \   000008DC   0xE00A             B.N      ??Search_BlackEdge_39
    831                     else
    832                        Row_state[i] = 0;//0表示的是只有左边丢点
   \                     ??Search_BlackEdge_45: (+1)
   \   000008DE   0x2000             MOVS     R0,#+0
   \   000008E0   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000008E4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000008E6   0x5478             STRB     R0,[R7, R1]
   \   000008E8   0xE004             B.N      ??Search_BlackEdge_39
    833                   }
    834                   else 
    835                   {
    836                     Row_state[i] = 2;//2表示的是两边都丢点
   \                     ??Search_BlackEdge_43: (+1)
   \   000008EA   0x2002             MOVS     R0,#+2
   \   000008EC   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000008F0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000008F2   0x5478             STRB     R0,[R7, R1]
    837                   }
    838                }
    839              
    840                
    841                
    842                  if(Row_state[i-1] == 0)//左边丢点
   \                     ??Search_BlackEdge_39: (+1)
   \   000008F4   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000008F8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000008FA   0x1838             ADDS     R0,R7,R0
   \   000008FC   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000900   0x2800             CMP      R0,#+0
   \   00000902   0xD131             BNE.N    ??Search_BlackEdge_46
    843                  {
    844                    if((right_black[i] - left_black[i]) - (right_black[un_lost_hang] - left_black[un_lost_hang]) >= 3)
   \   00000904   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000908   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000090A   0x5C38             LDRB     R0,[R7, R0]
   \   0000090C   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000910   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000912   0x5C79             LDRB     R1,[R7, R1]
   \   00000914   0x1A40             SUBS     R0,R0,R1
   \   00000916   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000091A   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   0000091C   0x5C71             LDRB     R1,[R6, R1]
   \   0000091E   0x1A40             SUBS     R0,R0,R1
   \   00000920   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000924   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000926   0x5C71             LDRB     R1,[R6, R1]
   \   00000928   0x1840             ADDS     R0,R0,R1
   \   0000092A   0x2803             CMP      R0,#+3
   \   0000092C   0xDB4B             BLT.N    ??Search_BlackEdge_47
    845                    {
    846                      if(Row_state[i] == 1 ||Row_state[i] == 2)
   \   0000092E   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000932   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000934   0x5C38             LDRB     R0,[R7, R0]
   \   00000936   0x2801             CMP      R0,#+1
   \   00000938   0xD005             BEQ.N    ??Search_BlackEdge_48
   \   0000093A   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000093E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000940   0x5C38             LDRB     R0,[R7, R0]
   \   00000942   0x2802             CMP      R0,#+2
   \   00000944   0xD104             BNE.N    ??Search_BlackEdge_49
    847                      {
    848                        Row_state[i] = 2;
   \                     ??Search_BlackEdge_48: (+1)
   \   00000946   0x2002             MOVS     R0,#+2
   \   00000948   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000094C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000094E   0x5478             STRB     R0,[R7, R1]
    849                      }
    850                      if(Row_state[i] == 3)
   \                     ??Search_BlackEdge_49: (+1)
   \   00000950   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000954   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000956   0x5C38             LDRB     R0,[R7, R0]
   \   00000958   0x2803             CMP      R0,#+3
   \   0000095A   0xD134             BNE.N    ??Search_BlackEdge_47
    851                      {
    852                        Row_state[i] = 0;
   \   0000095C   0x2000             MOVS     R0,#+0
   \   0000095E   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000962   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000964   0x5478             STRB     R0,[R7, R1]
   \   00000966   0xE02E             B.N      ??Search_BlackEdge_47
    853                      }
    854                    }
    855                  }
    856                  
    857                 else if(Row_state[i-1] == 1)//左边丢点
   \                     ??Search_BlackEdge_46: (+1)
   \   00000968   0x....             LDR.N    R0,??DataTable6_5
   \   0000096A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000096C   0x1838             ADDS     R0,R7,R0
   \   0000096E   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000972   0x2801             CMP      R0,#+1
   \   00000974   0xD127             BNE.N    ??Search_BlackEdge_47
    858                  {
    859                    if((right_black[i] - left_black[i]) - (right_black[un_lost_hang] - left_black[un_lost_hang]) >= 3)
   \   00000976   0x....             LDR.N    R0,??DataTable6_9
   \   00000978   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000097A   0x5C38             LDRB     R0,[R7, R0]
   \   0000097C   0x....             LDR.N    R1,??DataTable6_6
   \   0000097E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000980   0x5C79             LDRB     R1,[R7, R1]
   \   00000982   0x1A40             SUBS     R0,R0,R1
   \   00000984   0x....             LDR.N    R1,??DataTable6_9
   \   00000986   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000988   0x5C71             LDRB     R1,[R6, R1]
   \   0000098A   0x1A40             SUBS     R0,R0,R1
   \   0000098C   0x....             LDR.N    R1,??DataTable6_6
   \   0000098E   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000990   0x5C71             LDRB     R1,[R6, R1]
   \   00000992   0x1840             ADDS     R0,R0,R1
   \   00000994   0x2803             CMP      R0,#+3
   \   00000996   0xDB16             BLT.N    ??Search_BlackEdge_47
    860                    {
    861                      if(Row_state[i] == 0 ||Row_state[i] == 2)
   \   00000998   0x....             LDR.N    R0,??DataTable6_5
   \   0000099A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000099C   0x5C38             LDRB     R0,[R7, R0]
   \   0000099E   0x2800             CMP      R0,#+0
   \   000009A0   0xD004             BEQ.N    ??Search_BlackEdge_50
   \   000009A2   0x....             LDR.N    R0,??DataTable6_5
   \   000009A4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009A6   0x5C38             LDRB     R0,[R7, R0]
   \   000009A8   0x2802             CMP      R0,#+2
   \   000009AA   0xD103             BNE.N    ??Search_BlackEdge_51
    862                      {
    863                        Row_state[i] = 2;
   \                     ??Search_BlackEdge_50: (+1)
   \   000009AC   0x2002             MOVS     R0,#+2
   \   000009AE   0x....             LDR.N    R1,??DataTable6_5
   \   000009B0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009B2   0x5478             STRB     R0,[R7, R1]
    864                      }
    865                     if(Row_state[i] == 3)
   \                     ??Search_BlackEdge_51: (+1)
   \   000009B4   0x....             LDR.N    R0,??DataTable6_5
   \   000009B6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009B8   0x5C38             LDRB     R0,[R7, R0]
   \   000009BA   0x2803             CMP      R0,#+3
   \   000009BC   0xD103             BNE.N    ??Search_BlackEdge_47
    866                       Row_state[i] = 1;
   \   000009BE   0x2001             MOVS     R0,#+1
   \   000009C0   0x....             LDR.N    R1,??DataTable6_5
   \   000009C2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009C4   0x5478             STRB     R0,[R7, R1]
    867                    }
    868                  }
    869                
    870              //记录最近的都没有丢点的行
    871                if( Row_state[i] == 3)
   \                     ??Search_BlackEdge_47: (+1)
   \   000009C6   0x....             LDR.N    R0,??DataTable6_5
   \   000009C8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009CA   0x5C38             LDRB     R0,[R7, R0]
   \   000009CC   0x2803             CMP      R0,#+3
   \   000009CE   0xD100             BNE.N    ??Search_BlackEdge_52
    872                {
    873                  un_lost_hang = i;
   \   000009D0   0x003E             MOVS     R6,R7
    874                }
    875                ////////////左右边沿标记结束/////////////////////////
    876                
    877                //前面对赛道进行了状态的判断，这里做出初步的拟合
    878                if(Row_state[i] == 0)  //左边丢点
   \                     ??Search_BlackEdge_52: (+1)
   \   000009D2   0x....             LDR.N    R0,??DataTable6_5
   \   000009D4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009D6   0x5C38             LDRB     R0,[R7, R0]
   \   000009D8   0x2800             CMP      R0,#+0
   \   000009DA   0xD129             BNE.N    ??Search_BlackEdge_53
    879                {
    880                  if(right_black[i]- (right_black[i-1] - left_black[i-1]) <= 0 )//限幅
   \   000009DC   0x....             LDR.N    R0,??DataTable6_9
   \   000009DE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009E0   0x5C38             LDRB     R0,[R7, R0]
   \   000009E2   0x....             LDR.N    R1,??DataTable6_9
   \   000009E4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009E6   0x1879             ADDS     R1,R7,R1
   \   000009E8   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000009EC   0x1A40             SUBS     R0,R0,R1
   \   000009EE   0x....             LDR.N    R1,??DataTable6_6
   \   000009F0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000009F2   0x1879             ADDS     R1,R7,R1
   \   000009F4   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   000009F8   0xFA50 0xF081      UXTAB    R0,R0,R1
   \   000009FC   0x2801             CMP      R0,#+1
   \   000009FE   0xDA04             BGE.N    ??Search_BlackEdge_54
    881                    left_black[i]=0;
   \   00000A00   0x2000             MOVS     R0,#+0
   \   00000A02   0x....             LDR.N    R1,??DataTable6_6
   \   00000A04   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A06   0x5478             STRB     R0,[R7, R1]
   \   00000A08   0xE055             B.N      ??Search_BlackEdge_22
    882                  else
    883                  left_black[i] = right_black[i] - (right_black[i-1] - left_black[i-1]);//加上1是由于下向上图像在宽度在减小的原因
   \                     ??Search_BlackEdge_54: (+1)
   \   00000A0A   0x....             LDR.N    R0,??DataTable6_9
   \   00000A0C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A0E   0x5C38             LDRB     R0,[R7, R0]
   \   00000A10   0x....             LDR.N    R1,??DataTable6_9
   \   00000A12   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A14   0x1879             ADDS     R1,R7,R1
   \   00000A16   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000A1A   0x1A40             SUBS     R0,R0,R1
   \   00000A1C   0x....             LDR.N    R1,??DataTable6_6
   \   00000A1E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A20   0x1879             ADDS     R1,R7,R1
   \   00000A22   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000A26   0x1808             ADDS     R0,R1,R0
   \   00000A28   0x....             LDR.N    R1,??DataTable6_6
   \   00000A2A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A2C   0x5478             STRB     R0,[R7, R1]
   \   00000A2E   0xE042             B.N      ??Search_BlackEdge_22
    884                }      
    885                else if(Row_state[i] == 1)
   \                     ??Search_BlackEdge_53: (+1)
   \   00000A30   0x....             LDR.N    R0,??DataTable6_5
   \   00000A32   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A34   0x5C38             LDRB     R0,[R7, R0]
   \   00000A36   0x2801             CMP      R0,#+1
   \   00000A38   0xD128             BNE.N    ??Search_BlackEdge_55
    886                {
    887                  if(left_black[i] + (right_black[i-1] - left_black[i-1]) >= COLUMN-1)
   \   00000A3A   0x....             LDR.N    R0,??DataTable6_6
   \   00000A3C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A3E   0x5C38             LDRB     R0,[R7, R0]
   \   00000A40   0x....             LDR.N    R1,??DataTable6_9
   \   00000A42   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A44   0x1879             ADDS     R1,R7,R1
   \   00000A46   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000A4A   0x1808             ADDS     R0,R1,R0
   \   00000A4C   0x....             LDR.N    R1,??DataTable6_6
   \   00000A4E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A50   0x1879             ADDS     R1,R7,R1
   \   00000A52   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000A56   0x1A40             SUBS     R0,R0,R1
   \   00000A58   0x289C             CMP      R0,#+156
   \   00000A5A   0xDB04             BLT.N    ??Search_BlackEdge_56
    888                    right_black[i] = COLUMN-1;   
   \   00000A5C   0x209C             MOVS     R0,#+156
   \   00000A5E   0x....             LDR.N    R1,??DataTable6_9
   \   00000A60   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A62   0x5478             STRB     R0,[R7, R1]
   \   00000A64   0xE027             B.N      ??Search_BlackEdge_22
    889                  else
    890                    right_black[i] = left_black[i] + (right_black[i-1] - left_black[i-1]);//
   \                     ??Search_BlackEdge_56: (+1)
   \   00000A66   0x....             LDR.N    R0,??DataTable6_6
   \   00000A68   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A6A   0x5C38             LDRB     R0,[R7, R0]
   \   00000A6C   0x....             LDR.N    R1,??DataTable6_9
   \   00000A6E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A70   0x1879             ADDS     R1,R7,R1
   \   00000A72   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000A76   0x1808             ADDS     R0,R1,R0
   \   00000A78   0x....             LDR.N    R1,??DataTable6_6
   \   00000A7A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A7C   0x1879             ADDS     R1,R7,R1
   \   00000A7E   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000A82   0x1A40             SUBS     R0,R0,R1
   \   00000A84   0x....             LDR.N    R1,??DataTable6_9
   \   00000A86   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A88   0x5478             STRB     R0,[R7, R1]
   \   00000A8A   0xE014             B.N      ??Search_BlackEdge_22
    891                }
    892                else if(Row_state[i] == 2)
   \                     ??Search_BlackEdge_55: (+1)
   \   00000A8C   0x....             LDR.N    R0,??DataTable6_5
   \   00000A8E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A90   0x5C38             LDRB     R0,[R7, R0]
   \   00000A92   0x2802             CMP      R0,#+2
   \   00000A94   0xD10F             BNE.N    ??Search_BlackEdge_22
    893                {
    894                   left_black[i] = left_black[i-1];
   \   00000A96   0x....             LDR.N    R0,??DataTable6_6
   \   00000A98   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000A9A   0x1838             ADDS     R0,R7,R0
   \   00000A9C   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000AA0   0x....             LDR.N    R1,??DataTable6_6
   \   00000AA2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000AA4   0x5478             STRB     R0,[R7, R1]
    895                   right_black[i] = right_black[i-1];
   \   00000AA6   0x....             LDR.N    R0,??DataTable6_9
   \   00000AA8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000AAA   0x1838             ADDS     R0,R7,R0
   \   00000AAC   0xF810 0x0C01      LDRB     R0,[R0, #-1]
   \   00000AB0   0x....             LDR.N    R1,??DataTable6_9
   \   00000AB2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000AB4   0x5478             STRB     R0,[R7, R1]
    896                 }
    897              } 
    898              
    899              
    900              hang_search_start = (right_black[i] + left_black[i])/2; 
   \                     ??Search_BlackEdge_22: (+1)
   \   00000AB6   0x....             LDR.N    R0,??DataTable6_9
   \   00000AB8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000ABA   0x5C38             LDRB     R0,[R7, R0]
   \   00000ABC   0x....             LDR.N    R1,??DataTable6_6
   \   00000ABE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000AC0   0x5C79             LDRB     R1,[R7, R1]
   \   00000AC2   0x1808             ADDS     R0,R1,R0
   \   00000AC4   0x2102             MOVS     R1,#+2
   \   00000AC6   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000ACA   0x....             LDR.N    R1,??DataTable6_4
   \   00000ACC   0x7008             STRB     R0,[R1, #+0]
    901              //////////////////左右的处理结束///////////////////////////// 
    902              
    903              ///对最高有效行的判断/////////////判断一/////////////////////
    904          
    905          
    906              if( i> 20 &&i<=top_whiteline && right_black[i] -  left_black[i] < 2*(ROW-i)/5+ WHITE_TOP_WHITELINE_POINT   //////////////////////////////////////////////////////////////////////////
    907                 && (right_black[i-1] -  left_black[i-1]) <  2*(ROW-i)/5 + WHITE_TOP_WHITELINE_POINT 
    908                 ) //只判定一次&& top_whiteline >= ROW-1
   \   00000ACE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000AD0   0x2F15             CMP      R7,#+21
   \   00000AD2   0xDB2D             BLT.N    ??Search_BlackEdge_57
   \   00000AD4   0x....             LDR.N    R0,??DataTable6_2
   \   00000AD6   0x7800             LDRB     R0,[R0, #+0]
   \   00000AD8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000ADA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000ADC   0x42B8             CMP      R0,R7
   \   00000ADE   0xDB27             BLT.N    ??Search_BlackEdge_57
   \   00000AE0   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000AE2   0xF1D7 0x0032      RSBS     R0,R7,#+50
   \   00000AE6   0x0040             LSLS     R0,R0,#+1
   \   00000AE8   0x2105             MOVS     R1,#+5
   \   00000AEA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000AEE   0x300F             ADDS     R0,R0,#+15
   \   00000AF0   0x....             LDR.N    R1,??DataTable6_9
   \   00000AF2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000AF4   0x5C79             LDRB     R1,[R7, R1]
   \   00000AF6   0x....             LDR.N    R2,??DataTable6_6
   \   00000AF8   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000AFA   0x5CBA             LDRB     R2,[R7, R2]
   \   00000AFC   0x1A89             SUBS     R1,R1,R2
   \   00000AFE   0x4281             CMP      R1,R0
   \   00000B00   0xDA16             BGE.N    ??Search_BlackEdge_57
   \   00000B02   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B04   0xF1D7 0x0032      RSBS     R0,R7,#+50
   \   00000B08   0x0040             LSLS     R0,R0,#+1
   \   00000B0A   0x2105             MOVS     R1,#+5
   \   00000B0C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000B10   0x300F             ADDS     R0,R0,#+15
   \   00000B12   0x....             LDR.N    R1,??DataTable6_9
   \   00000B14   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B16   0x1879             ADDS     R1,R7,R1
   \   00000B18   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000B1C   0x....             LDR.N    R2,??DataTable6_6
   \   00000B1E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B20   0x18BA             ADDS     R2,R7,R2
   \   00000B22   0xF812 0x2C01      LDRB     R2,[R2, #-1]
   \   00000B26   0x1A89             SUBS     R1,R1,R2
   \   00000B28   0x4281             CMP      R1,R0
   \   00000B2A   0xDA01             BGE.N    ??Search_BlackEdge_57
    909              { 
    910               // if(i<ROW-1) while(1){}
    911                top_whiteline = i;
   \   00000B2C   0x....             LDR.N    R0,??DataTable6_2
   \   00000B2E   0x7007             STRB     R7,[R0, #+0]
    912              }
    913              /////////////////////判断二////////////////////////
    914              center_white[i] = (right_black[i] + left_black[i])/2; 
   \                     ??Search_BlackEdge_57: (+1)
   \   00000B30   0x....             LDR.N    R0,??DataTable6_9
   \   00000B32   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B34   0x5C38             LDRB     R0,[R7, R0]
   \   00000B36   0x....             LDR.N    R1,??DataTable6_6
   \   00000B38   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B3A   0x5C79             LDRB     R1,[R7, R1]
   \   00000B3C   0x1808             ADDS     R0,R1,R0
   \   00000B3E   0x2102             MOVS     R1,#+2
   \   00000B40   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000B44   0x.... 0x....      LDR.W    R1,??DataTable7
   \   00000B48   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B4A   0x5478             STRB     R0,[R7, R1]
    915              if(i>10 && i < ROW-1 &&top_whiteline >= ROW-1 &&( VideoImage2[i-1][center_white[i]] - VideoImage2[i+1][center_white[i]] > OT - 10) /////top_whiteline >= ROW-1 //////////中点跳变////////////////////////////////
    916                 &&  VideoImage2[i-1][center_white[i]-1] - VideoImage2[i+1][center_white[i]-1] > OT - 10
    917                        &&  VideoImage2[i-1][center_white[i]+1] - VideoImage2[i + 1][center_white[i]+1] > OT - 10 )  //最高行的判断用原始图像
   \   00000B4C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B4E   0x2F0B             CMP      R7,#+11
   \   00000B50   0xF2C0 0x8096      BLT.W    ??Search_BlackEdge_58
   \   00000B54   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B56   0x2F31             CMP      R7,#+49
   \   00000B58   0xF280 0x8092      BGE.W    ??Search_BlackEdge_58
   \   00000B5C   0x....             LDR.N    R0,??DataTable6_2
   \   00000B5E   0x7800             LDRB     R0,[R0, #+0]
   \   00000B60   0x2831             CMP      R0,#+49
   \   00000B62   0xF2C0 0x808D      BLT.W    ??Search_BlackEdge_58
   \   00000B66   0x....             LDR.N    R0,??DataTable6_7
   \   00000B68   0x7800             LDRB     R0,[R0, #+0]
   \   00000B6A   0x380A             SUBS     R0,R0,#+10
   \   00000B6C   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000B70   0x229D             MOVS     R2,#+157
   \   00000B72   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000B76   0x.... 0x....      LDR.W    R2,??DataTable7
   \   00000B7A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B7C   0x5CBA             LDRB     R2,[R7, R2]
   \   00000B7E   0x1851             ADDS     R1,R2,R1
   \   00000B80   0xF811 0x1C9D      LDRB     R1,[R1, #-157]
   \   00000B84   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   00000B88   0x239D             MOVS     R3,#+157
   \   00000B8A   0xFB17 0x2203      SMLABB   R2,R7,R3,R2
   \   00000B8E   0x.... 0x....      LDR.W    R3,??DataTable7
   \   00000B92   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000B94   0x5CFB             LDRB     R3,[R7, R3]
   \   00000B96   0x189A             ADDS     R2,R3,R2
   \   00000B98   0xF892 0x209D      LDRB     R2,[R2, #+157]
   \   00000B9C   0x1A89             SUBS     R1,R1,R2
   \   00000B9E   0x4288             CMP      R0,R1
   \   00000BA0   0xDA6E             BGE.N    ??Search_BlackEdge_58
   \   00000BA2   0x....             LDR.N    R0,??DataTable6_7
   \   00000BA4   0x7800             LDRB     R0,[R0, #+0]
   \   00000BA6   0x380A             SUBS     R0,R0,#+10
   \   00000BA8   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000BAC   0x229D             MOVS     R2,#+157
   \   00000BAE   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000BB2   0x.... 0x....      LDR.W    R2,??DataTable7
   \   00000BB6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000BB8   0x5CBA             LDRB     R2,[R7, R2]
   \   00000BBA   0x1851             ADDS     R1,R2,R1
   \   00000BBC   0xF811 0x1C9E      LDRB     R1,[R1, #-158]
   \   00000BC0   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   00000BC4   0x239D             MOVS     R3,#+157
   \   00000BC6   0xFB17 0x2203      SMLABB   R2,R7,R3,R2
   \   00000BCA   0x.... 0x....      LDR.W    R3,??DataTable7
   \   00000BCE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000BD0   0x5CFB             LDRB     R3,[R7, R3]
   \   00000BD2   0x189A             ADDS     R2,R3,R2
   \   00000BD4   0xF892 0x209C      LDRB     R2,[R2, #+156]
   \   00000BD8   0x1A89             SUBS     R1,R1,R2
   \   00000BDA   0x4288             CMP      R0,R1
   \   00000BDC   0xDA50             BGE.N    ??Search_BlackEdge_58
   \   00000BDE   0x....             LDR.N    R0,??DataTable6_7
   \   00000BE0   0x7800             LDRB     R0,[R0, #+0]
   \   00000BE2   0x380A             SUBS     R0,R0,#+10
   \   00000BE4   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000BE8   0x229D             MOVS     R2,#+157
   \   00000BEA   0xFB17 0x1102      SMLABB   R1,R7,R2,R1
   \   00000BEE   0x.... 0x....      LDR.W    R2,??DataTable7
   \   00000BF2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000BF4   0x5CBA             LDRB     R2,[R7, R2]
   \   00000BF6   0x1851             ADDS     R1,R2,R1
   \   00000BF8   0xF811 0x1C9C      LDRB     R1,[R1, #-156]
   \   00000BFC   0x.... 0x....      LDR.W    R2,??DataTable7_1
   \   00000C00   0x239D             MOVS     R3,#+157
   \   00000C02   0xFB17 0x2203      SMLABB   R2,R7,R3,R2
   \   00000C06   0x.... 0x....      LDR.W    R3,??DataTable7
   \   00000C0A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000C0C   0x5CFB             LDRB     R3,[R7, R3]
   \   00000C0E   0x189A             ADDS     R2,R3,R2
   \   00000C10   0xF892 0x209E      LDRB     R2,[R2, #+158]
   \   00000C14   0x1A89             SUBS     R1,R1,R2
   \   00000C16   0x4288             CMP      R0,R1
   \   00000C18   0xDA32             BGE.N    ??Search_BlackEdge_58
    918              {
    919                //用这种方式有一个弊端就是，图像存在一个突变，无法真实的反应赛道，特别是60度和50度弯道的微小差别，这里对其经行修补
    920                 top_whiteline = i-1;
   \   00000C1A   0x0038             MOVS     R0,R7
   \   00000C1C   0x1E40             SUBS     R0,R0,#+1
   \   00000C1E   0x....             LDR.N    R1,??DataTable6_2
   \   00000C20   0x7008             STRB     R0,[R1, #+0]
    921                for( n = top_whiteline; n >  top_whiteline - 7;n--)
   \   00000C22   0x....             LDR.N    R0,??DataTable6_2
   \   00000C24   0x7800             LDRB     R0,[R0, #+0]
   \   00000C26   0x0004             MOVS     R4,R0
   \                     ??Search_BlackEdge_59: (+1)
   \   00000C28   0x....             LDR.N    R0,??DataTable6_2
   \   00000C2A   0x7800             LDRB     R0,[R0, #+0]
   \   00000C2C   0x1FC0             SUBS     R0,R0,#+7
   \   00000C2E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000C30   0x42A0             CMP      R0,R4
   \   00000C32   0xDA25             BGE.N    ??Search_BlackEdge_58
    922                {
    923                  if(left_black[n] <= 1)
   \   00000C34   0x....             LDR.N    R0,??DataTable6_6
   \   00000C36   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000C38   0x5C20             LDRB     R0,[R4, R0]
   \   00000C3A   0x2802             CMP      R0,#+2
   \   00000C3C   0xDA0C             BGE.N    ??Search_BlackEdge_60
    924                  {
    925                    for( k = n; k <= top_whiteline ; k++)
   \   00000C3E   0x0025             MOVS     R5,R4
   \                     ??Search_BlackEdge_61: (+1)
   \   00000C40   0x....             LDR.N    R0,??DataTable6_2
   \   00000C42   0x7800             LDRB     R0,[R0, #+0]
   \   00000C44   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000C46   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000C48   0x42A8             CMP      R0,R5
   \   00000C4A   0xDB17             BLT.N    ??Search_BlackEdge_62
    926                    {
    927                       left_black[k] = 0;
   \   00000C4C   0x2000             MOVS     R0,#+0
   \   00000C4E   0x....             LDR.N    R1,??DataTable6_6
   \   00000C50   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000C52   0x5468             STRB     R0,[R5, R1]
    928                       //进行规划后的行的状态需要重新的定义
    929                   /*  if(Row_state[k] == 1 ||Row_state[k] == 2)
    930                      {
    931                        Row_state[k] = 2;
    932                      }
    933                      if(Row_state[k] == 3)
    934                      {
    935                        Row_state[k] = 0;
    936                      }*/
    937                    }
   \   00000C54   0x1C6D             ADDS     R5,R5,#+1
   \   00000C56   0xE7F3             B.N      ??Search_BlackEdge_61
    938                  //  break;  //这里还不能用break。因为有的时候可能会有一个点跳出来了。如 0 1 0 0 0
    939                  }
    940                  else if(right_black[n] >= COLUMN-2)
   \                     ??Search_BlackEdge_60: (+1)
   \   00000C58   0x....             LDR.N    R0,??DataTable6_9
   \   00000C5A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000C5C   0x5C20             LDRB     R0,[R4, R0]
   \   00000C5E   0x289B             CMP      R0,#+155
   \   00000C60   0xDB0C             BLT.N    ??Search_BlackEdge_62
    941                  {
    942                    for( k = n; k <= top_whiteline ; k++)
   \   00000C62   0x0025             MOVS     R5,R4
   \                     ??Search_BlackEdge_63: (+1)
   \   00000C64   0x....             LDR.N    R0,??DataTable6_2
   \   00000C66   0x7800             LDRB     R0,[R0, #+0]
   \   00000C68   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000C6A   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000C6C   0x42A8             CMP      R0,R5
   \   00000C6E   0xDB05             BLT.N    ??Search_BlackEdge_62
    943                    {
    944                       right_black[k] = COLUMN-1;
   \   00000C70   0x209C             MOVS     R0,#+156
   \   00000C72   0x....             LDR.N    R1,??DataTable6_9
   \   00000C74   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000C76   0x5468             STRB     R0,[R5, R1]
    945                       
    946                   /*  if(Row_state[k] == 0 ||Row_state[k] == 2)
    947                      {
    948                        Row_state[k] = 2;
    949                      }
    950                      if(Row_state[k] == 3)
    951                      {
    952                        Row_state[k] = 1;
    953                      }*/
    954                    }
   \   00000C78   0x1C6D             ADDS     R5,R5,#+1
   \   00000C7A   0xE7F3             B.N      ??Search_BlackEdge_63
    955                    //break;
    956                  }
    957                }
   \                     ??Search_BlackEdge_62: (+1)
   \   00000C7C   0x1E64             SUBS     R4,R4,#+1
   \   00000C7E   0xE7D3             B.N      ??Search_BlackEdge_59
    958              }
    959          
    960            }//for循环的结束  
   \                     ??Search_BlackEdge_58: (+1)
   \   00000C80   0x1C7F             ADDS     R7,R7,#+1
   \   00000C82   0xF7FF 0xB9EA      B.W      ??Search_BlackEdge_2
    961            
    962          }
   \                     ??Search_BlackEdge_3: (+1)
   \   00000C86   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    963          
    964          //------------------------通过找出来的赛道对，两边沿线进行处理和虚构并拟合出中心线----------------------//
    965          /*对赛道进行拉线连接，左右各自连接自己的，然后对于中线，利用赛道的状态标志，再进行一次拟合
    966           0  表示左边沿线断点
    967           1  表示右边沿线断点
    968           2  表示两边都断了 
    969          到达边界后不能直接的拉线了
    970          对于虚线和十字道路的处理，只要保证两点就行了，即1、保证能找到在跑道上的点；2、保证对赛道的行状态的记录绝对的正确//////
    971          */

   \                                 In section .text, align 2, keep-with-next
    972          void Deal_BlackEdge(void)
    973          { 
   \                     Deal_BlackEdge: (+1)
   \   00000000   0xB4F0             PUSH     {R4-R7}
    974            int16 i=0,k=0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x2100             MOVS     R1,#+0
    975            uint8 un_out_hang = bottom_whitebase ;
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable7_2
   \   0000000A   0x7812             LDRB     R2,[R2, #+0]
    976            uint8 lost_start_line=0;
   \   0000000C   0x2300             MOVS     R3,#+0
    977            uint8 lost_end_line=0;
   \   0000000E   0x2400             MOVS     R4,#+0
    978            left_top_whiteline = top_whiteline;
   \   00000010   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   00000014   0x782D             LDRB     R5,[R5, #+0]
   \   00000016   0x.... 0x....      LDR.W    R6,??DataTable7_4
   \   0000001A   0x7035             STRB     R5,[R6, #+0]
    979            right_top_whiteline = top_whiteline;
   \   0000001C   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   00000020   0x782D             LDRB     R5,[R5, #+0]
   \   00000022   0x.... 0x....      LDR.W    R6,??DataTable7_5
   \   00000026   0x7035             STRB     R5,[R6, #+0]
    980          
    981            //图像的突变可能是噪点的出现，这里可以试着对Row_state[i]经行一下中值滤波
    982            //对Row_state[i]滤波
    983            for( i=bottom_whitebase + 1;i < top_whiteline-2;i++)
   \   00000028   0x.... 0x....      LDR.W    R5,??DataTable7_2
   \   0000002C   0x782D             LDRB     R5,[R5, #+0]
   \   0000002E   0x1C6D             ADDS     R5,R5,#+1
   \   00000030   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_0: (+1)
   \   00000032   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000034   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   00000038   0x782D             LDRB     R5,[R5, #+0]
   \   0000003A   0x1EAD             SUBS     R5,R5,#+2
   \   0000003C   0x42A8             CMP      R0,R5
   \   0000003E   0xDA24             BGE.N    ??Deal_BlackEdge_1
    984           {
    985             if(Row_state[i-1] == Row_state[i+1] && Row_state[i-1] != Row_state[i])
   \   00000040   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000044   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000046   0x1945             ADDS     R5,R0,R5
   \   00000048   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   0000004C   0x.... 0x....      LDR.W    R6,??DataTable7_6
   \   00000050   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000052   0x1986             ADDS     R6,R0,R6
   \   00000054   0x7876             LDRB     R6,[R6, #+1]
   \   00000056   0x42B5             CMP      R5,R6
   \   00000058   0xD115             BNE.N    ??Deal_BlackEdge_2
   \   0000005A   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000005E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000060   0x1945             ADDS     R5,R0,R5
   \   00000062   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000066   0x.... 0x....      LDR.W    R6,??DataTable7_6
   \   0000006A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000006C   0x5D86             LDRB     R6,[R0, R6]
   \   0000006E   0x42B5             CMP      R5,R6
   \   00000070   0xD009             BEQ.N    ??Deal_BlackEdge_2
    986             {
    987               Row_state[i] = Row_state[i-1];
   \   00000072   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000076   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000078   0x1945             ADDS     R5,R0,R5
   \   0000007A   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   0000007E   0x.... 0x....      LDR.W    R6,??DataTable7_6
   \   00000082   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000084   0x5585             STRB     R5,[R0, R6]
    988             }
    989           }
   \                     ??Deal_BlackEdge_2: (+1)
   \   00000086   0x1C40             ADDS     R0,R0,#+1
   \   00000088   0xE7D3             B.N      ??Deal_BlackEdge_0
    990            
    991            
    992            
    993            for( i=bottom_whitebase+1 ;i < top_whiteline-1;i++)
   \                     ??Deal_BlackEdge_1: (+1)
   \   0000008A   0x.... 0x....      LDR.W    R5,??DataTable7_2
   \   0000008E   0x782D             LDRB     R5,[R5, #+0]
   \   00000090   0x1C6D             ADDS     R5,R5,#+1
   \   00000092   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_3: (+1)
   \   00000094   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000096   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   0000009A   0x782D             LDRB     R5,[R5, #+0]
   \   0000009C   0x1E6D             SUBS     R5,R5,#+1
   \   0000009E   0x42A8             CMP      R0,R5
   \   000000A0   0xF280 0x809C      BGE.W    ??Deal_BlackEdge_4
    994            {
    995              lost_start_line = 0;
   \   000000A4   0x2500             MOVS     R5,#+0
   \   000000A6   0x002B             MOVS     R3,R5
    996              lost_end_line = 0;
   \   000000A8   0x2500             MOVS     R5,#+0
   \   000000AA   0x002C             MOVS     R4,R5
    997              
    998              if( (Row_state[i-1] == 1 || Row_state[i-1] == 3) && (Row_state[i] == 0 || Row_state[i] == 2))   //判断左边第i 点是否丢点 //////////////////////////////////////////////////////////  
   \   000000AC   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   000000B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000B2   0x1945             ADDS     R5,R0,R5
   \   000000B4   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   000000B8   0x2D01             CMP      R5,#+1
   \   000000BA   0xD008             BEQ.N    ??Deal_BlackEdge_5
   \   000000BC   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   000000C0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000C2   0x1945             ADDS     R5,R0,R5
   \   000000C4   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   000000C8   0x2D03             CMP      R5,#+3
   \   000000CA   0xF040 0x8085      BNE.W    ??Deal_BlackEdge_6
   \                     ??Deal_BlackEdge_5: (+1)
   \   000000CE   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   000000D2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000D4   0x5D45             LDRB     R5,[R0, R5]
   \   000000D6   0x2D00             CMP      R5,#+0
   \   000000D8   0xD005             BEQ.N    ??Deal_BlackEdge_7
   \   000000DA   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   000000DE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E0   0x5D45             LDRB     R5,[R0, R5]
   \   000000E2   0x2D02             CMP      R5,#+2
   \   000000E4   0xD178             BNE.N    ??Deal_BlackEdge_6
    999              {
   1000                 lost_start_line = i - 1;//记录丢点的前一行
   \                     ??Deal_BlackEdge_7: (+1)
   \   000000E6   0x0005             MOVS     R5,R0
   \   000000E8   0x1E6D             SUBS     R5,R5,#+1
   \   000000EA   0x002B             MOVS     R3,R5
   1001                 while(i < top_whiteline-1)
   \                     ??Deal_BlackEdge_8: (+1)
   \   000000EC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000EE   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   000000F2   0x782D             LDRB     R5,[R5, #+0]
   \   000000F4   0x1E6D             SUBS     R5,R5,#+1
   \   000000F6   0x42A8             CMP      R0,R5
   \   000000F8   0xDA28             BGE.N    ??Deal_BlackEdge_9
   1002                  {
   1003                    if((Row_state[i] == 1 || Row_state[i] == 3) && (Row_state[i+1] == 1 || Row_state[i+1] == 3))  //
   \   000000FA   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   000000FE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000100   0x5D45             LDRB     R5,[R0, R5]
   \   00000102   0x2D01             CMP      R5,#+1
   \   00000104   0xD005             BEQ.N    ??Deal_BlackEdge_10
   \   00000106   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000010A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000010C   0x5D45             LDRB     R5,[R0, R5]
   \   0000010E   0x2D03             CMP      R5,#+3
   \   00000110   0xD11A             BNE.N    ??Deal_BlackEdge_11
   \                     ??Deal_BlackEdge_10: (+1)
   \   00000112   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000116   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000118   0x1945             ADDS     R5,R0,R5
   \   0000011A   0x786D             LDRB     R5,[R5, #+1]
   \   0000011C   0x2D01             CMP      R5,#+1
   \   0000011E   0xD006             BEQ.N    ??Deal_BlackEdge_12
   \   00000120   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000124   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000126   0x1945             ADDS     R5,R0,R5
   \   00000128   0x786D             LDRB     R5,[R5, #+1]
   \   0000012A   0x2D03             CMP      R5,#+3
   \   0000012C   0xD10C             BNE.N    ??Deal_BlackEdge_11
   1004                    {
   1005                      if(lost_end_line >= top_whiteline -2)
   \                     ??Deal_BlackEdge_12: (+1)
   \   0000012E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000130   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   00000134   0x782D             LDRB     R5,[R5, #+0]
   \   00000136   0x1EAD             SUBS     R5,R5,#+2
   \   00000138   0x42AC             CMP      R4,R5
   \   0000013A   0xDB02             BLT.N    ??Deal_BlackEdge_13
   1006                        lost_end_line = i;
   \   0000013C   0x0005             MOVS     R5,R0
   \   0000013E   0x002C             MOVS     R4,R5
   \   00000140   0xE001             B.N      ??Deal_BlackEdge_14
   1007                      else
   1008                        lost_end_line = i + 1;
   \                     ??Deal_BlackEdge_13: (+1)
   \   00000142   0x1C45             ADDS     R5,R0,#+1
   \   00000144   0x002C             MOVS     R4,R5
   1009                      
   1010                      break; 
   \                     ??Deal_BlackEdge_14: (+1)
   \   00000146   0xE001             B.N      ??Deal_BlackEdge_9
   1011                    }
   1012                     i++;//i++必须要在if的判断之后进行，否则会导致出错
   \                     ??Deal_BlackEdge_11: (+1)
   \   00000148   0x1C40             ADDS     R0,R0,#+1
   \   0000014A   0xE7CF             B.N      ??Deal_BlackEdge_8
   1013                  }
   1014                 if(lost_end_line !=0)
   \                     ??Deal_BlackEdge_9: (+1)
   \   0000014C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000014E   0x2C00             CMP      R4,#+0
   \   00000150   0xD027             BEQ.N    ??Deal_BlackEdge_15
   1015                 {  
   1016                   for(k = lost_start_line+1; k< lost_end_line;k++)
   \   00000152   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000154   0x1C5D             ADDS     R5,R3,#+1
   \   00000156   0x0029             MOVS     R1,R5
   \                     ??Deal_BlackEdge_16: (+1)
   \   00000158   0x0025             MOVS     R5,R4
   \   0000015A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000015C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000015E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000160   0x42A9             CMP      R1,R5
   \   00000162   0xDA39             BGE.N    ??Deal_BlackEdge_6
   1017                   {                                                                  
   1018                    left_black[k] = left_black[lost_start_line] + (k -lost_start_line)*(left_black[lost_end_line]-left_black[lost_start_line])/(lost_end_line - lost_start_line);  
   \   00000164   0x.... 0x....      LDR.W    R5,??DataTable7_7
   \   00000168   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000016A   0x5D5D             LDRB     R5,[R3, R5]
   \   0000016C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000016E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000170   0x1ACE             SUBS     R6,R1,R3
   \   00000172   0x.... 0x....      LDR.W    R7,??DataTable7_7
   \   00000176   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000178   0x5DE7             LDRB     R7,[R4, R7]
   \   0000017A   0x.... 0x....      LDR.W    R12,??DataTable7_7
   \   0000017E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000180   0xF813 0xC00C      LDRB     R12,[R3, R12]
   \   00000184   0xEBB7 0x070C      SUBS     R7,R7,R12
   \   00000188   0x437E             MULS     R6,R7,R6
   \   0000018A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000018C   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000018E   0x1AE7             SUBS     R7,R4,R3
   \   00000190   0xFB96 0xF6F7      SDIV     R6,R6,R7
   \   00000194   0x1975             ADDS     R5,R6,R5
   \   00000196   0x.... 0x....      LDR.W    R6,??DataTable7_7
   \   0000019A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000019C   0x558D             STRB     R5,[R1, R6]
   1019                   }
   \   0000019E   0x1C49             ADDS     R1,R1,#+1
   \   000001A0   0xE7DA             B.N      ??Deal_BlackEdge_16
   1020                 }   
   1021                else if(lost_end_line ==0 && lost_start_line >  top_whiteline/3 && lost_start_line <ROW-1  ) //当最顶行的点到达边沿的时候，不判定
   \                     ??Deal_BlackEdge_15: (+1)
   \   000001A2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001A4   0x2C00             CMP      R4,#+0
   \   000001A6   0xD117             BNE.N    ??Deal_BlackEdge_6
   \   000001A8   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   000001AC   0x782D             LDRB     R5,[R5, #+0]
   \   000001AE   0x2603             MOVS     R6,#+3
   \   000001B0   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   000001B4   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001B6   0x429D             CMP      R5,R3
   \   000001B8   0xDA0E             BGE.N    ??Deal_BlackEdge_6
   \   000001BA   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000001BC   0x2B31             CMP      R3,#+49
   \   000001BE   0xDA0B             BGE.N    ??Deal_BlackEdge_6
   1022                 {   
   1023                  if( left_black[top_whiteline] > 1)
   \   000001C0   0x.... 0x....      LDR.W    R5,??DataTable7_7
   \   000001C4   0x.... 0x....      LDR.W    R6,??DataTable7_3
   \   000001C8   0x7836             LDRB     R6,[R6, #+0]
   \   000001CA   0x5D75             LDRB     R5,[R6, R5]
   \   000001CC   0x2D02             CMP      R5,#+2
   \   000001CE   0xDB03             BLT.N    ??Deal_BlackEdge_6
   1024                   {
   1025                     left_top_whiteline = lost_start_line;
   \   000001D0   0x.... 0x....      LDR.W    R5,??DataTable7_4
   \   000001D4   0x702B             STRB     R3,[R5, #+0]
   1026                     break;
   \   000001D6   0xE001             B.N      ??Deal_BlackEdge_4
   1027                  }
   1028                 }
   1029                   
   1030              }
   1031            }
   \                     ??Deal_BlackEdge_6: (+1)
   \   000001D8   0x1C40             ADDS     R0,R0,#+1
   \   000001DA   0xE75B             B.N      ??Deal_BlackEdge_3
   1032            
   1033            //右边
   1034            for( i=bottom_whitebase ;i < top_whiteline-1;i++)
   \                     ??Deal_BlackEdge_4: (+1)
   \   000001DC   0x.... 0x....      LDR.W    R5,??DataTable7_2
   \   000001E0   0x782D             LDRB     R5,[R5, #+0]
   \   000001E2   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_17: (+1)
   \   000001E4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001E6   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   000001EA   0x782D             LDRB     R5,[R5, #+0]
   \   000001EC   0x1E6D             SUBS     R5,R5,#+1
   \   000001EE   0x42A8             CMP      R0,R5
   \   000001F0   0xF280 0x809C      BGE.W    ??Deal_BlackEdge_18
   1035            {
   1036              lost_start_line = 0;
   \   000001F4   0x2500             MOVS     R5,#+0
   \   000001F6   0x002B             MOVS     R3,R5
   1037              lost_end_line = 0;
   \   000001F8   0x2500             MOVS     R5,#+0
   \   000001FA   0x002C             MOVS     R4,R5
   1038              if( (Row_state[i-1] == 0 || Row_state[i-1] == 3) && (Row_state[i] == 1 || Row_state[i] == 2))//判断右边第i 点是否丢点
   \   000001FC   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000200   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000202   0x1945             ADDS     R5,R0,R5
   \   00000204   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000208   0x2D00             CMP      R5,#+0
   \   0000020A   0xD008             BEQ.N    ??Deal_BlackEdge_19
   \   0000020C   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000210   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000212   0x1945             ADDS     R5,R0,R5
   \   00000214   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000218   0x2D03             CMP      R5,#+3
   \   0000021A   0xF040 0x8085      BNE.W    ??Deal_BlackEdge_20
   \                     ??Deal_BlackEdge_19: (+1)
   \   0000021E   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000222   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000224   0x5D45             LDRB     R5,[R0, R5]
   \   00000226   0x2D01             CMP      R5,#+1
   \   00000228   0xD005             BEQ.N    ??Deal_BlackEdge_21
   \   0000022A   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000022E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000230   0x5D45             LDRB     R5,[R0, R5]
   \   00000232   0x2D02             CMP      R5,#+2
   \   00000234   0xD178             BNE.N    ??Deal_BlackEdge_20
   1039              {
   1040                  lost_start_line = i - 1;//记录丢点的前一行
   \                     ??Deal_BlackEdge_21: (+1)
   \   00000236   0x0005             MOVS     R5,R0
   \   00000238   0x1E6D             SUBS     R5,R5,#+1
   \   0000023A   0x002B             MOVS     R3,R5
   1041                 while(i< top_whiteline-1)
   \                     ??Deal_BlackEdge_22: (+1)
   \   0000023C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000023E   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   00000242   0x782D             LDRB     R5,[R5, #+0]
   \   00000244   0x1E6D             SUBS     R5,R5,#+1
   \   00000246   0x42A8             CMP      R0,R5
   \   00000248   0xDA28             BGE.N    ??Deal_BlackEdge_23
   1042                  {
   1043                    //连续的两行找到了点则认为找到了连接点
   1044                    if((Row_state[i] == 0 || Row_state[i] == 3) && (Row_state[i+1] == 0 || Row_state[i+1] == 3))
   \   0000024A   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000024E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000250   0x5D45             LDRB     R5,[R0, R5]
   \   00000252   0x2D00             CMP      R5,#+0
   \   00000254   0xD005             BEQ.N    ??Deal_BlackEdge_24
   \   00000256   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   0000025A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000025C   0x5D45             LDRB     R5,[R0, R5]
   \   0000025E   0x2D03             CMP      R5,#+3
   \   00000260   0xD11A             BNE.N    ??Deal_BlackEdge_25
   \                     ??Deal_BlackEdge_24: (+1)
   \   00000262   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000266   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000268   0x1945             ADDS     R5,R0,R5
   \   0000026A   0x786D             LDRB     R5,[R5, #+1]
   \   0000026C   0x2D00             CMP      R5,#+0
   \   0000026E   0xD006             BEQ.N    ??Deal_BlackEdge_26
   \   00000270   0x.... 0x....      LDR.W    R5,??DataTable7_6
   \   00000274   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000276   0x1945             ADDS     R5,R0,R5
   \   00000278   0x786D             LDRB     R5,[R5, #+1]
   \   0000027A   0x2D03             CMP      R5,#+3
   \   0000027C   0xD10C             BNE.N    ??Deal_BlackEdge_25
   1045                    {
   1046                      if(lost_end_line >= top_whiteline -2)
   \                     ??Deal_BlackEdge_26: (+1)
   \   0000027E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000280   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   00000284   0x782D             LDRB     R5,[R5, #+0]
   \   00000286   0x1EAD             SUBS     R5,R5,#+2
   \   00000288   0x42AC             CMP      R4,R5
   \   0000028A   0xDB02             BLT.N    ??Deal_BlackEdge_27
   1047                        lost_end_line = i;
   \   0000028C   0x0005             MOVS     R5,R0
   \   0000028E   0x002C             MOVS     R4,R5
   \   00000290   0xE001             B.N      ??Deal_BlackEdge_28
   1048                      else
   1049                        lost_end_line = i + 1;
   \                     ??Deal_BlackEdge_27: (+1)
   \   00000292   0x1C45             ADDS     R5,R0,#+1
   \   00000294   0x002C             MOVS     R4,R5
   1050                      break;
   \                     ??Deal_BlackEdge_28: (+1)
   \   00000296   0xE001             B.N      ??Deal_BlackEdge_23
   1051                    }  
   1052                    i++;
   \                     ??Deal_BlackEdge_25: (+1)
   \   00000298   0x1C40             ADDS     R0,R0,#+1
   \   0000029A   0xE7CF             B.N      ??Deal_BlackEdge_22
   1053                  }
   1054                 if(lost_end_line !=0)
   \                     ??Deal_BlackEdge_23: (+1)
   \   0000029C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000029E   0x2C00             CMP      R4,#+0
   \   000002A0   0xD027             BEQ.N    ??Deal_BlackEdge_29
   1055                 {
   1056                   for(k = lost_start_line+1; k< lost_end_line;k++)
   \   000002A2   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002A4   0x1C5D             ADDS     R5,R3,#+1
   \   000002A6   0x0029             MOVS     R1,R5
   \                     ??Deal_BlackEdge_30: (+1)
   \   000002A8   0x0025             MOVS     R5,R4
   \   000002AA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000002AC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000002AE   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000002B0   0x42A9             CMP      R1,R5
   \   000002B2   0xDA39             BGE.N    ??Deal_BlackEdge_20
   1057                   {                                                                    
   1058                    right_black[k] = right_black[lost_start_line] + (k -lost_start_line)*(right_black[lost_end_line]-right_black[lost_start_line])/(lost_end_line - lost_start_line);  
   \   000002B4   0x.... 0x....      LDR.W    R5,??DataTable8
   \   000002B8   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002BA   0x5D5D             LDRB     R5,[R3, R5]
   \   000002BC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000002BE   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002C0   0x1ACE             SUBS     R6,R1,R3
   \   000002C2   0x.... 0x....      LDR.W    R7,??DataTable8
   \   000002C6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002C8   0x5DE7             LDRB     R7,[R4, R7]
   \   000002CA   0x.... 0x....      LDR.W    R12,??DataTable8
   \   000002CE   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002D0   0xF813 0xC00C      LDRB     R12,[R3, R12]
   \   000002D4   0xEBB7 0x070C      SUBS     R7,R7,R12
   \   000002D8   0x437E             MULS     R6,R7,R6
   \   000002DA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002DC   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000002DE   0x1AE7             SUBS     R7,R4,R3
   \   000002E0   0xFB96 0xF6F7      SDIV     R6,R6,R7
   \   000002E4   0x1975             ADDS     R5,R6,R5
   \   000002E6   0x.... 0x....      LDR.W    R6,??DataTable8
   \   000002EA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000002EC   0x558D             STRB     R5,[R1, R6]
   1059                   }
   \   000002EE   0x1C49             ADDS     R1,R1,#+1
   \   000002F0   0xE7DA             B.N      ??Deal_BlackEdge_30
   1060                 }
   1061                 else if(lost_end_line ==0 && lost_start_line > top_whiteline/3 && lost_start_line <ROW-1 )
   \                     ??Deal_BlackEdge_29: (+1)
   \   000002F2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002F4   0x2C00             CMP      R4,#+0
   \   000002F6   0xD117             BNE.N    ??Deal_BlackEdge_20
   \   000002F8   0x.... 0x....      LDR.W    R5,??DataTable7_3
   \   000002FC   0x782D             LDRB     R5,[R5, #+0]
   \   000002FE   0x2603             MOVS     R6,#+3
   \   00000300   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   00000304   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000306   0x429D             CMP      R5,R3
   \   00000308   0xDA0E             BGE.N    ??Deal_BlackEdge_20
   \   0000030A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000030C   0x2B31             CMP      R3,#+49
   \   0000030E   0xDA0B             BGE.N    ??Deal_BlackEdge_20
   1062                 {   
   1063                   if(right_black[top_whiteline] < COLUMN -2)
   \   00000310   0x.... 0x....      LDR.W    R5,??DataTable8
   \   00000314   0x.... 0x....      LDR.W    R6,??DataTable7_3
   \   00000318   0x7836             LDRB     R6,[R6, #+0]
   \   0000031A   0x5D75             LDRB     R5,[R6, R5]
   \   0000031C   0x2D9B             CMP      R5,#+155
   \   0000031E   0xDA03             BGE.N    ??Deal_BlackEdge_20
   1064                   {
   1065                     right_top_whiteline  = lost_start_line;
   \   00000320   0x.... 0x....      LDR.W    R5,??DataTable7_5
   \   00000324   0x702B             STRB     R3,[R5, #+0]
   1066                     break;
   \   00000326   0xE001             B.N      ??Deal_BlackEdge_18
   1067                  }
   1068                 }
   1069                 
   1070              }
   1071            }
   \                     ??Deal_BlackEdge_20: (+1)
   \   00000328   0x1C40             ADDS     R0,R0,#+1
   \   0000032A   0xE75B             B.N      ??Deal_BlackEdge_17
   1072           ////////////////
   1073            if(right_top_whiteline > left_top_whiteline)
   \                     ??Deal_BlackEdge_18: (+1)
   \   0000032C   0x.... 0x....      LDR.W    R5,??DataTable7_4
   \   00000330   0x782D             LDRB     R5,[R5, #+0]
   \   00000332   0x.... 0x....      LDR.W    R6,??DataTable7_5
   \   00000336   0x7836             LDRB     R6,[R6, #+0]
   \   00000338   0x42B5             CMP      R5,R6
   \   0000033A   0xD244             BCS.N    ??Deal_BlackEdge_31
   1074            {
   1075              top_whiteline = right_top_whiteline;//除了定义最高行以外，还要对丢线的那一边做补线处理,这里是右边
   \   0000033C   0x.... 0x....      LDR.W    R5,??DataTable7_5
   \   00000340   0x782D             LDRB     R5,[R5, #+0]
   \   00000342   0x.... 0x....      LDR.W    R6,??DataTable7_3
   \   00000346   0x7035             STRB     R5,[R6, #+0]
   1076              for(i = left_top_whiteline;i<=right_top_whiteline;i++)
   \   00000348   0x.... 0x....      LDR.W    R5,??DataTable7_4
   \   0000034C   0x782D             LDRB     R5,[R5, #+0]
   \   0000034E   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_32: (+1)
   \   00000350   0x.... 0x....      LDR.W    R5,??DataTable7_5
   \   00000354   0x782D             LDRB     R5,[R5, #+0]
   \   00000356   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000358   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000035A   0x4285             CMP      R5,R0
   \   0000035C   0xF2C0 0x8082      BLT.W    ??Deal_BlackEdge_33
   1077              {
   1078                 if(right_black[i]- (right_black[i-1] - left_black[i-1]) <= 0 )//限幅//////////////////////////////////////////////////////////////////////////////////////////////////////////
   \   00000360   0x.... 0x....      LDR.W    R5,??DataTable8
   \   00000364   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000366   0x5D45             LDRB     R5,[R0, R5]
   \   00000368   0x.... 0x....      LDR.W    R6,??DataTable8
   \   0000036C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000036E   0x1986             ADDS     R6,R0,R6
   \   00000370   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   00000374   0x1BAD             SUBS     R5,R5,R6
   \   00000376   0x.... 0x....      LDR.W    R6,??DataTable7_7
   \   0000037A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000037C   0x1986             ADDS     R6,R0,R6
   \   0000037E   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   00000382   0xFA55 0xF586      UXTAB    R5,R5,R6
   \   00000386   0x2D01             CMP      R5,#+1
   \   00000388   0xDA05             BGE.N    ??Deal_BlackEdge_34
   1079                    left_black[i]=0;
   \   0000038A   0x2500             MOVS     R5,#+0
   \   0000038C   0x.... 0x....      LDR.W    R6,??DataTable7_7
   \   00000390   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000392   0x5585             STRB     R5,[R0, R6]
   \   00000394   0xE015             B.N      ??Deal_BlackEdge_35
   1080                  else
   1081                  left_black[i] = right_black[i] - (right_black[i-1] - left_black[i-1]);
   \                     ??Deal_BlackEdge_34: (+1)
   \   00000396   0x.... 0x....      LDR.W    R5,??DataTable8
   \   0000039A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000039C   0x5D45             LDRB     R5,[R0, R5]
   \   0000039E   0x.... 0x....      LDR.W    R6,??DataTable8
   \   000003A2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003A4   0x1986             ADDS     R6,R0,R6
   \   000003A6   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   000003AA   0x1BAD             SUBS     R5,R5,R6
   \   000003AC   0x.... 0x....      LDR.W    R6,??DataTable7_7
   \   000003B0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003B2   0x1986             ADDS     R6,R0,R6
   \   000003B4   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   000003B8   0x1975             ADDS     R5,R6,R5
   \   000003BA   0x.... 0x....      LDR.W    R6,??DataTable7_7
   \   000003BE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003C0   0x5585             STRB     R5,[R0, R6]
   1082              }
   \                     ??Deal_BlackEdge_35: (+1)
   \   000003C2   0x1C40             ADDS     R0,R0,#+1
   \   000003C4   0xE7C4             B.N      ??Deal_BlackEdge_32
   1083              
   1084            }
   1085           else if(right_top_whiteline < left_top_whiteline)
   \                     ??Deal_BlackEdge_31: (+1)
   \   000003C6   0x.... 0x....      LDR.W    R5,??DataTable7_5
   \   000003CA   0x782D             LDRB     R5,[R5, #+0]
   \   000003CC   0x.... 0x....      LDR.W    R6,??DataTable7_4
   \   000003D0   0x7836             LDRB     R6,[R6, #+0]
   \   000003D2   0x42B5             CMP      R5,R6
   \   000003D4   0xD242             BCS.N    ??Deal_BlackEdge_36
   1086           {
   1087             top_whiteline = left_top_whiteline;
   \   000003D6   0x.... 0x....      LDR.W    R5,??DataTable7_4
   \   000003DA   0x782D             LDRB     R5,[R5, #+0]
   \   000003DC   0x.... 0x....      LDR.W    R6,??DataTable7_3
   \   000003E0   0x7035             STRB     R5,[R6, #+0]
   1088               for(i = right_top_whiteline;i<=left_top_whiteline;i++)
   \   000003E2   0x.... 0x....      LDR.W    R5,??DataTable7_5
   \   000003E6   0x782D             LDRB     R5,[R5, #+0]
   \   000003E8   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_37: (+1)
   \   000003EA   0x.... 0x....      LDR.W    R5,??DataTable7_4
   \   000003EE   0x782D             LDRB     R5,[R5, #+0]
   \   000003F0   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000003F2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003F4   0x4285             CMP      R5,R0
   \   000003F6   0xDB35             BLT.N    ??Deal_BlackEdge_33
   1089            {
   1090              if(left_black[i] + (right_black[i-1] - left_black[i-1]) >= COLUMN-1)
   \   000003F8   0x.... 0x....      LDR.W    R5,??DataTable7_7
   \   000003FC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003FE   0x5D45             LDRB     R5,[R0, R5]
   \   00000400   0x.... 0x....      LDR.W    R6,??DataTable8
   \   00000404   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000406   0x1986             ADDS     R6,R0,R6
   \   00000408   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   0000040C   0x1975             ADDS     R5,R6,R5
   \   0000040E   0x.... 0x....      LDR.W    R6,??DataTable7_7
   \   00000412   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000414   0x1986             ADDS     R6,R0,R6
   \   00000416   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   0000041A   0x1BAD             SUBS     R5,R5,R6
   \   0000041C   0x2D9C             CMP      R5,#+156
   \   0000041E   0xDB05             BLT.N    ??Deal_BlackEdge_38
   1091                right_black[i] = COLUMN-1;   
   \   00000420   0x259C             MOVS     R5,#+156
   \   00000422   0x.... 0x....      LDR.W    R6,??DataTable8
   \   00000426   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000428   0x5585             STRB     R5,[R0, R6]
   \   0000042A   0xE015             B.N      ??Deal_BlackEdge_39
   1092              else
   1093                right_black[i] = left_black[i] + (right_black[i-1] - left_black[i-1]);//
   \                     ??Deal_BlackEdge_38: (+1)
   \   0000042C   0x.... 0x....      LDR.W    R5,??DataTable7_7
   \   00000430   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000432   0x5D45             LDRB     R5,[R0, R5]
   \   00000434   0x.... 0x....      LDR.W    R6,??DataTable8
   \   00000438   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000043A   0x1986             ADDS     R6,R0,R6
   \   0000043C   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   00000440   0x1975             ADDS     R5,R6,R5
   \   00000442   0x.... 0x....      LDR.W    R6,??DataTable7_7
   \   00000446   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000448   0x1986             ADDS     R6,R0,R6
   \   0000044A   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   0000044E   0x1BAD             SUBS     R5,R5,R6
   \   00000450   0x.... 0x....      LDR.W    R6,??DataTable8
   \   00000454   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000456   0x5585             STRB     R5,[R0, R6]
   1094            }
   \                     ??Deal_BlackEdge_39: (+1)
   \   00000458   0x1C40             ADDS     R0,R0,#+1
   \   0000045A   0xE7C6             B.N      ??Deal_BlackEdge_37
   1095           }
   1096          else
   1097            {
   1098              top_whiteline = right_top_whiteline;
   \                     ??Deal_BlackEdge_36: (+1)
   \   0000045C   0x....             LDR.N    R5,??DataTable7_5
   \   0000045E   0x782D             LDRB     R5,[R5, #+0]
   \   00000460   0x....             LDR.N    R6,??DataTable7_3
   \   00000462   0x7035             STRB     R5,[R6, #+0]
   1099            }
   1100          
   1101           //滤除左右的变沿线的单个跳变///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   1102            for( i=bottom_whitebase + 1 ;i <= top_whiteline;i++)
   \                     ??Deal_BlackEdge_33: (+1)
   \   00000464   0x....             LDR.N    R5,??DataTable7_2
   \   00000466   0x782D             LDRB     R5,[R5, #+0]
   \   00000468   0x1C6D             ADDS     R5,R5,#+1
   \   0000046A   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_40: (+1)
   \   0000046C   0x....             LDR.N    R5,??DataTable7_3
   \   0000046E   0x782D             LDRB     R5,[R5, #+0]
   \   00000470   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000472   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000474   0x4285             CMP      R5,R0
   \   00000476   0xDB31             BLT.N    ??Deal_BlackEdge_41
   1103            {
   1104              if(left_black[i-1] <= 1 && left_black[i] > 1 && left_black[i+1] <= 1)
   \   00000478   0x....             LDR.N    R5,??DataTable7_7
   \   0000047A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000047C   0x1945             ADDS     R5,R0,R5
   \   0000047E   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000482   0x2D02             CMP      R5,#+2
   \   00000484   0xDA0E             BGE.N    ??Deal_BlackEdge_42
   \   00000486   0x....             LDR.N    R5,??DataTable7_7
   \   00000488   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000048A   0x5D45             LDRB     R5,[R0, R5]
   \   0000048C   0x2D02             CMP      R5,#+2
   \   0000048E   0xDB09             BLT.N    ??Deal_BlackEdge_42
   \   00000490   0x....             LDR.N    R5,??DataTable7_7
   \   00000492   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000494   0x1945             ADDS     R5,R0,R5
   \   00000496   0x786D             LDRB     R5,[R5, #+1]
   \   00000498   0x2D02             CMP      R5,#+2
   \   0000049A   0xDA03             BGE.N    ??Deal_BlackEdge_42
   1105              {
   1106                left_black[i] = 0;
   \   0000049C   0x2500             MOVS     R5,#+0
   \   0000049E   0x....             LDR.N    R6,??DataTable7_7
   \   000004A0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004A2   0x5585             STRB     R5,[R0, R6]
   1107           /*     
   1108                if(Row_state[k] == 1 ||Row_state[k] == 2)
   1109                {
   1110                  Row_state[k] = 2;
   1111                }
   1112                if(Row_state[k] == 3)
   1113                {
   1114                  Row_state[k] = 0;
   1115                }*/
   1116              }
   1117              
   1118             if(right_black[i-1] >= COLUMN-2 && right_black[i] < COLUMN-2 && right_black[i+1] >= COLUMN-2)
   \                     ??Deal_BlackEdge_42: (+1)
   \   000004A4   0x.... 0x....      LDR.W    R5,??DataTable8
   \   000004A8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004AA   0x1945             ADDS     R5,R0,R5
   \   000004AC   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   000004B0   0x2D9B             CMP      R5,#+155
   \   000004B2   0xDB11             BLT.N    ??Deal_BlackEdge_43
   \   000004B4   0x.... 0x....      LDR.W    R5,??DataTable8
   \   000004B8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004BA   0x5D45             LDRB     R5,[R0, R5]
   \   000004BC   0x2D9B             CMP      R5,#+155
   \   000004BE   0xDA0B             BGE.N    ??Deal_BlackEdge_43
   \   000004C0   0x.... 0x....      LDR.W    R5,??DataTable8
   \   000004C4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004C6   0x1945             ADDS     R5,R0,R5
   \   000004C8   0x786D             LDRB     R5,[R5, #+1]
   \   000004CA   0x2D9B             CMP      R5,#+155
   \   000004CC   0xDB04             BLT.N    ??Deal_BlackEdge_43
   1119              {
   1120                right_black[i] = COLUMN-1;
   \   000004CE   0x259C             MOVS     R5,#+156
   \   000004D0   0x.... 0x....      LDR.W    R6,??DataTable8
   \   000004D4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004D6   0x5585             STRB     R5,[R0, R6]
   1121                
   1122              /*  if(Row_state[k] == 0 ||Row_state[k] == 2)
   1123                {
   1124                  Row_state[k] = 2;
   1125                }
   1126                if(Row_state[k] == 3)
   1127                {
   1128                  Row_state[k] = 1;
   1129                }*/
   1130              }
   1131            }
   \                     ??Deal_BlackEdge_43: (+1)
   \   000004D8   0x1C40             ADDS     R0,R0,#+1
   \   000004DA   0xE7C7             B.N      ??Deal_BlackEdge_40
   1132           //边沿线滤波结束
   1133            
   1134           //对之前的错误的补线进行重新的虚构
   1135            //这里的虚构会导致有一种情况发生就是，在弯道的顶行的时候，可能会出现补点，与不补点的区别，这样就导致了舵机的抖动
   1136            for( i=bottom_whitebase ;i <= top_whiteline;i++)
   \                     ??Deal_BlackEdge_41: (+1)
   \   000004DC   0x....             LDR.N    R5,??DataTable7_2
   \   000004DE   0x782D             LDRB     R5,[R5, #+0]
   \   000004E0   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_44: (+1)
   \   000004E2   0x....             LDR.N    R5,??DataTable7_3
   \   000004E4   0x782D             LDRB     R5,[R5, #+0]
   \   000004E6   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000004E8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004EA   0x4285             CMP      R5,R0
   \   000004EC   0xDB14             BLT.N    ??Deal_BlackEdge_45
   1137            {
   1138              if(Row_state[i] != 3)///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \   000004EE   0x....             LDR.N    R5,??DataTable7_6
   \   000004F0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004F2   0x5D45             LDRB     R5,[R0, R5]
   \   000004F4   0x2D03             CMP      R5,#+3
   \   000004F6   0xD00D             BEQ.N    ??Deal_BlackEdge_46
   1139              {
   1140                center_white[i] = (right_black[i]+left_black[i])/2;
   \   000004F8   0x.... 0x....      LDR.W    R5,??DataTable8
   \   000004FC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004FE   0x5D45             LDRB     R5,[R0, R5]
   \   00000500   0x....             LDR.N    R6,??DataTable7_7
   \   00000502   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000504   0x5D86             LDRB     R6,[R0, R6]
   \   00000506   0x1975             ADDS     R5,R6,R5
   \   00000508   0x2602             MOVS     R6,#+2
   \   0000050A   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   0000050E   0x....             LDR.N    R6,??DataTable7
   \   00000510   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000512   0x5585             STRB     R5,[R0, R6]
   1141              }
   1142            }
   \                     ??Deal_BlackEdge_46: (+1)
   \   00000514   0x1C40             ADDS     R0,R0,#+1
   \   00000516   0xE7E4             B.N      ??Deal_BlackEdge_44
   1143            
   1144            //对于两边出界的点，不利用求平均值的方法去做，而是利用前一行的状态进行补充
   1145            for(i= bottom_whitebase; i <= top_whiteline; i++)
   \                     ??Deal_BlackEdge_45: (+1)
   \   00000518   0x....             LDR.N    R5,??DataTable7_2
   \   0000051A   0x782D             LDRB     R5,[R5, #+0]
   \   0000051C   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_47: (+1)
   \   0000051E   0x....             LDR.N    R5,??DataTable7_3
   \   00000520   0x782D             LDRB     R5,[R5, #+0]
   \   00000522   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000524   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000526   0x4285             CMP      R5,R0
   \   00000528   0xDB6D             BLT.N    ??Deal_BlackEdge_48
   1146            {
   1147              if(left_black[i] <= 1 && right_black[i] <= COLUMN-5)  //对于左边出界的点进行补充
   \   0000052A   0x....             LDR.N    R5,??DataTable7_7
   \   0000052C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000052E   0x5D45             LDRB     R5,[R0, R5]
   \   00000530   0x2D02             CMP      R5,#+2
   \   00000532   0xDA30             BGE.N    ??Deal_BlackEdge_49
   \   00000534   0x.... 0x....      LDR.W    R5,??DataTable8
   \   00000538   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000053A   0x5D45             LDRB     R5,[R0, R5]
   \   0000053C   0x2D99             CMP      R5,#+153
   \   0000053E   0xDA2A             BGE.N    ??Deal_BlackEdge_49
   1148              {
   1149                if( right_black[i] - (right_black[un_out_hang]-left_black[un_out_hang])/2 < 0) 
   \   00000540   0x.... 0x....      LDR.W    R5,??DataTable8
   \   00000544   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000546   0x5D45             LDRB     R5,[R0, R5]
   \   00000548   0x.... 0x....      LDR.W    R6,??DataTable8
   \   0000054C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000054E   0x5D96             LDRB     R6,[R2, R6]
   \   00000550   0x....             LDR.N    R7,??DataTable7_7
   \   00000552   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000554   0x5DD7             LDRB     R7,[R2, R7]
   \   00000556   0x1BF6             SUBS     R6,R6,R7
   \   00000558   0x2702             MOVS     R7,#+2
   \   0000055A   0xFB96 0xF6F7      SDIV     R6,R6,R7
   \   0000055E   0x1BAD             SUBS     R5,R5,R6
   \   00000560   0x2D00             CMP      R5,#+0
   \   00000562   0xD504             BPL.N    ??Deal_BlackEdge_50
   1150                  center_white[i] = 0;
   \   00000564   0x2500             MOVS     R5,#+0
   \   00000566   0x....             LDR.N    R6,??DataTable7
   \   00000568   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000056A   0x5585             STRB     R5,[R0, R6]
   \   0000056C   0xE049             B.N      ??Deal_BlackEdge_51
   1151                else
   1152                 center_white[i] = right_black[i] - (right_black[un_out_hang]-left_black[un_out_hang])/2;
   \                     ??Deal_BlackEdge_50: (+1)
   \   0000056E   0x.... 0x....      LDR.W    R5,??DataTable8
   \   00000572   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000574   0x5D45             LDRB     R5,[R0, R5]
   \   00000576   0x.... 0x....      LDR.W    R6,??DataTable8
   \   0000057A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000057C   0x5D96             LDRB     R6,[R2, R6]
   \   0000057E   0x....             LDR.N    R7,??DataTable7_7
   \   00000580   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000582   0x5DD7             LDRB     R7,[R2, R7]
   \   00000584   0x1BF6             SUBS     R6,R6,R7
   \   00000586   0x2702             MOVS     R7,#+2
   \   00000588   0xFB96 0xF6F7      SDIV     R6,R6,R7
   \   0000058C   0x1BAD             SUBS     R5,R5,R6
   \   0000058E   0x....             LDR.N    R6,??DataTable7
   \   00000590   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000592   0x5585             STRB     R5,[R0, R6]
   \   00000594   0xE035             B.N      ??Deal_BlackEdge_51
   1153              }
   1154              
   1155              else if(right_black[i] >= COLUMN-2 && left_black[i] >= 3)
   \                     ??Deal_BlackEdge_49: (+1)
   \   00000596   0x.... 0x....      LDR.W    R5,??DataTable8
   \   0000059A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000059C   0x5D45             LDRB     R5,[R0, R5]
   \   0000059E   0x2D9B             CMP      R5,#+155
   \   000005A0   0xDB2D             BLT.N    ??Deal_BlackEdge_52
   \   000005A2   0x....             LDR.N    R5,??DataTable7_7
   \   000005A4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000005A6   0x5D45             LDRB     R5,[R0, R5]
   \   000005A8   0x2D03             CMP      R5,#+3
   \   000005AA   0xDB28             BLT.N    ??Deal_BlackEdge_52
   1156              {
   1157                if( left_black[i] + (right_black[un_out_hang]-left_black[un_out_hang])/2 > COLUMN - 1)
   \   000005AC   0x....             LDR.N    R5,??DataTable7_7
   \   000005AE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000005B0   0x5D45             LDRB     R5,[R0, R5]
   \   000005B2   0x.... 0x....      LDR.W    R6,??DataTable8
   \   000005B6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000005B8   0x5D96             LDRB     R6,[R2, R6]
   \   000005BA   0x....             LDR.N    R7,??DataTable7_7
   \   000005BC   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000005BE   0x5DD7             LDRB     R7,[R2, R7]
   \   000005C0   0x1BF6             SUBS     R6,R6,R7
   \   000005C2   0x2702             MOVS     R7,#+2
   \   000005C4   0xFB96 0xF6F7      SDIV     R6,R6,R7
   \   000005C8   0x1975             ADDS     R5,R6,R5
   \   000005CA   0x2D9D             CMP      R5,#+157
   \   000005CC   0xDB04             BLT.N    ??Deal_BlackEdge_53
   1158                  center_white[i] = COLUMN - 1 ;
   \   000005CE   0x259C             MOVS     R5,#+156
   \   000005D0   0x....             LDR.N    R6,??DataTable7
   \   000005D2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000005D4   0x5585             STRB     R5,[R0, R6]
   \   000005D6   0xE014             B.N      ??Deal_BlackEdge_51
   1159                else
   1160                 center_white[i] = left_black[i] + (right_black[un_out_hang]-left_black[un_out_hang])/2;
   \                     ??Deal_BlackEdge_53: (+1)
   \   000005D8   0x....             LDR.N    R5,??DataTable7_7
   \   000005DA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000005DC   0x5D45             LDRB     R5,[R0, R5]
   \   000005DE   0x.... 0x....      LDR.W    R6,??DataTable8
   \   000005E2   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000005E4   0x5D96             LDRB     R6,[R2, R6]
   \   000005E6   0x....             LDR.N    R7,??DataTable7_7
   \   000005E8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000005EA   0x5DD7             LDRB     R7,[R2, R7]
   \   000005EC   0x1BF6             SUBS     R6,R6,R7
   \   000005EE   0x2702             MOVS     R7,#+2
   \   000005F0   0xFB96 0xF6F7      SDIV     R6,R6,R7
   \   000005F4   0x1975             ADDS     R5,R6,R5
   \   000005F6   0x....             LDR.N    R6,??DataTable7
   \   000005F8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000005FA   0x5585             STRB     R5,[R0, R6]
   \   000005FC   0xE001             B.N      ??Deal_BlackEdge_51
   1161              }
   1162              else
   1163                un_out_hang = i;
   \                     ??Deal_BlackEdge_52: (+1)
   \   000005FE   0x0005             MOVS     R5,R0
   \   00000600   0x002A             MOVS     R2,R5
   1164            }
   \                     ??Deal_BlackEdge_51: (+1)
   \   00000602   0x1C40             ADDS     R0,R0,#+1
   \   00000604   0xE78B             B.N      ??Deal_BlackEdge_47
   1165           
   1166           //对中线进行中值滤波
   1167           //对中线和边沿线进行中值滤波
   1168           for( i=bottom_whitebase + 1;i < top_whiteline-2;i++)
   \                     ??Deal_BlackEdge_48: (+1)
   \   00000606   0x....             LDR.N    R5,??DataTable7_2
   \   00000608   0x782D             LDRB     R5,[R5, #+0]
   \   0000060A   0x1C6D             ADDS     R5,R5,#+1
   \   0000060C   0x0028             MOVS     R0,R5
   \                     ??Deal_BlackEdge_54: (+1)
   \   0000060E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000610   0x....             LDR.N    R5,??DataTable7_3
   \   00000612   0x782D             LDRB     R5,[R5, #+0]
   \   00000614   0x1EAD             SUBS     R5,R5,#+2
   \   00000616   0x42A8             CMP      R0,R5
   \   00000618   0xF280 0x80B2      BGE.W    ??Deal_BlackEdge_55
   1169           {
   1170             if((center_white[i] > center_white[i-1] && center_white[i] > center_white[i+1]) ||(center_white[i] < center_white[i-1] && center_white[i] < center_white[i+1]))
   \   0000061C   0x....             LDR.N    R5,??DataTable7
   \   0000061E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000620   0x1945             ADDS     R5,R0,R5
   \   00000622   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000626   0x....             LDR.N    R6,??DataTable7
   \   00000628   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000062A   0x5D86             LDRB     R6,[R0, R6]
   \   0000062C   0x42B5             CMP      R5,R6
   \   0000062E   0xD208             BCS.N    ??Deal_BlackEdge_56
   \   00000630   0x....             LDR.N    R5,??DataTable7
   \   00000632   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000634   0x1945             ADDS     R5,R0,R5
   \   00000636   0x786D             LDRB     R5,[R5, #+1]
   \   00000638   0x....             LDR.N    R6,??DataTable7
   \   0000063A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000063C   0x5D86             LDRB     R6,[R0, R6]
   \   0000063E   0x42B5             CMP      R5,R6
   \   00000640   0xD312             BCC.N    ??Deal_BlackEdge_57
   \                     ??Deal_BlackEdge_56: (+1)
   \   00000642   0x....             LDR.N    R5,??DataTable7
   \   00000644   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000646   0x5D45             LDRB     R5,[R0, R5]
   \   00000648   0x....             LDR.N    R6,??DataTable7
   \   0000064A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000064C   0x1986             ADDS     R6,R0,R6
   \   0000064E   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   00000652   0x42B5             CMP      R5,R6
   \   00000654   0xD219             BCS.N    ??Deal_BlackEdge_58
   \   00000656   0x....             LDR.N    R5,??DataTable7
   \   00000658   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000065A   0x5D45             LDRB     R5,[R0, R5]
   \   0000065C   0x....             LDR.N    R6,??DataTable7
   \   0000065E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000660   0x1986             ADDS     R6,R0,R6
   \   00000662   0x7876             LDRB     R6,[R6, #+1]
   \   00000664   0x42B5             CMP      R5,R6
   \   00000666   0xD210             BCS.N    ??Deal_BlackEdge_58
   1171             {
   1172               center_white[i] = (center_white[i-1] + center_white[i+1])/2;
   \                     ??Deal_BlackEdge_57: (+1)
   \   00000668   0x....             LDR.N    R5,??DataTable7
   \   0000066A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000066C   0x1945             ADDS     R5,R0,R5
   \   0000066E   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000672   0x....             LDR.N    R6,??DataTable7
   \   00000674   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000676   0x1986             ADDS     R6,R0,R6
   \   00000678   0x7876             LDRB     R6,[R6, #+1]
   \   0000067A   0xFA56 0xF585      UXTAB    R5,R6,R5
   \   0000067E   0x2602             MOVS     R6,#+2
   \   00000680   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   00000684   0x....             LDR.N    R6,??DataTable7
   \   00000686   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000688   0x5585             STRB     R5,[R0, R6]
   1173             }
   1174                if((left_black[i] > left_black[i-1] && left_black[i] > left_black[i+1]) ||(left_black[i] < left_black[i-1] && left_black[i] < left_black[i+1]))/////////////////////////////////
   \                     ??Deal_BlackEdge_58: (+1)
   \   0000068A   0x....             LDR.N    R5,??DataTable7_7
   \   0000068C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000068E   0x1945             ADDS     R5,R0,R5
   \   00000690   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000694   0x....             LDR.N    R6,??DataTable7_7
   \   00000696   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000698   0x5D86             LDRB     R6,[R0, R6]
   \   0000069A   0x42B5             CMP      R5,R6
   \   0000069C   0xD208             BCS.N    ??Deal_BlackEdge_59
   \   0000069E   0x....             LDR.N    R5,??DataTable7_7
   \   000006A0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006A2   0x1945             ADDS     R5,R0,R5
   \   000006A4   0x786D             LDRB     R5,[R5, #+1]
   \   000006A6   0x....             LDR.N    R6,??DataTable7_7
   \   000006A8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006AA   0x5D86             LDRB     R6,[R0, R6]
   \   000006AC   0x42B5             CMP      R5,R6
   \   000006AE   0xD312             BCC.N    ??Deal_BlackEdge_60
   \                     ??Deal_BlackEdge_59: (+1)
   \   000006B0   0x....             LDR.N    R5,??DataTable7_7
   \   000006B2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006B4   0x5D45             LDRB     R5,[R0, R5]
   \   000006B6   0x....             LDR.N    R6,??DataTable7_7
   \   000006B8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006BA   0x1986             ADDS     R6,R0,R6
   \   000006BC   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   000006C0   0x42B5             CMP      R5,R6
   \   000006C2   0xD219             BCS.N    ??Deal_BlackEdge_61
   \   000006C4   0x....             LDR.N    R5,??DataTable7_7
   \   000006C6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006C8   0x5D45             LDRB     R5,[R0, R5]
   \   000006CA   0x....             LDR.N    R6,??DataTable7_7
   \   000006CC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006CE   0x1986             ADDS     R6,R0,R6
   \   000006D0   0x7876             LDRB     R6,[R6, #+1]
   \   000006D2   0x42B5             CMP      R5,R6
   \   000006D4   0xD210             BCS.N    ??Deal_BlackEdge_61
   1175             {
   1176               left_black[i] = (left_black[i-1] + left_black[i+1])/2;                                                                                           ////////////////////////////////  
   \                     ??Deal_BlackEdge_60: (+1)
   \   000006D6   0x....             LDR.N    R5,??DataTable7_7
   \   000006D8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006DA   0x1945             ADDS     R5,R0,R5
   \   000006DC   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   000006E0   0x....             LDR.N    R6,??DataTable7_7
   \   000006E2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006E4   0x1986             ADDS     R6,R0,R6
   \   000006E6   0x7876             LDRB     R6,[R6, #+1]
   \   000006E8   0xFA56 0xF585      UXTAB    R5,R6,R5
   \   000006EC   0x2602             MOVS     R6,#+2
   \   000006EE   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   000006F2   0x....             LDR.N    R6,??DataTable7_7
   \   000006F4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006F6   0x5585             STRB     R5,[R0, R6]
   1177             }
   1178                if((right_black[i] > right_black[i-1] && right_black[i] > right_black[i+1]) ||(right_black[i] < right_black[i-1] && right_black[i] < right_black[i+1]))/////////////////////////
   \                     ??Deal_BlackEdge_61: (+1)
   \   000006F8   0x.... 0x....      LDR.W    R5,??DataTable8
   \   000006FC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000006FE   0x1945             ADDS     R5,R0,R5
   \   00000700   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000704   0x.... 0x....      LDR.W    R6,??DataTable8
   \   00000708   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000070A   0x5D86             LDRB     R6,[R0, R6]
   \   0000070C   0x42B5             CMP      R5,R6
   \   0000070E   0xD20A             BCS.N    ??Deal_BlackEdge_62
   \   00000710   0x.... 0x....      LDR.W    R5,??DataTable8
   \   00000714   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000716   0x1945             ADDS     R5,R0,R5
   \   00000718   0x786D             LDRB     R5,[R5, #+1]
   \   0000071A   0x.... 0x....      LDR.W    R6,??DataTable8
   \   0000071E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000720   0x5D86             LDRB     R6,[R0, R6]
   \   00000722   0x42B5             CMP      R5,R6
   \   00000724   0xD316             BCC.N    ??Deal_BlackEdge_63
   \                     ??Deal_BlackEdge_62: (+1)
   \   00000726   0x.... 0x....      LDR.W    R5,??DataTable8
   \   0000072A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000072C   0x5D45             LDRB     R5,[R0, R5]
   \   0000072E   0x.... 0x....      LDR.W    R6,??DataTable8
   \   00000732   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000734   0x1986             ADDS     R6,R0,R6
   \   00000736   0xF816 0x6C01      LDRB     R6,[R6, #-1]
   \   0000073A   0x42B5             CMP      R5,R6
   \   0000073C   0xD21E             BCS.N    ??Deal_BlackEdge_64
   \   0000073E   0x.... 0x....      LDR.W    R5,??DataTable8
   \   00000742   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000744   0x5D45             LDRB     R5,[R0, R5]
   \   00000746   0x.... 0x....      LDR.W    R6,??DataTable8
   \   0000074A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000074C   0x1986             ADDS     R6,R0,R6
   \   0000074E   0x7876             LDRB     R6,[R6, #+1]
   \   00000750   0x42B5             CMP      R5,R6
   \   00000752   0xD213             BCS.N    ??Deal_BlackEdge_64
   1179             {
   1180               right_black[i] = (right_black[i-1] + right_black[i+1])/2;                                                                                             ////////////////////////////
   \                     ??Deal_BlackEdge_63: (+1)
   \   00000754   0x.... 0x....      LDR.W    R5,??DataTable8
   \   00000758   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000075A   0x1945             ADDS     R5,R0,R5
   \   0000075C   0xF815 0x5C01      LDRB     R5,[R5, #-1]
   \   00000760   0x.... 0x....      LDR.W    R6,??DataTable8
   \   00000764   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000766   0x1986             ADDS     R6,R0,R6
   \   00000768   0x7876             LDRB     R6,[R6, #+1]
   \   0000076A   0xFA56 0xF585      UXTAB    R5,R6,R5
   \   0000076E   0x2602             MOVS     R6,#+2
   \   00000770   0xFB95 0xF5F6      SDIV     R5,R5,R6
   \   00000774   0x.... 0x....      LDR.W    R6,??DataTable8
   \   00000778   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000077A   0x5585             STRB     R5,[R0, R6]
   1181             }
   1182           }
   \                     ??Deal_BlackEdge_64: (+1)
   \   0000077C   0x1C40             ADDS     R0,R0,#+1
   \   0000077E   0xE746             B.N      ??Deal_BlackEdge_54
   1183           
   1184           
   1185          }
   \                     ??Deal_BlackEdge_55: (+1)
   \   00000780   0xBCF0             POP      {R4-R7}
   \   00000782   0x4770             BX       LR               ;; return
   1186          
   1187          
   1188          /*这个程序包含了两部分，其一是赛道特征的提取；其二是赛道类型的判断///
   1189          */

   \                                 In section .text, align 2, keep-with-next
   1190          void get_line_information(void)
   1191          {
   \                     get_line_information: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   1192            int16 i;
   1193            uint8 ramp_count = 0;  //用于记录宽度超出限制的行的个数
   \   00000002   0x2500             MOVS     R5,#+0
   1194            uint16 temp_center_line = 0;
   \   00000004   0x2600             MOVS     R6,#+0
   1195            center_lost_hang = 0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable9
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
   1196            
   1197              /*程序的开始首先对中线出现断点的情况进行修补
   1198            当图像的中线出现了巨大的跳变时，他前面的线全部用左右两边的中值代替
   1199            */
   1200           //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
   1201            if(left_black[10]<=1 || left_black[11]<=1 ||right_black[10]>=COLUMN-2||right_black[11]>=COLUMN-2)
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   00000012   0x7A80             LDRB     R0,[R0, #+10]
   \   00000014   0x2802             CMP      R0,#+2
   \   00000016   0xDB0E             BLT.N    ??get_line_information_0
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   0000001C   0x7AC0             LDRB     R0,[R0, #+11]
   \   0000001E   0x2802             CMP      R0,#+2
   \   00000020   0xDB09             BLT.N    ??get_line_information_0
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000026   0x7A80             LDRB     R0,[R0, #+10]
   \   00000028   0x289B             CMP      R0,#+155
   \   0000002A   0xDA04             BGE.N    ??get_line_information_0
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable8
   \   00000030   0x7AC0             LDRB     R0,[R0, #+11]
   \   00000032   0x289B             CMP      R0,#+155
   \   00000034   0xDB51             BLT.N    ??get_line_information_1
   1202            {
   1203              for(i = bottom_whitebase + 10 ; i < top_whiteline-5;i++)  //基准行上的偏差不用处理
   \                     ??get_line_information_0: (+1)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0x300A             ADDS     R0,R0,#+10
   \   0000003E   0x0004             MOVS     R4,R0
   \                     ??get_line_information_2: (+1)
   \   00000040   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x1F40             SUBS     R0,R0,#+5
   \   0000004A   0x4284             CMP      R4,R0
   \   0000004C   0xDA23             BGE.N    ??get_line_information_3
   1204              {
   1205                if(f_abs16(center_white[i] - center_white[i+2]) > CENTER_LOST_POINT
   1206                   &&f_abs16(center_white[i] - center_white[i+3]) > CENTER_LOST_POINT)
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000052   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000054   0x5C20             LDRB     R0,[R4, R0]
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   0000005A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000005C   0x1861             ADDS     R1,R4,R1
   \   0000005E   0x7889             LDRB     R1,[R1, #+2]
   \   00000060   0x1A40             SUBS     R0,R0,R1
   \   00000062   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000064   0x.... 0x....      BL       f_abs16
   \   00000068   0x2815             CMP      R0,#+21
   \   0000006A   0xDB12             BLT.N    ??get_line_information_4
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000070   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000072   0x5C20             LDRB     R0,[R4, R0]
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   00000078   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000007A   0x1861             ADDS     R1,R4,R1
   \   0000007C   0x78C9             LDRB     R1,[R1, #+3]
   \   0000007E   0x1A40             SUBS     R0,R0,R1
   \   00000080   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000082   0x.... 0x....      BL       f_abs16
   \   00000086   0x2815             CMP      R0,#+21
   \   00000088   0xDB03             BLT.N    ??get_line_information_4
   1207                {
   1208                  center_lost_hang = i;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000008E   0x7004             STRB     R4,[R0, #+0]
   1209                  break;
   \   00000090   0xE001             B.N      ??get_line_information_3
   1210                }
   1211              }
   \                     ??get_line_information_4: (+1)
   \   00000092   0x1C64             ADDS     R4,R4,#+1
   \   00000094   0xE7D4             B.N      ??get_line_information_2
   1212               if(center_lost_hang >0)
   \                     ??get_line_information_3: (+1)
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable9
   \   0000009A   0x7800             LDRB     R0,[R0, #+0]
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD01C             BEQ.N    ??get_line_information_1
   1213               {
   1214                 for( i = bottom_whitebase ;  i< center_lost_hang + 2;i++)
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   000000A4   0x7800             LDRB     R0,[R0, #+0]
   \   000000A6   0x0004             MOVS     R4,R0
   \                     ??get_line_information_5: (+1)
   \   000000A8   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable9
   \   000000AE   0x7800             LDRB     R0,[R0, #+0]
   \   000000B0   0x1C80             ADDS     R0,R0,#+2
   \   000000B2   0x4284             CMP      R4,R0
   \   000000B4   0xDA11             BGE.N    ??get_line_information_1
   1215                 {
   1216                   center_white[i] = (left_black[i]+right_black[i])/2;  
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   000000BA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000BC   0x5C20             LDRB     R0,[R4, R0]
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000000C2   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000C4   0x5C61             LDRB     R1,[R4, R1]
   \   000000C6   0x1808             ADDS     R0,R1,R0
   \   000000C8   0x2102             MOVS     R1,#+2
   \   000000CA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   000000D2   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000D4   0x5460             STRB     R0,[R4, R1]
   1217                 }
   \   000000D6   0x1C64             ADDS     R4,R4,#+1
   \   000000D8   0xE7E6             B.N      ??get_line_information_5
   1218               }
   1219            }
   1220           //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// 
   1221           for(i = bottom_whitebase+10; i< top_whiteline-1;i++)
   \                     ??get_line_information_1: (+1)
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   000000DE   0x7800             LDRB     R0,[R0, #+0]
   \   000000E0   0x300A             ADDS     R0,R0,#+10
   \   000000E2   0x0004             MOVS     R4,R0
   \                     ??get_line_information_6: (+1)
   \   000000E4   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   000000EA   0x7800             LDRB     R0,[R0, #+0]
   \   000000EC   0x1E40             SUBS     R0,R0,#+1
   \   000000EE   0x4284             CMP      R4,R0
   \   000000F0   0xDA61             BGE.N    ??get_line_information_7
   1222           {
   1223             if(
   1224                 (f_abs16(center_white[i] - left_black[i])<=1  && f_abs16(center_white[i+1] - left_black[i+1])<=1 && f_abs16(center_white[i+2] - left_black[i+2])<=1) 
   1225                  ||
   1226                ( f_abs16(center_white[i] - right_black[i])<=1 && f_abs16(center_white[i+1] - right_black[i+1])<=1 && f_abs16(center_white[i+2] - right_black[i+2])<=1)
   1227             
   1228                  )
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   000000F6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000F8   0x5C20             LDRB     R0,[R4, R0]
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000000FE   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000100   0x5C61             LDRB     R1,[R4, R1]
   \   00000102   0x1A40             SUBS     R0,R0,R1
   \   00000104   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000106   0x.... 0x....      BL       f_abs16
   \   0000010A   0x2802             CMP      R0,#+2
   \   0000010C   0xDA1F             BGE.N    ??get_line_information_8
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000112   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000114   0x1820             ADDS     R0,R4,R0
   \   00000116   0x7840             LDRB     R0,[R0, #+1]
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   0000011C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000011E   0x1861             ADDS     R1,R4,R1
   \   00000120   0x7849             LDRB     R1,[R1, #+1]
   \   00000122   0x1A40             SUBS     R0,R0,R1
   \   00000124   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000126   0x.... 0x....      BL       f_abs16
   \   0000012A   0x2802             CMP      R0,#+2
   \   0000012C   0xDA0F             BGE.N    ??get_line_information_8
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000132   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000134   0x1820             ADDS     R0,R4,R0
   \   00000136   0x7880             LDRB     R0,[R0, #+2]
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   0000013C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000013E   0x1861             ADDS     R1,R4,R1
   \   00000140   0x7889             LDRB     R1,[R1, #+2]
   \   00000142   0x1A40             SUBS     R0,R0,R1
   \   00000144   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000146   0x.... 0x....      BL       f_abs16
   \   0000014A   0x2802             CMP      R0,#+2
   \   0000014C   0xDB2D             BLT.N    ??get_line_information_9
   \                     ??get_line_information_8: (+1)
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000152   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000154   0x5C20             LDRB     R0,[R4, R0]
   \   00000156   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000015A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000015C   0x5C61             LDRB     R1,[R4, R1]
   \   0000015E   0x1A40             SUBS     R0,R0,R1
   \   00000160   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000162   0x.... 0x....      BL       f_abs16
   \   00000166   0x2802             CMP      R0,#+2
   \   00000168   0xDA23             BGE.N    ??get_line_information_10
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   0000016E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000170   0x1820             ADDS     R0,R4,R0
   \   00000172   0x7840             LDRB     R0,[R0, #+1]
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000178   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000017A   0x1861             ADDS     R1,R4,R1
   \   0000017C   0x7849             LDRB     R1,[R1, #+1]
   \   0000017E   0x1A40             SUBS     R0,R0,R1
   \   00000180   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000182   0x.... 0x....      BL       f_abs16
   \   00000186   0x2802             CMP      R0,#+2
   \   00000188   0xDA13             BGE.N    ??get_line_information_10
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   0000018E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000190   0x1820             ADDS     R0,R4,R0
   \   00000192   0x7880             LDRB     R0,[R0, #+2]
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000198   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000019A   0x1861             ADDS     R1,R4,R1
   \   0000019C   0x7889             LDRB     R1,[R1, #+2]
   \   0000019E   0x1A40             SUBS     R0,R0,R1
   \   000001A0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001A2   0x.... 0x....      BL       f_abs16
   \   000001A6   0x2802             CMP      R0,#+2
   \   000001A8   0xDA03             BGE.N    ??get_line_information_10
   1229             { 
   1230               top_whiteline = i + 1;   //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////          
   \                     ??get_line_information_9: (+1)
   \   000001AA   0x1C60             ADDS     R0,R4,#+1
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable9_3
   \   000001B0   0x7008             STRB     R0,[R1, #+0]
   1231             }
   1232           }
   \                     ??get_line_information_10: (+1)
   \   000001B2   0x1C64             ADDS     R4,R4,#+1
   \   000001B4   0xE796             B.N      ??get_line_information_6
   1233           if(top_whiteline < ROW - 2)
   \                     ??get_line_information_7: (+1)
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   000001BA   0x7800             LDRB     R0,[R0, #+0]
   \   000001BC   0x2830             CMP      R0,#+48
   \   000001BE   0xDA18             BGE.N    ??get_line_information_11
   1234            {
   1235              for(i = top_whiteline+1;i<ROW;i++)/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   000001C4   0x7800             LDRB     R0,[R0, #+0]
   \   000001C6   0x1C40             ADDS     R0,R0,#+1
   \   000001C8   0x0004             MOVS     R4,R0
   \                     ??get_line_information_12: (+1)
   \   000001CA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001CC   0x2C32             CMP      R4,#+50
   \   000001CE   0xDA10             BGE.N    ??get_line_information_11
   1236              {
   1237                center_white[i] =MID;
   \   000001D0   0x204E             MOVS     R0,#+78
   \   000001D2   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   000001D6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001D8   0x5460             STRB     R0,[R4, R1]
   1238                right_black[i] = MID+2;
   \   000001DA   0x2050             MOVS     R0,#+80
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable8
   \   000001E0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001E2   0x5460             STRB     R0,[R4, R1]
   1239                left_black[i] = MID-2;
   \   000001E4   0x204C             MOVS     R0,#+76
   \   000001E6   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000001EA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001EC   0x5460             STRB     R0,[R4, R1]
   1240              }
   \   000001EE   0x1C64             ADDS     R4,R4,#+1
   \   000001F0   0xE7EB             B.N      ??get_line_information_12
   1241            }
   1242              /////////// //图像的中心线出来之后，首先要确定能够到那些行，在此之后的行全部用控制的行的
   1243             /////////////////////求取控制的最高有效行////////////////////////////////
   1244            danger_count = 0;
   \                     ??get_line_information_11: (+1)
   \   000001F2   0x2000             MOVS     R0,#+0
   \   000001F4   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000001F8   0x8008             STRH     R0,[R1, #+0]
   1245            danger_flag = 1;//没有判断之前都认为是危险状态
   \   000001FA   0x2001             MOVS     R0,#+1
   \   000001FC   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000200   0x7008             STRB     R0,[R1, #+0]
   1246            control_top_whiteline = top_whiteline;
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   00000206   0x7800             LDRB     R0,[R0, #+0]
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   0000020C   0x8008             STRH     R0,[R1, #+0]
   1247            
   1248            ////////////////////计算控制的最高有效行//////////////////////
   1249               while(danger_flag ==1)
   \                     ??get_line_information_13: (+1)
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   00000212   0x7800             LDRB     R0,[R0, #+0]
   \   00000214   0x2800             CMP      R0,#+0
   \   00000216   0xF000 0x8080      BEQ.W    ??get_line_information_14
   1250               {
   1251                 for(i = control_top_whiteline;i>=deal_start_line ;i--)//表示从上向下遍历
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   0000021E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000222   0x0004             MOVS     R4,R0
   \                     ??get_line_information_15: (+1)
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable10_3
   \   00000228   0x7800             LDRB     R0,[R0, #+0]
   \   0000022A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000022C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000022E   0x4284             CMP      R4,R0
   \   00000230   0xDB5D             BLT.N    ??get_line_information_16
   1252                  {                                                                                         ///////////////////////////////////////////////////////////////////////////////////////////
   1253                    temp_center_line = center_white[control_top_whiteline] + (i - (control_top_whiteline)) *(center_white[deal_start_line] - center_white[control_top_whiteline])/( deal_start_line-(control_top_whiteline) );
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000236   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   0000023A   0x8809             LDRH     R1,[R1, #+0]
   \   0000023C   0x5C08             LDRB     R0,[R1, R0]
   \   0000023E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000240   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   00000244   0x8809             LDRH     R1,[R1, #+0]
   \   00000246   0x1A61             SUBS     R1,R4,R1
   \   00000248   0x.... 0x....      LDR.W    R2,??DataTable9_4
   \   0000024C   0x.... 0x....      LDR.W    R3,??DataTable10_3
   \   00000250   0x781B             LDRB     R3,[R3, #+0]
   \   00000252   0x5C9A             LDRB     R2,[R3, R2]
   \   00000254   0x.... 0x....      LDR.W    R3,??DataTable9_4
   \   00000258   0x.... 0x....      LDR.W    R7,??DataTable10_2
   \   0000025C   0x883F             LDRH     R7,[R7, #+0]
   \   0000025E   0x5CFB             LDRB     R3,[R7, R3]
   \   00000260   0x1AD2             SUBS     R2,R2,R3
   \   00000262   0x4351             MULS     R1,R2,R1
   \   00000264   0x.... 0x....      LDR.W    R2,??DataTable10_3
   \   00000268   0x7812             LDRB     R2,[R2, #+0]
   \   0000026A   0x.... 0x....      LDR.W    R3,??DataTable10_2
   \   0000026E   0x881B             LDRH     R3,[R3, #+0]
   \   00000270   0x1AD2             SUBS     R2,R2,R3
   \   00000272   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000276   0x1808             ADDS     R0,R1,R0
   \   00000278   0x0006             MOVS     R6,R0
   1254                  if(
   1255                     (right_black[i] - temp_center_line < (refer_road_width[i]/5)&&right_black[i] < COLUMN - 2) || (temp_center_line - left_black[i] < (refer_road_width[i]/5) && left_black[i] > 1)
   1256                       && i < ( top_whiteline - 10 )   //远端的点不进行安全化，安全化之后对直道入急弯的影响很大
   1257                       )
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   0000027E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000280   0x5C20             LDRB     R0,[R4, R0]
   \   00000282   0x2105             MOVS     R1,#+5
   \   00000284   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000288   0x.... 0x....      LDR.W    R1,??DataTable8
   \   0000028C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000028E   0x5C61             LDRB     R1,[R4, R1]
   \   00000290   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000292   0x1B89             SUBS     R1,R1,R6
   \   00000294   0x4281             CMP      R1,R0
   \   00000296   0xDA05             BGE.N    ??get_line_information_17
   \   00000298   0x.... 0x....      LDR.W    R0,??DataTable8
   \   0000029C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000029E   0x5C20             LDRB     R0,[R4, R0]
   \   000002A0   0x289B             CMP      R0,#+155
   \   000002A2   0xDB1B             BLT.N    ??get_line_information_18
   \                     ??get_line_information_17: (+1)
   \   000002A4   0x.... 0x....      LDR.W    R0,??DataTable10_4
   \   000002A8   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002AA   0x5C20             LDRB     R0,[R4, R0]
   \   000002AC   0x2105             MOVS     R1,#+5
   \   000002AE   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002B2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000002B4   0x.... 0x....      LDR.W    R1,??DataTable9_1
   \   000002B8   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002BA   0x5C61             LDRB     R1,[R4, R1]
   \   000002BC   0x1A71             SUBS     R1,R6,R1
   \   000002BE   0x4281             CMP      R1,R0
   \   000002C0   0xDA13             BGE.N    ??get_line_information_19
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   000002C6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002C8   0x5C20             LDRB     R0,[R4, R0]
   \   000002CA   0x2802             CMP      R0,#+2
   \   000002CC   0xDB0D             BLT.N    ??get_line_information_19
   \   000002CE   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002D0   0x.... 0x....      LDR.W    R0,??DataTable9_3
   \   000002D4   0x7800             LDRB     R0,[R0, #+0]
   \   000002D6   0x380A             SUBS     R0,R0,#+10
   \   000002D8   0x4284             CMP      R4,R0
   \   000002DA   0xDA06             BGE.N    ??get_line_information_19
   1258                      danger_count++;  
   \                     ??get_line_information_18: (+1)
   \   000002DC   0x.... 0x....      LDR.W    R0,??DataTable10
   \   000002E0   0x8800             LDRH     R0,[R0, #+0]
   \   000002E2   0x1C40             ADDS     R0,R0,#+1
   \   000002E4   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000002E8   0x8008             STRH     R0,[R1, #+0]
   1259                  }
   \                     ??get_line_information_19: (+1)
   \   000002EA   0x1E64             SUBS     R4,R4,#+1
   \   000002EC   0xE79A             B.N      ??get_line_information_15
   1260                 
   1261                 if(danger_count >0)
   \                     ??get_line_information_16: (+1)
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable10
   \   000002F2   0x8800             LDRH     R0,[R0, #+0]
   \   000002F4   0x2800             CMP      R0,#+0
   \   000002F6   0xD00B             BEQ.N    ??get_line_information_20
   1262                 {
   1263                   control_top_whiteline --;  
   \   000002F8   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   000002FC   0x8800             LDRH     R0,[R0, #+0]
   \   000002FE   0x1E40             SUBS     R0,R0,#+1
   \   00000300   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   00000304   0x8008             STRH     R0,[R1, #+0]
   1264                   danger_count = 0;
   \   00000306   0x2000             MOVS     R0,#+0
   \   00000308   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000030C   0x8008             STRH     R0,[R1, #+0]
   \   0000030E   0xE77E             B.N      ??get_line_information_13
   1265                 }
   1266                 else
   1267                 {  
   1268                   danger_flag = 0;//危险消除
   \                     ??get_line_information_20: (+1)
   \   00000310   0x2000             MOVS     R0,#+0
   \   00000312   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000316   0x7008             STRB     R0,[R1, #+0]
   \   00000318   0xE779             B.N      ??get_line_information_13
   1269                 }
   1270               }
   1271               
   1272            /////////////////赛道的类型的判断/////////////////////////
   1273              S_right = 0;//向右拐的计数
   \                     ??get_line_information_14: (+1)
   \   0000031A   0x2000             MOVS     R0,#+0
   \   0000031C   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   00000320   0x7008             STRB     R0,[R1, #+0]
   1274              S_left =0 ; //向左拐计数
   \   00000322   0x2000             MOVS     R0,#+0
   \   00000324   0x.... 0x....      LDR.W    R1,??DataTable10_6
   \   00000328   0x7008             STRB     R0,[R1, #+0]
   1275              S_straight = 0;
   \   0000032A   0x2000             MOVS     R0,#+0
   \   0000032C   0x.... 0x....      LDR.W    R1,??DataTable10_7
   \   00000330   0x7008             STRB     R0,[R1, #+0]
   1276            for( i=bottom_whitebase ;i < control_top_whiteline;i++)
   \   00000332   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   00000336   0x7800             LDRB     R0,[R0, #+0]
   \   00000338   0x0004             MOVS     R4,R0
   \                     ??get_line_information_21: (+1)
   \   0000033A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000033C   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000340   0x8800             LDRH     R0,[R0, #+0]
   \   00000342   0x4284             CMP      R4,R0
   \   00000344   0xDA30             BGE.N    ??get_line_information_22
   1277           {
   1278             if(center_white[i+1]- center_white[i] > 1)
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   0000034A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000034C   0x1820             ADDS     R0,R4,R0
   \   0000034E   0x7840             LDRB     R0,[R0, #+1]
   \   00000350   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   00000354   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000356   0x5C61             LDRB     R1,[R4, R1]
   \   00000358   0x1A40             SUBS     R0,R0,R1
   \   0000035A   0x2802             CMP      R0,#+2
   \   0000035C   0xDB07             BLT.N    ??get_line_information_23
   1279             {
   1280               S_right++; //S 弯右加加
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   00000362   0x7800             LDRB     R0,[R0, #+0]
   \   00000364   0x1C40             ADDS     R0,R0,#+1
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   0000036A   0x7008             STRB     R0,[R1, #+0]
   \   0000036C   0xE01A             B.N      ??get_line_information_24
   1281             }
   1282             else if(center_white[i]- center_white[i+1] > 1)
   \                     ??get_line_information_23: (+1)
   \   0000036E   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000372   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000374   0x5C20             LDRB     R0,[R4, R0]
   \   00000376   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   0000037A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000037C   0x1861             ADDS     R1,R4,R1
   \   0000037E   0x7849             LDRB     R1,[R1, #+1]
   \   00000380   0x1A40             SUBS     R0,R0,R1
   \   00000382   0x2802             CMP      R0,#+2
   \   00000384   0xDB07             BLT.N    ??get_line_information_25
   1283             {
   1284               S_left++; //S 弯左加加
   \   00000386   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   0000038A   0x7800             LDRB     R0,[R0, #+0]
   \   0000038C   0x1C40             ADDS     R0,R0,#+1
   \   0000038E   0x.... 0x....      LDR.W    R1,??DataTable10_6
   \   00000392   0x7008             STRB     R0,[R1, #+0]
   \   00000394   0xE006             B.N      ??get_line_information_24
   1285             }
   1286             else
   1287             {
   1288               S_straight++;
   \                     ??get_line_information_25: (+1)
   \   00000396   0x.... 0x....      LDR.W    R0,??DataTable10_7
   \   0000039A   0x7800             LDRB     R0,[R0, #+0]
   \   0000039C   0x1C40             ADDS     R0,R0,#+1
   \   0000039E   0x.... 0x....      LDR.W    R1,??DataTable10_7
   \   000003A2   0x7008             STRB     R0,[R1, #+0]
   1289             }
   1290           }
   \                     ??get_line_information_24: (+1)
   \   000003A4   0x1C64             ADDS     R4,R4,#+1
   \   000003A6   0xE7C8             B.N      ??get_line_information_21
   1291           
   1292           /*对赛道的判断
   1293           对于赛道的判断 只是区分直道(1) 、波浪弯道(2)、 入弯(3)、弯道(4) */
   1294           
   1295           
   1296           if( control_top_whiteline >= 42)//??????0520
   \                     ??get_line_information_22: (+1)
   \   000003A8   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   000003AC   0x8800             LDRH     R0,[R0, #+0]
   \   000003AE   0x282A             CMP      R0,#+42
   \   000003B0   0xDB3D             BLT.N    ??get_line_information_26
   1297           {
   1298             if(S_left<5 && S_right < 5 )
   \   000003B2   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   000003B6   0x7800             LDRB     R0,[R0, #+0]
   \   000003B8   0x2805             CMP      R0,#+5
   \   000003BA   0xDA09             BGE.N    ??get_line_information_27
   \   000003BC   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   000003C0   0x7800             LDRB     R0,[R0, #+0]
   \   000003C2   0x2805             CMP      R0,#+5
   \   000003C4   0xDA04             BGE.N    ??get_line_information_27
   1299                direction = 1;  //直道
   \   000003C6   0x2001             MOVS     R0,#+1
   \   000003C8   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   000003CC   0x7008             STRB     R0,[R1, #+0]
   \   000003CE   0xE078             B.N      ??get_line_information_28
   1300             else if((f_abs16(S_left-S_right) < 8 && S_left>1 &&S_right>1)
   1301                     )
   \                     ??get_line_information_27: (+1)
   \   000003D0   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   000003D4   0x7800             LDRB     R0,[R0, #+0]
   \   000003D6   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   000003DA   0x7809             LDRB     R1,[R1, #+0]
   \   000003DC   0x1A40             SUBS     R0,R0,R1
   \   000003DE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003E0   0x.... 0x....      BL       f_abs16
   \   000003E4   0x2808             CMP      R0,#+8
   \   000003E6   0xDA0E             BGE.N    ??get_line_information_29
   \   000003E8   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   000003EC   0x7800             LDRB     R0,[R0, #+0]
   \   000003EE   0x2802             CMP      R0,#+2
   \   000003F0   0xDB09             BLT.N    ??get_line_information_29
   \   000003F2   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   000003F6   0x7800             LDRB     R0,[R0, #+0]
   \   000003F8   0x2802             CMP      R0,#+2
   \   000003FA   0xDB04             BLT.N    ??get_line_information_29
   1302                direction = 2;  //波浪弯道
   \   000003FC   0x2002             MOVS     R0,#+2
   \   000003FE   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   00000402   0x7008             STRB     R0,[R1, #+0]
   \   00000404   0xE05D             B.N      ??get_line_information_28
   1303             else if((S_left<=1 )||(S_right<=1))
   \                     ??get_line_information_29: (+1)
   \   00000406   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   0000040A   0x7800             LDRB     R0,[R0, #+0]
   \   0000040C   0x2802             CMP      R0,#+2
   \   0000040E   0xDB04             BLT.N    ??get_line_information_30
   \   00000410   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   00000414   0x7800             LDRB     R0,[R0, #+0]
   \   00000416   0x2802             CMP      R0,#+2
   \   00000418   0xDA04             BGE.N    ??get_line_information_31
   1304               direction = 6;  //大弧弯
   \                     ??get_line_information_30: (+1)
   \   0000041A   0x2006             MOVS     R0,#+6
   \   0000041C   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   00000420   0x7008             STRB     R0,[R1, #+0]
   \   00000422   0xE04E             B.N      ??get_line_information_28
   1305             else
   1306               direction =3;// re_direction;出弯道or入弯道或者是斜着的直道
   \                     ??get_line_information_31: (+1)
   \   00000424   0x2003             MOVS     R0,#+3
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   0000042A   0x7008             STRB     R0,[R1, #+0]
   \   0000042C   0xE049             B.N      ??get_line_information_28
   1307           }
   1308           else if( control_top_whiteline >=35 && control_top_whiteline < 41)
   \                     ??get_line_information_26: (+1)
   \   0000042E   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000432   0x8800             LDRH     R0,[R0, #+0]
   \   00000434   0x2823             CMP      R0,#+35
   \   00000436   0xDB1D             BLT.N    ??get_line_information_32
   \   00000438   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   0000043C   0x8800             LDRH     R0,[R0, #+0]
   \   0000043E   0x2829             CMP      R0,#+41
   \   00000440   0xDA18             BGE.N    ??get_line_information_32
   1309           {
   1310            if((S_left<=1 || S_right <=1) && control_top_whiteline >= 39) ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \   00000442   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   00000446   0x7800             LDRB     R0,[R0, #+0]
   \   00000448   0x2802             CMP      R0,#+2
   \   0000044A   0xDB04             BLT.N    ??get_line_information_33
   \   0000044C   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   00000450   0x7800             LDRB     R0,[R0, #+0]
   \   00000452   0x2802             CMP      R0,#+2
   \   00000454   0xDA09             BGE.N    ??get_line_information_34
   \                     ??get_line_information_33: (+1)
   \   00000456   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   0000045A   0x8800             LDRH     R0,[R0, #+0]
   \   0000045C   0x2827             CMP      R0,#+39
   \   0000045E   0xDB04             BLT.N    ??get_line_information_34
   1311              direction = 6;  //大弧
   \   00000460   0x2006             MOVS     R0,#+6
   \   00000462   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   00000466   0x7008             STRB     R0,[R1, #+0]
   \   00000468   0xE02B             B.N      ??get_line_information_28
   1312            else
   1313             direction = 3;  //入弯道
   \                     ??get_line_information_34: (+1)
   \   0000046A   0x2003             MOVS     R0,#+3
   \   0000046C   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   00000470   0x7008             STRB     R0,[R1, #+0]
   \   00000472   0xE026             B.N      ??get_line_information_28
   1314           }
   1315           else if( control_top_whiteline >=29 && control_top_whiteline <=37)////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \                     ??get_line_information_32: (+1)
   \   00000474   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000478   0x8800             LDRH     R0,[R0, #+0]
   \   0000047A   0x281D             CMP      R0,#+29
   \   0000047C   0xDB13             BLT.N    ??get_line_information_35
   \   0000047E   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000482   0x8800             LDRH     R0,[R0, #+0]
   \   00000484   0x2826             CMP      R0,#+38
   \   00000486   0xDA0E             BGE.N    ??get_line_information_35
   1316           {
   1317             if(ramp_flag == 1)
   \   00000488   0x.... 0x....      LDR.W    R0,??DataTable10_9
   \   0000048C   0x7800             LDRB     R0,[R0, #+0]
   \   0000048E   0x2800             CMP      R0,#+0
   \   00000490   0xD004             BEQ.N    ??get_line_information_36
   1318                direction = 1;//坡道视为直道
   \   00000492   0x2001             MOVS     R0,#+1
   \   00000494   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   00000498   0x7008             STRB     R0,[R1, #+0]
   \   0000049A   0xE012             B.N      ??get_line_information_28
   1319             else 
   1320                direction = 4;  //弯道当中
   \                     ??get_line_information_36: (+1)
   \   0000049C   0x2004             MOVS     R0,#+4
   \   0000049E   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   000004A2   0x7008             STRB     R0,[R1, #+0]
   \   000004A4   0xE00D             B.N      ??get_line_information_28
   1321           }
   1322           else           //处于很急的弯道当中///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   1323           {
   1324             if(ramp_flag == 1)
   \                     ??get_line_information_35: (+1)
   \   000004A6   0x.... 0x....      LDR.W    R0,??DataTable10_9
   \   000004AA   0x7800             LDRB     R0,[R0, #+0]
   \   000004AC   0x2800             CMP      R0,#+0
   \   000004AE   0xD004             BEQ.N    ??get_line_information_37
   1325                direction = 1;//坡道视为直道
   \   000004B0   0x2001             MOVS     R0,#+1
   \   000004B2   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   000004B6   0x7008             STRB     R0,[R1, #+0]
   \   000004B8   0xE003             B.N      ??get_line_information_28
   1326             else 
   1327                direction = 5;  //弯道当中
   \                     ??get_line_information_37: (+1)
   \   000004BA   0x2005             MOVS     R0,#+5
   \   000004BC   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   000004C0   0x7008             STRB     R0,[R1, #+0]
   1328           }
   1329           re_direction =direction ;
   \                     ??get_line_information_28: (+1)
   \   000004C2   0x.... 0x....      LDR.W    R0,??DataTable10_8
   \   000004C6   0x7800             LDRB     R0,[R0, #+0]
   \   000004C8   0x.... 0x....      LDR.W    R1,??DataTable10_10
   \   000004CC   0x7008             STRB     R0,[R1, #+0]
   1330           //////////////////////赛道的类型的判断结束///////////////////////////////
   1331            
   1332           //前面对于波浪弯道的判断过于简单，这样会导致出弯道和进入弯道的时候有一个误判的行为//////////////////////////////////可以删除以下的///////////////////////////////////////
   1333           if(direction == 2)
   \   000004CE   0x.... 0x....      LDR.W    R0,??DataTable10_8
   \   000004D2   0x7800             LDRB     R0,[R0, #+0]
   \   000004D4   0x2802             CMP      R0,#+2
   \   000004D6   0xD157             BNE.N    ??get_line_information_38
   1334           {
   1335              S_right = 0;//向右拐的计数
   \   000004D8   0x2000             MOVS     R0,#+0
   \   000004DA   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   000004DE   0x7008             STRB     R0,[R1, #+0]
   1336              S_left =0 ; //向左拐计数
   \   000004E0   0x2000             MOVS     R0,#+0
   \   000004E2   0x.... 0x....      LDR.W    R1,??DataTable10_6
   \   000004E6   0x7008             STRB     R0,[R1, #+0]
   1337              S_straight = 0;
   \   000004E8   0x2000             MOVS     R0,#+0
   \   000004EA   0x.... 0x....      LDR.W    R1,??DataTable10_7
   \   000004EE   0x7008             STRB     R0,[R1, #+0]
   1338             for(i = bottom_whitebase;i<=control_top_whiteline-1;i++)
   \   000004F0   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   000004F4   0x7800             LDRB     R0,[R0, #+0]
   \   000004F6   0x0004             MOVS     R4,R0
   \                     ??get_line_information_39: (+1)
   \   000004F8   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   000004FC   0x8800             LDRH     R0,[R0, #+0]
   \   000004FE   0x1E40             SUBS     R0,R0,#+1
   \   00000500   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000502   0x42A0             CMP      R0,R4
   \   00000504   0xDB30             BLT.N    ??get_line_information_40
   1339             {
   1340               if(center_white[i]- center_white[i+1] > 0)
   \   00000506   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   0000050A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000050C   0x5C20             LDRB     R0,[R4, R0]
   \   0000050E   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   00000512   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000514   0x1861             ADDS     R1,R4,R1
   \   00000516   0x7849             LDRB     R1,[R1, #+1]
   \   00000518   0x1A40             SUBS     R0,R0,R1
   \   0000051A   0x2801             CMP      R0,#+1
   \   0000051C   0xDB07             BLT.N    ??get_line_information_41
   1341               {
   1342                 S_left++;
   \   0000051E   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   00000522   0x7800             LDRB     R0,[R0, #+0]
   \   00000524   0x1C40             ADDS     R0,R0,#+1
   \   00000526   0x.... 0x....      LDR.W    R1,??DataTable10_6
   \   0000052A   0x7008             STRB     R0,[R1, #+0]
   \   0000052C   0xE01A             B.N      ??get_line_information_42
   1343               }
   1344               else if(center_white[i]- center_white[i+1] < 0)
   \                     ??get_line_information_41: (+1)
   \   0000052E   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   00000532   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000534   0x5C20             LDRB     R0,[R4, R0]
   \   00000536   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   0000053A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000053C   0x1861             ADDS     R1,R4,R1
   \   0000053E   0x7849             LDRB     R1,[R1, #+1]
   \   00000540   0x1A40             SUBS     R0,R0,R1
   \   00000542   0x2800             CMP      R0,#+0
   \   00000544   0xD507             BPL.N    ??get_line_information_43
   1345               {
   1346                 S_right++;
   \   00000546   0x.... 0x....      LDR.W    R0,??DataTable10_5
   \   0000054A   0x7800             LDRB     R0,[R0, #+0]
   \   0000054C   0x1C40             ADDS     R0,R0,#+1
   \   0000054E   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   00000552   0x7008             STRB     R0,[R1, #+0]
   \   00000554   0xE006             B.N      ??get_line_information_42
   1347               }
   1348               else
   1349               {
   1350                 S_straight++;
   \                     ??get_line_information_43: (+1)
   \   00000556   0x.... 0x....      LDR.W    R0,??DataTable10_7
   \   0000055A   0x7800             LDRB     R0,[R0, #+0]
   \   0000055C   0x1C40             ADDS     R0,R0,#+1
   \   0000055E   0x.... 0x....      LDR.W    R1,??DataTable10_7
   \   00000562   0x7008             STRB     R0,[R1, #+0]
   1351               }
   1352             }
   \                     ??get_line_information_42: (+1)
   \   00000564   0x1C64             ADDS     R4,R4,#+1
   \   00000566   0xE7C7             B.N      ??get_line_information_39
   1353             
   1354             if(f_abs16(S_left-S_right) >37)
   \                     ??get_line_information_40: (+1)
   \   00000568   0x.... 0x....      LDR.W    R0,??DataTable10_6
   \   0000056C   0x7800             LDRB     R0,[R0, #+0]
   \   0000056E   0x.... 0x....      LDR.W    R1,??DataTable10_5
   \   00000572   0x7809             LDRB     R1,[R1, #+0]
   \   00000574   0x1A40             SUBS     R0,R0,R1
   \   00000576   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000578   0x.... 0x....      BL       f_abs16
   \   0000057C   0x2826             CMP      R0,#+38
   \   0000057E   0xDB03             BLT.N    ??get_line_information_38
   1355             {
   1356               direction = 3;//后面视这种情况为大弧弯 用来加速
   \   00000580   0x2003             MOVS     R0,#+3
   \   00000582   0x.... 0x....      LDR.W    R1,??DataTable10_8
   \   00000586   0x7008             STRB     R0,[R1, #+0]
   1357             }
   1358           }  
   1359            //////////////////////////////对赛道进行优化//////////////////////////////
   1360           //需要注意的是既然已经将赛道的类型判断出来了，那么就可以按照不同的赛道实现不同的优化特别是针对波浪弯道o
   1361           if(direction == 2)  //波浪弯道  控制行大于60
   \                     ??get_line_information_38: (+1)
   \   00000588   0x.... 0x....      LDR.W    R0,??DataTable10_8
   \   0000058C   0x7800             LDRB     R0,[R0, #+0]
   \   0000058E   0x2802             CMP      R0,#+2
   \   00000590   0xD14F             BNE.N    ??get_line_information_44
   1362           {
   1363             for( i=bottom_whitebase ;i <= control_top_whiteline;i++)//无论是什么样的赛道，将中线向图像的中心平移
   \   00000592   0x.... 0x....      LDR.W    R0,??DataTable9_2
   \   00000596   0x7800             LDRB     R0,[R0, #+0]
   \   00000598   0x0004             MOVS     R4,R0
   \                     ??get_line_information_45: (+1)
   \   0000059A   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   0000059E   0x8800             LDRH     R0,[R0, #+0]
   \   000005A0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000005A2   0x42A0             CMP      R0,R4
   \   000005A4   0xF2C0 0x807F      BLT.W    ??get_line_information_46
   1364               {
   1365                if(center_white[i] > MID)//归中
   \   000005A8   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   000005AC   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000005AE   0x5C20             LDRB     R0,[R4, R0]
   \   000005B0   0x284F             CMP      R0,#+79
   \   000005B2   0xDB1E             BLT.N    ??get_line_information_47
   1366                {
   1367                  if( center_white[i] - (control_top_whiteline - 41 ) >= MID )////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \   000005B4   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   000005B8   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000005BA   0x5C20             LDRB     R0,[R4, R0]
   \   000005BC   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   000005C0   0x8809             LDRH     R1,[R1, #+0]
   \   000005C2   0x1A40             SUBS     R0,R0,R1
   \   000005C4   0x3029             ADDS     R0,R0,#+41
   \   000005C6   0x284E             CMP      R0,#+78
   \   000005C8   0xDB0D             BLT.N    ??get_line_information_48
   1368                    center_white[i] = center_white[i] - (control_top_whiteline - 41);
   \   000005CA   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   000005CE   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000005D0   0x5C20             LDRB     R0,[R4, R0]
   \   000005D2   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   000005D6   0x8809             LDRH     R1,[R1, #+0]
   \   000005D8   0x1A40             SUBS     R0,R0,R1
   \   000005DA   0x38D7             SUBS     R0,R0,#+215
   \   000005DC   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   000005E0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000005E2   0x5460             STRB     R0,[R4, R1]
   \   000005E4   0xE023             B.N      ??get_line_information_49
   1369                  else
   1370                    center_white[i] = MID;
   \                     ??get_line_information_48: (+1)
   \   000005E6   0x204E             MOVS     R0,#+78
   \   000005E8   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   000005EC   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000005EE   0x5460             STRB     R0,[R4, R1]
   \   000005F0   0xE01D             B.N      ??get_line_information_49
   1371                }
   1372                else 
   1373                {
   1374                  if(center_white[i] + (control_top_whiteline - 41 ) <= MID)  //归中防止在波浪弯道的较大的打角
   \                     ??get_line_information_47: (+1)
   \   000005F2   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   000005F6   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000005F8   0x5C20             LDRB     R0,[R4, R0]
   \   000005FA   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   000005FE   0x8809             LDRH     R1,[R1, #+0]
   \   00000600   0x1808             ADDS     R0,R1,R0
   \   00000602   0x3829             SUBS     R0,R0,#+41
   \   00000604   0x284F             CMP      R0,#+79
   \   00000606   0xDA0D             BGE.N    ??get_line_information_50
   1375                    center_white[i] = center_white[i] + (control_top_whiteline - 41 );  
   \   00000608   0x.... 0x....      LDR.W    R0,??DataTable9_4
   \   0000060C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000060E   0x5C20             LDRB     R0,[R4, R0]
   \   00000610   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   00000614   0x8809             LDRH     R1,[R1, #+0]
   \   00000616   0x3929             SUBS     R1,R1,#+41
   \   00000618   0x1808             ADDS     R0,R1,R0
   \   0000061A   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   0000061E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000620   0x5460             STRB     R0,[R4, R1]
   \   00000622   0xE004             B.N      ??get_line_information_49
   1376                  else
   1377                    center_white[i] = MID; 
   \                     ??get_line_information_50: (+1)
   \   00000624   0x204E             MOVS     R0,#+78
   \   00000626   0x.... 0x....      LDR.W    R1,??DataTable9_4
   \   0000062A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000062C   0x5460             STRB     R0,[R4, R1]
   1378                }
   1379               }
   \                     ??get_line_information_49: (+1)
   \   0000062E   0x1C64             ADDS     R4,R4,#+1
   \   00000630   0xE7B3             B.N      ??get_line_information_45
   1380           }
   1381           else if(direction != 1 )   //直线状态不进行归中，防止直道漂浮////
   \                     ??get_line_information_44: (+1)
   \   00000632   0x.... 0x....      LDR.W    R0,??DataTable10_8
   \   00000636   0x7800             LDRB     R0,[R0, #+0]
   \   00000638   0x2801             CMP      R0,#+1
   \   0000063A   0xD034             BEQ.N    ??get_line_information_46
   1382            {
   1383             for( i=bottom_whitebase ;i <= control_top_whiteline;i++)//无论是什么样的赛道，将中线向图像的中心平移
   \   0000063C   0x....             LDR.N    R0,??DataTable9_2
   \   0000063E   0x7800             LDRB     R0,[R0, #+0]
   \   00000640   0x0004             MOVS     R4,R0
   \                     ??get_line_information_51: (+1)
   \   00000642   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   00000646   0x8800             LDRH     R0,[R0, #+0]
   \   00000648   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000064A   0x42A0             CMP      R0,R4
   \   0000064C   0xDB2B             BLT.N    ??get_line_information_46
   1384               {
   1385                if(center_white[i] > MID)//归中
   \   0000064E   0x....             LDR.N    R0,??DataTable9_4
   \   00000650   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000652   0x5C20             LDRB     R0,[R4, R0]
   \   00000654   0x284F             CMP      R0,#+79
   \   00000656   0xDB12             BLT.N    ??get_line_information_52
   1386                {
   1387                  if( center_white[i] - 2 >= MID )
   \   00000658   0x....             LDR.N    R0,??DataTable9_4
   \   0000065A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000065C   0x5C20             LDRB     R0,[R4, R0]
   \   0000065E   0x1E80             SUBS     R0,R0,#+2
   \   00000660   0x284E             CMP      R0,#+78
   \   00000662   0xDB07             BLT.N    ??get_line_information_53
   1388                    center_white[i] = center_white[i] - 2;
   \   00000664   0x....             LDR.N    R0,??DataTable9_4
   \   00000666   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000668   0x5C20             LDRB     R0,[R4, R0]
   \   0000066A   0x1E80             SUBS     R0,R0,#+2
   \   0000066C   0x....             LDR.N    R1,??DataTable9_4
   \   0000066E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000670   0x5460             STRB     R0,[R4, R1]
   \   00000672   0xE016             B.N      ??get_line_information_54
   1389                  else
   1390                    center_white[i] = MID;
   \                     ??get_line_information_53: (+1)
   \   00000674   0x204E             MOVS     R0,#+78
   \   00000676   0x....             LDR.N    R1,??DataTable9_4
   \   00000678   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000067A   0x5460             STRB     R0,[R4, R1]
   \   0000067C   0xE011             B.N      ??get_line_information_54
   1391                }
   1392                else 
   1393                {
   1394                  if(center_white[i] + 2 <= MID)  //归中防止在波浪弯道的较大的打角
   \                     ??get_line_information_52: (+1)
   \   0000067E   0x....             LDR.N    R0,??DataTable9_4
   \   00000680   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000682   0x5C20             LDRB     R0,[R4, R0]
   \   00000684   0x1C80             ADDS     R0,R0,#+2
   \   00000686   0x284F             CMP      R0,#+79
   \   00000688   0xDA07             BGE.N    ??get_line_information_55
   1395                    center_white[i] = center_white[i] + 2;  
   \   0000068A   0x....             LDR.N    R0,??DataTable9_4
   \   0000068C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000068E   0x5C20             LDRB     R0,[R4, R0]
   \   00000690   0x1C80             ADDS     R0,R0,#+2
   \   00000692   0x....             LDR.N    R1,??DataTable9_4
   \   00000694   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000696   0x5460             STRB     R0,[R4, R1]
   \   00000698   0xE003             B.N      ??get_line_information_54
   1396                  else
   1397                    center_white[i] = MID; 
   \                     ??get_line_information_55: (+1)
   \   0000069A   0x204E             MOVS     R0,#+78
   \   0000069C   0x....             LDR.N    R1,??DataTable9_4
   \   0000069E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000006A0   0x5460             STRB     R0,[R4, R1]
   1398                }
   1399               }
   \                     ??get_line_information_54: (+1)
   \   000006A2   0x1C64             ADDS     R4,R4,#+1
   \   000006A4   0xE7CD             B.N      ??get_line_information_51
   1400           }
   1401           
   1402           /*
   1403           center_average = 0;
   1404           /////////////////得到前50行的线性的均值////////////////
   1405              if(control_top_whiteline > 50)
   1406            {
   1407              for(i = bottom_whitebase+1;i<=control_top_whiteline- 10;i++)
   1408             {
   1409               center_average +=  center_white[i];
   1410               if(i == control_top_whiteline - 10)    //只是对前100cm左右的前瞻进行加权
   1411               {
   1412                 center_average = center_average /(control_top_whiteline - bottom_whitebase - 10);
   1413                 center_linear_average = center_average;
   1414               }
   1415             }
   1416            }
   1417            */
   1418           ///////////////////////////////////////////////////////////////////
   1419            ///////////////////////////////////////////////////////////////////
   1420            
   1421              //为了准确的判断出赛道的变化趋势，十分有必要的是对这个数的历史进行存储。这里存储7个历史值，然后进行模糊判断。
   1422              //通过测试发现 这个值的变化趋势在0 到 25之间变化  当在直道的时候，值在0 - -8之间在弯道中的时候，是在16--25之间变化
   1423              //当数值达到19后，则认为已经到达弯道中间或是在出弯道
   1424            ///////////////均值提取结束//////////////////////////////
   1425            
   1426            /*/////对坡道的判断，当坡道判断出来之后，用标志位标志，且其只是作用在电机的给定控制上
   1427            对于坡道的检测只需要将上坡道检测出来（最高行接近顶行，且其宽度达到了一定的范围）下坡检测比较的困难，
   1428            所以这里不检测下坡，一般只是做一下坡道状态延时就行了（延时时间为1s--2s之间），
   1429            且检测出来之后，只需要降速，对于舵机可以不用去管。图像已经做得可以了。
   1430            对坡道的检测不能只是用宽度去判定，这样容易和弯道出现误检。所以还要加上对端点的限制，将其限制在某一个范围之内,
   1431            这就要求进入弯道之前车子是摆正的。
   1432            #define RAMP_WIDTH  45                  //图像10~20行的宽度范围超过该范围确定为坡道
   1433            #define RAMP_TIME   60
   1434            uint8 ramp_time = 50;                     //进入坡道后多长时间重新开启起跑线检测
   1435            int8 ramp_speed = 0;                    //坡道减速值
   1436            bool ramp_flag;                          //进入坡道标志,主要用于控制
   1437            bool ramp_dis_flag;                     //主要是防止下坡误判 
   1438            对于坡道的检测不能用最高的几行，因为这样容易和十字道路误检
   1439           */
   1440            ramp_count = 0;//3,65,4,25
   \                     ??get_line_information_46: (+1)
   \   000006A6   0x2000             MOVS     R0,#+0
   \   000006A8   0x0005             MOVS     R5,R0
   1441            if( ramp_dis_flag ==0  && control_top_whiteline >= ROW - 10 ) //直线状态检测  //加入这个ramp_dis_flag标志，是为了让车子在检测数跑道后的这段时间里，不对坡道进行检测
   \   000006AA   0x.... 0x....      LDR.W    R0,??DataTable11
   \   000006AE   0x7800             LDRB     R0,[R0, #+0]
   \   000006B0   0x2800             CMP      R0,#+0
   \   000006B2   0xD141             BNE.N    ??get_line_information_56
   \   000006B4   0x.... 0x....      LDR.W    R0,??DataTable10_2
   \   000006B8   0x8800             LDRH     R0,[R0, #+0]
   \   000006BA   0x2828             CMP      R0,#+40
   \   000006BC   0xDB3C             BLT.N    ??get_line_information_56
   1442            {
   1443              for(i = 28; i<=44; i++)
   \   000006BE   0x201C             MOVS     R0,#+28
   \   000006C0   0x0004             MOVS     R4,R0
   \                     ??get_line_information_57: (+1)
   \   000006C2   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000006C4   0x2C2D             CMP      R4,#+45
   \   000006C6   0xDA10             BGE.N    ??get_line_information_58
   1444                {
   1445                  if(right_black[i]-left_black[i] >= refer_road_width[i] + 5)
   \   000006C8   0x....             LDR.N    R0,??DataTable8
   \   000006CA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000006CC   0x5C20             LDRB     R0,[R4, R0]
   \   000006CE   0x....             LDR.N    R1,??DataTable9_1
   \   000006D0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000006D2   0x5C61             LDRB     R1,[R4, R1]
   \   000006D4   0x1A40             SUBS     R0,R0,R1
   \   000006D6   0x.... 0x....      LDR.W    R1,??DataTable10_4
   \   000006DA   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000006DC   0x5C61             LDRB     R1,[R4, R1]
   \   000006DE   0x1D49             ADDS     R1,R1,#+5
   \   000006E0   0x4288             CMP      R0,R1
   \   000006E2   0xDB00             BLT.N    ??get_line_information_59
   1446                    ramp_count ++;
   \   000006E4   0x1C6D             ADDS     R5,R5,#+1
   1447                }        
   \                     ??get_line_information_59: (+1)
   \   000006E6   0x1C64             ADDS     R4,R4,#+1
   \   000006E8   0xE7EB             B.N      ??get_line_information_57
   1448              if(ramp_count >= 6)
   \                     ??get_line_information_58: (+1)
   \   000006EA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006EC   0x2D06             CMP      R5,#+6
   \   000006EE   0xDB23             BLT.N    ??get_line_information_56
   1449              { 
   1450                if(left_black[ 28] - left_black[24] > 0 && left_black[ 28] - left_black[24] <= 8
   1451                   && right_black[24] -right_black[28] > 0 && right_black[24] -right_black[28] <=8)
   \   000006F0   0x....             LDR.N    R0,??DataTable9_1
   \   000006F2   0x7F00             LDRB     R0,[R0, #+28]
   \   000006F4   0x....             LDR.N    R1,??DataTable9_1
   \   000006F6   0x7E09             LDRB     R1,[R1, #+24]
   \   000006F8   0x1A40             SUBS     R0,R0,R1
   \   000006FA   0x2801             CMP      R0,#+1
   \   000006FC   0xDB1C             BLT.N    ??get_line_information_56
   \   000006FE   0x....             LDR.N    R0,??DataTable9_1
   \   00000700   0x7F00             LDRB     R0,[R0, #+28]
   \   00000702   0x....             LDR.N    R1,??DataTable9_1
   \   00000704   0x7E09             LDRB     R1,[R1, #+24]
   \   00000706   0x1A40             SUBS     R0,R0,R1
   \   00000708   0x2809             CMP      R0,#+9
   \   0000070A   0xDA15             BGE.N    ??get_line_information_56
   \   0000070C   0x....             LDR.N    R0,??DataTable8
   \   0000070E   0x7E00             LDRB     R0,[R0, #+24]
   \   00000710   0x....             LDR.N    R1,??DataTable8
   \   00000712   0x7F09             LDRB     R1,[R1, #+28]
   \   00000714   0x1A40             SUBS     R0,R0,R1
   \   00000716   0x2801             CMP      R0,#+1
   \   00000718   0xDB0E             BLT.N    ??get_line_information_56
   \   0000071A   0x....             LDR.N    R0,??DataTable8
   \   0000071C   0x7E00             LDRB     R0,[R0, #+24]
   \   0000071E   0x....             LDR.N    R1,??DataTable8
   \   00000720   0x7F09             LDRB     R1,[R1, #+28]
   \   00000722   0x1A40             SUBS     R0,R0,R1
   \   00000724   0x2809             CMP      R0,#+9
   \   00000726   0xDA07             BGE.N    ??get_line_information_56
   1452                {   
   1453                ramp_flag = 1;
   \   00000728   0x2001             MOVS     R0,#+1
   \   0000072A   0x.... 0x....      LDR.W    R1,??DataTable10_9
   \   0000072E   0x7008             STRB     R0,[R1, #+0]
   1454                ramp_dis_flag = 1;
   \   00000730   0x2001             MOVS     R0,#+1
   \   00000732   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000736   0x7008             STRB     R0,[R1, #+0]
   1455                }
   1456              } 
   1457            }
   1458            
   1459            if(ramp_flag == 1)
   \                     ??get_line_information_56: (+1)
   \   00000738   0x.... 0x....      LDR.W    R0,??DataTable10_9
   \   0000073C   0x7800             LDRB     R0,[R0, #+0]
   \   0000073E   0x2800             CMP      R0,#+0
   \   00000740   0xD01C             BEQ.N    ??get_line_information_60
   1460            {
   1461              gpio_set(PORTB,10,0);
   \   00000742   0x2200             MOVS     R2,#+0
   \   00000744   0x210A             MOVS     R1,#+10
   \   00000746   0x2001             MOVS     R0,#+1
   \   00000748   0x.... 0x....      BL       gpio_set
   1462              ramp_time++;
   \   0000074C   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000750   0x8800             LDRH     R0,[R0, #+0]
   \   00000752   0x1C40             ADDS     R0,R0,#+1
   \   00000754   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000758   0x8008             STRH     R0,[R1, #+0]
   1463              if(ramp_time >= ramp_delay_time)
   \   0000075A   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   0000075E   0x8800             LDRH     R0,[R0, #+0]
   \   00000760   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   00000764   0x8809             LDRH     R1,[R1, #+0]
   \   00000766   0x4288             CMP      R0,R1
   \   00000768   0xD30D             BCC.N    ??get_line_information_61
   1464              {
   1465                ramp_time = 0;
   \   0000076A   0x2000             MOVS     R0,#+0
   \   0000076C   0x.... 0x....      LDR.W    R1,??DataTable11_1
   \   00000770   0x8008             STRH     R0,[R1, #+0]
   1466                ramp_flag = 0;
   \   00000772   0x2000             MOVS     R0,#+0
   \   00000774   0x.... 0x....      LDR.W    R1,??DataTable10_9
   \   00000778   0x7008             STRB     R0,[R1, #+0]
   \   0000077A   0xE004             B.N      ??get_line_information_61
   1467              }
   1468            }
   1469            
   1470            else
   1471            {
   1472              gpio_set(PORTB,10,1);
   \                     ??get_line_information_60: (+1)
   \   0000077C   0x2201             MOVS     R2,#+1
   \   0000077E   0x210A             MOVS     R1,#+10
   \   00000780   0x2001             MOVS     R0,#+1
   \   00000782   0x.... 0x....      BL       gpio_set
   1473            
   1474            }
   1475            
   1476            if(ramp_dis_flag == 1)
   \                     ??get_line_information_61: (+1)
   \   00000786   0x.... 0x....      LDR.W    R0,??DataTable11
   \   0000078A   0x7800             LDRB     R0,[R0, #+0]
   \   0000078C   0x2800             CMP      R0,#+0
   \   0000078E   0xD017             BEQ.N    ??get_line_information_62
   1477            {
   1478              ramp_dis_time++;
   \   00000790   0x.... 0x....      LDR.W    R0,??DataTable11_3
   \   00000794   0x8800             LDRH     R0,[R0, #+0]
   \   00000796   0x1C40             ADDS     R0,R0,#+1
   \   00000798   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   0000079C   0x8008             STRH     R0,[R1, #+0]
   1479              if(ramp_dis_time >= 4 * ramp_delay_time)
   \   0000079E   0x.... 0x....      LDR.W    R0,??DataTable11_3
   \   000007A2   0x8800             LDRH     R0,[R0, #+0]
   \   000007A4   0x.... 0x....      LDR.W    R1,??DataTable11_2
   \   000007A8   0x8809             LDRH     R1,[R1, #+0]
   \   000007AA   0xEBB0 0x0F81      CMP      R0,R1, LSL #+2
   \   000007AE   0xDB07             BLT.N    ??get_line_information_62
   1480              {
   1481                ramp_dis_time = 0;
   \   000007B0   0x2000             MOVS     R0,#+0
   \   000007B2   0x.... 0x....      LDR.W    R1,??DataTable11_3
   \   000007B6   0x8008             STRH     R0,[R1, #+0]
   1482                ramp_dis_flag = 0;
   \   000007B8   0x2000             MOVS     R0,#+0
   \   000007BA   0x.... 0x....      LDR.W    R1,??DataTable11
   \   000007BE   0x7008             STRB     R0,[R1, #+0]
   1483              }
   1484            }
   1485          }
   \                     ??get_line_information_62: (+1)
   \   000007C0   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   1486          
   1487          
   1488          /*-------------------------------获取中线的线性相关系数-----------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1489          float get_linear_factor(uint8 bottom,uint8 top,uint8 average)            //传递三个参数基准行，顶行，所有行与MID的差值
   1490          {
   \                     get_linear_factor: (+1)
   \   00000000   0xE92D 0x4FF7      PUSH     {R0-R2,R4-R11,LR}
   \   00000004   0xB084             SUB      SP,SP,#+16
   1491              uint8 i;
   1492              uint8 Y_aver=0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0xF88D 0x0008      STRB     R0,[SP, #+8]
   1493              float X_square_sum=0;   //X轴平方和
   \   0000000C   0x2700             MOVS     R7,#+0
   1494              float Y_square_sum=0;   //Y轴平方和
   \   0000000E   0xF05F 0x0800      MOVS     R8,#+0
   1495              float multi_sum=0;      //XY乘积之和
   \   00000012   0xF05F 0x0900      MOVS     R9,#+0
   1496              int temp=0,temp1=0,temp2=0; //减轻浮点运算的寄存器
   \   00000016   0x2400             MOVS     R4,#+0
   \   00000018   0x2500             MOVS     R5,#+0
   \   0000001A   0x2600             MOVS     R6,#+0
   1497              float factor=0;
   \   0000001C   0xF05F 0x0B00      MOVS     R11,#+0
   1498              
   1499               Y_aver=(uint8)((bottom+top)/2);  //Y坐标的范围
   \   00000020   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   00000024   0xF89D 0x1014      LDRB     R1,[SP, #+20]
   \   00000028   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   0000002C   0x2102             MOVS     R1,#+2
   \   0000002E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000032   0xF88D 0x0008      STRB     R0,[SP, #+8]
   1500              for(i=bottom;i<=top;i++)
   \   00000036   0xF89D 0x0010      LDRB     R0,[SP, #+16]
   \   0000003A   0x4682             MOV      R10,R0
   \                     ??get_linear_factor_0: (+1)
   \   0000003C   0xF89D 0x0014      LDRB     R0,[SP, #+20]
   \   00000040   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000044   0x4550             CMP      R0,R10
   \   00000046   0xD35D             BCC.N    ??get_linear_factor_1
   1501              {
   1502                  temp=temp+(center_white[i]-average)*(center_white[i]-average);
   \   00000048   0x....             LDR.N    R0,??DataTable9_4
   \   0000004A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000004E   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   00000052   0xF89D 0x1018      LDRB     R1,[SP, #+24]
   \   00000056   0x1A40             SUBS     R0,R0,R1
   \   00000058   0x....             LDR.N    R1,??DataTable9_4
   \   0000005A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005E   0xF81A 0x1001      LDRB     R1,[R10, R1]
   \   00000062   0xF89D 0x2018      LDRB     R2,[SP, #+24]
   \   00000066   0x1A89             SUBS     R1,R1,R2
   \   00000068   0xFB01 0x4400      MLA      R4,R1,R0,R4
   1503                  if(temp>30000)
   \   0000006C   0xF247 0x5031      MOVW     R0,#+30001
   \   00000070   0x4284             CMP      R4,R0
   \   00000072   0xDB08             BLT.N    ??get_linear_factor_2
   1504                  {
   1505                      X_square_sum=X_square_sum+temp;   //X平方和
   \   00000074   0x0020             MOVS     R0,R4
   \   00000076   0x.... 0x....      BL       __aeabi_i2f
   \   0000007A   0x0039             MOVS     R1,R7
   \   0000007C   0x.... 0x....      BL       __aeabi_fadd
   \   00000080   0x0007             MOVS     R7,R0
   1506                      temp=0;
   \   00000082   0x2000             MOVS     R0,#+0
   \   00000084   0x0004             MOVS     R4,R0
   1507                  }
   1508          
   1509                  temp1=temp1+(i-Y_aver)*(i-Y_aver);
   \                     ??get_linear_factor_2: (+1)
   \   00000086   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000008A   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   0000008E   0xEBBA 0x0000      SUBS     R0,R10,R0
   \   00000092   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000096   0xF89D 0x1008      LDRB     R1,[SP, #+8]
   \   0000009A   0xEBBA 0x0101      SUBS     R1,R10,R1
   \   0000009E   0xFB01 0x5500      MLA      R5,R1,R0,R5
   1510                  if(temp1>30000)
   \   000000A2   0xF247 0x5031      MOVW     R0,#+30001
   \   000000A6   0x4285             CMP      R5,R0
   \   000000A8   0xDB08             BLT.N    ??get_linear_factor_3
   1511                  {
   1512                      Y_square_sum=Y_square_sum+temp1;   //Y平方和
   \   000000AA   0x0028             MOVS     R0,R5
   \   000000AC   0x.... 0x....      BL       __aeabi_i2f
   \   000000B0   0x4641             MOV      R1,R8
   \   000000B2   0x.... 0x....      BL       __aeabi_fadd
   \   000000B6   0x4680             MOV      R8,R0
   1513                      temp1=0;
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x0005             MOVS     R5,R0
   1514                  }
   1515          
   1516                  temp2=temp2+(center_white[i]-average)*(i-Y_aver);
   \                     ??get_linear_factor_3: (+1)
   \   000000BC   0x....             LDR.N    R0,??DataTable9_4
   \   000000BE   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000C2   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   000000C6   0xF89D 0x1018      LDRB     R1,[SP, #+24]
   \   000000CA   0x1A40             SUBS     R0,R0,R1
   \   000000CC   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000D0   0xF89D 0x1008      LDRB     R1,[SP, #+8]
   \   000000D4   0xEBBA 0x0101      SUBS     R1,R10,R1
   \   000000D8   0xFB01 0x6600      MLA      R6,R1,R0,R6
   1517                  if(f_abs16(temp2)>30000)
   \   000000DC   0x0030             MOVS     R0,R6
   \   000000DE   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000E0   0x.... 0x....      BL       f_abs16
   \   000000E4   0xF247 0x5131      MOVW     R1,#+30001
   \   000000E8   0x4288             CMP      R0,R1
   \   000000EA   0xDB08             BLT.N    ??get_linear_factor_4
   1518                  {
   1519                      multi_sum=multi_sum+temp2;    //X、Y的积
   \   000000EC   0x0030             MOVS     R0,R6
   \   000000EE   0x.... 0x....      BL       __aeabi_i2f
   \   000000F2   0x4649             MOV      R1,R9
   \   000000F4   0x.... 0x....      BL       __aeabi_fadd
   \   000000F8   0x4681             MOV      R9,R0
   1520                      temp2=0;
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x0006             MOVS     R6,R0
   1521                  }
   1522              }
   \                     ??get_linear_factor_4: (+1)
   \   000000FE   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   00000102   0xE79B             B.N      ??get_linear_factor_0
   1523               
   1524                  X_square_sum=X_square_sum+temp;   //得出x的平方和
   \                     ??get_linear_factor_1: (+1)
   \   00000104   0x0020             MOVS     R0,R4
   \   00000106   0x.... 0x....      BL       __aeabi_i2f
   \   0000010A   0x0039             MOVS     R1,R7
   \   0000010C   0x.... 0x....      BL       __aeabi_fadd
   \   00000110   0x0007             MOVS     R7,R0
   1525                  Y_square_sum=Y_square_sum+temp1;  //计算出y的平方和
   \   00000112   0x0028             MOVS     R0,R5
   \   00000114   0x.... 0x....      BL       __aeabi_i2f
   \   00000118   0x4641             MOV      R1,R8
   \   0000011A   0x.... 0x....      BL       __aeabi_fadd
   \   0000011E   0x4680             MOV      R8,R0
   1526                  multi_sum=multi_sum+temp2;        //计算出xy的乘积
   \   00000120   0x0030             MOVS     R0,R6
   \   00000122   0x.... 0x....      BL       __aeabi_i2f
   \   00000126   0x4649             MOV      R1,R9
   \   00000128   0x.... 0x....      BL       __aeabi_fadd
   \   0000012C   0x4681             MOV      R9,R0
   1527              
   1528                 /* XX_square_sum =X_square_sum;      //用于检测
   1529                  YY_square_sum =Y_square_sum;
   1530                  XYmulti_sum = multi_sum;*/
   1531                  
   1532                  if(X_square_sum<0.1)   //防止除数为0
   \   0000012E   0x0038             MOVS     R0,R7
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable11_4  ;; 0x3dcccccd
   \   00000134   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000138   0xD202             BCS.N    ??get_linear_factor_5
   1533                      X_square_sum=0.1;
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x3dcccccd
   \   0000013E   0x0007             MOVS     R7,R0
   1534                  if(Y_square_sum<0.1)
   \                     ??get_linear_factor_5: (+1)
   \   00000140   0x4640             MOV      R0,R8
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable11_4  ;; 0x3dcccccd
   \   00000146   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000014A   0xD202             BCS.N    ??get_linear_factor_6
   1535                      Y_square_sum=0.1;
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x3dcccccd
   \   00000150   0x4680             MOV      R8,R0
   1536                  
   1537                  if(X_square_sum<300)  //小于300出现在直道
   \                     ??get_linear_factor_6: (+1)
   \   00000152   0x0038             MOVS     R0,R7
   \   00000154   0x.... 0x....      LDR.W    R1,??DataTable11_5  ;; 0x43960000
   \   00000158   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000015C   0xD203             BCS.N    ??get_linear_factor_7
   1538                      factor=1; // =1 or =-1 //完全是直线
   \   0000015E   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000162   0x4683             MOV      R11,R0
   \   00000164   0xE029             B.N      ??get_linear_factor_8
   1539                  else  //否则用公式计算 //注意处理速度，小于200时处理时间少很多
   1540                      factor=multi_sum/sqrt(X_square_sum*Y_square_sum)*(bottom_whitebase+control_top_whiteline-10)/(65-10);
   \                     ??get_linear_factor_7: (+1)
   \   00000166   0x4648             MOV      R0,R9
   \   00000168   0x.... 0x....      BL       __aeabi_f2d
   \   0000016C   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000170   0x0038             MOVS     R0,R7
   \   00000172   0x4641             MOV      R1,R8
   \   00000174   0x.... 0x....      BL       __aeabi_fmul
   \   00000178   0x.... 0x....      BL       __aeabi_f2d
   \   0000017C   0x.... 0x....      BL       sqrt
   \   00000180   0x0002             MOVS     R2,R0
   \   00000182   0x000B             MOVS     R3,R1
   \   00000184   0xE9DD 0x0100      LDRD     R0,R1,[SP, #+0]
   \   00000188   0x.... 0x....      BL       __aeabi_ddiv
   \   0000018C   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \   00000190   0x....             LDR.N    R0,??DataTable9_2
   \   00000192   0x7800             LDRB     R0,[R0, #+0]
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable10_2
   \   00000198   0x8809             LDRH     R1,[R1, #+0]
   \   0000019A   0x1808             ADDS     R0,R1,R0
   \   0000019C   0x380A             SUBS     R0,R0,#+10
   \   0000019E   0x.... 0x....      BL       __aeabi_i2d
   \   000001A2   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \   000001A6   0x.... 0x....      BL       __aeabi_dmul
   \   000001AA   0x2200             MOVS     R2,#+0
   \   000001AC   0x.... 0x....      LDR.W    R3,??DataTable11_6  ;; 0x404b8000
   \   000001B0   0x.... 0x....      BL       __aeabi_ddiv
   \   000001B4   0x.... 0x....      BL       __aeabi_d2f
   \   000001B8   0x4683             MOV      R11,R0
   1541                  
   1542                  if(factor>0.95)
   \                     ??get_linear_factor_8: (+1)
   \   000001BA   0x4658             MOV      R0,R11
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable11_7  ;; 0x3f733334
   \   000001C0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001C4   0xD802             BHI.N    ??get_linear_factor_9
   1543                    factor=1;
   \   000001C6   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000001CA   0x4683             MOV      R11,R0
   1544                  if(factor<-0.95)
   \                     ??get_linear_factor_9: (+1)
   \   000001CC   0x4658             MOV      R0,R11
   \   000001CE   0x.... 0x....      LDR.W    R1,??DataTable11_8  ;; 0xbf733333
   \   000001D2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001D6   0xD202             BCS.N    ??get_linear_factor_10
   1545                    factor=-1;
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable11_9  ;; 0xbf800000
   \   000001DC   0x4683             MOV      R11,R0
   1546              
   1547                  return factor;
   \                     ??get_linear_factor_10: (+1)
   \   000001DE   0x4658             MOV      R0,R11
   \   000001E0   0xB007             ADD      SP,SP,#+28
   \   000001E2   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1548          }
   1549          
   1550          
   1551          /*加入起跑线检测的停车程序，利用摄像头进行检测
   1552           这里的主要目的是给stop_flag置位,为了能够检测起跑线，必须保证的是检测的距离为起跑线前的20厘米以上。
   1553          这里的图像而言的话就是图像的30行，
   1554          以五米的速度来看的话，也就是必须保证两场图像至少有一场检测到，40ms*5m = 20厘米
   1555          注意这里的检测是检测黑到白的跳变。这个比检测白到黑的跳变更加的准确
   1556          */
   1557          

   \                                 In section .bss, align 1
   1558          uint8 zhou=0;
   \                     zhou:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1559          bool ting1=0;
   \                     ting1:
   \   00000000                      DS8 1
   1560          /*
   1561          void check_start_stop_line()
   1562          { 
   1563            int i,j;
   1564            uint8 left_start_stop_hang = 0;
   1565            uint8 left_start_stop_flag = 0;
   1566            uint8 right_start_stop_hang = 0;
   1567            uint8 right_start_stop_flag = 0;
   1568            //弯道不检测起跑线
   1569            if(top_whiteline - bottom_whitebase > 35)
   1570            {
   1571              for(i=bottom_whitebase+1;i< bottom_whitebase + 35;i++) //只是检测前二十五行，大于车身的前20几个厘米  
   1572              {
   1573                  //至少保证中线的左右的三个点是白色的 并且要保证这个时候的行的状态为3
   1574                if( top_whiteline >= 40
   1575                   && (VideoImage2[i - 1][ center_white[i]] -  VideoImage2[i + 1][ center_white[i]])< OT
   1576                    && (VideoImage2[i - 1][ center_white[i] - 1] -  VideoImage2[i + 1][ center_white[i] - 1]) < OT
   1577                     && (VideoImage2[i - 1][ center_white[i] + 1] -  VideoImage2[i + 1][ center_white[i] + 1]) < OT)
   1578                {//左右两边能够有两段是黑色的
   1579                  //这两段白色的检测用的是左右边沿各自向内缩减5格子
   1580                  for(j = left_black[i] + 4 ; j <   center_white[i] - 3;j++)
   1581                  {
   1582                    if((VideoImage2[i + 2][ j ] -  VideoImage2[i - 1][ j])> OT-10
   1583                       &&(VideoImage2[i + 2][ j + 1] -  VideoImage2[i - 1][ j+1])> OT-10
   1584                          &&(VideoImage2[i + 2][ j + 2] -  VideoImage2[i - 1][ j + 2])> OT-10 ) // 
   1585                    {
   1586                       left_start_stop_hang = i;
   1587                       left_start_stop_flag = 1;
   1588                    }
   1589                  }
   1590                  
   1591                  for(j = right_black[i] - 4 ; j > center_white[i] + 3;j--)
   1592                  {
   1593                    if((VideoImage2[i + 2][ j] -  VideoImage2[i - 1][ j]) > OT-10
   1594                       &&(VideoImage2[i + 2][ j - 1] -  VideoImage2[i - 1][ j - 1])> OT-10
   1595                        &&(VideoImage2[i + 2][ j - 2] -  VideoImage2[i - 1][ j - 2])> OT-10 ) 
   1596                    {
   1597                       right_start_stop_hang = i;
   1598                       right_start_stop_flag = 1;
   1599                    }
   1600                  }//右边搜索 
   1601                } //中线符合标准
   1602                  //当找到了符合的起跑线的时候，跳出循环//判断是还要防止图像的错位
   1603                  if(  left_start_stop_flag == 1 && right_start_stop_flag == 1 && f_abs16(right_start_stop_hang - left_start_stop_hang) < 5)
   1604                  {
   1605                   ting1= 1;
   1606                    break;//
   1607                  }
   1608              }//for循环
   1609            }
   1610            
   1611            if(ting1==1)
   1612                   zhou++;
   1613              if(zhou>=25)
   1614              { ting_check_stop=1;zhou=0;ting1=0;gpio_set (PORTB, 10,LOW );}
   1615          }
   1616          */
   1617          

   \                                 In section .text, align 2, keep-with-next
   1618          void check_start_stop_line()
   1619          { 
   \                     check_start_stop_line: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   1620            int i,j;
   1621            uint8 left_start_stop_hang = 0;
   \   00000004   0x2600             MOVS     R6,#+0
   1622            uint8 left_start_stop_flag = 0;
   \   00000006   0x2700             MOVS     R7,#+0
   1623            uint8 right_start_stop_hang = 0;
   \   00000008   0xF05F 0x0800      MOVS     R8,#+0
   1624            uint8 right_start_stop_flag = 0;
   \   0000000C   0xF05F 0x0900      MOVS     R9,#+0
   1625            //弯道不检测起跑线
   1626            if(top_whiteline - bottom_whitebase > 35)
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable11_10
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable11_11
   \   0000001A   0x7809             LDRB     R1,[R1, #+0]
   \   0000001C   0x1A40             SUBS     R0,R0,R1
   \   0000001E   0x2824             CMP      R0,#+36
   \   00000020   0xF2C0 0x81C9      BLT.W    ??check_start_stop_line_0
   1627            {
   1628              for(i=bottom_whitebase+5;i< bottom_whitebase + 30;i++) //只是检测前二十五行，大于车身的前20几个厘米  
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x1D40             ADDS     R0,R0,#+5
   \   0000002C   0x0004             MOVS     R4,R0
   \                     ??check_start_stop_line_1: (+1)
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x301E             ADDS     R0,R0,#+30
   \   00000036   0x4284             CMP      R4,R0
   \   00000038   0xF280 0x81BD      BGE.W    ??check_start_stop_line_0
   1629              {
   1630                  //至少保证中线的左右的三个点是白色的 并且要保证这个时候的行的状态为3
   1631                if( top_whiteline >= 40
   1632                   &&  f_abs16(VideoImage2[i - 1][ center_white[i]] -  VideoImage2[i + 1][ center_white[i]] )< OT
   1633                    &&f_abs16( VideoImage2[i - 1][ center_white[i] - 1] -  VideoImage2[i + 1][ center_white[i] - 1]) < OT
   1634                     &&f_abs16( VideoImage2[i - 1][ center_white[i] + 1] -  VideoImage2[i + 1][ center_white[i] + 1]) < OT
   1635                       &&VideoImage2[i - 1][ center_white[i]]> BASE_OT&&VideoImage2[i - 1][ center_white[i]-1]> BASE_OT
   1636                         &&VideoImage2[i - 1][ center_white[i]+1]> BASE_OT)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_10
   \   00000040   0x7800             LDRB     R0,[R0, #+0]
   \   00000042   0x2828             CMP      R0,#+40
   \   00000044   0xF2C0 0x819E      BLT.W    ??check_start_stop_line_2
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   0000004C   0x219D             MOVS     R1,#+157
   \   0000004E   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   00000056   0x5C61             LDRB     R1,[R4, R1]
   \   00000058   0x1808             ADDS     R0,R1,R0
   \   0000005A   0xF810 0x0C9D      LDRB     R0,[R0, #-157]
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000062   0x229D             MOVS     R2,#+157
   \   00000064   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000068   0x.... 0x....      LDR.W    R2,??DataTable11_13
   \   0000006C   0x5CA2             LDRB     R2,[R4, R2]
   \   0000006E   0x1851             ADDS     R1,R2,R1
   \   00000070   0xF891 0x109D      LDRB     R1,[R1, #+157]
   \   00000074   0x1A40             SUBS     R0,R0,R1
   \   00000076   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000078   0x.... 0x....      BL       f_abs16
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable11_14
   \   00000080   0x7809             LDRB     R1,[R1, #+0]
   \   00000082   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000084   0x4288             CMP      R0,R1
   \   00000086   0xF280 0x817D      BGE.W    ??check_start_stop_line_2
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   0000008E   0x219D             MOVS     R1,#+157
   \   00000090   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   00000098   0x5C61             LDRB     R1,[R4, R1]
   \   0000009A   0x1808             ADDS     R0,R1,R0
   \   0000009C   0xF810 0x0C9E      LDRB     R0,[R0, #-158]
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   000000A4   0x229D             MOVS     R2,#+157
   \   000000A6   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000000AA   0x.... 0x....      LDR.W    R2,??DataTable11_13
   \   000000AE   0x5CA2             LDRB     R2,[R4, R2]
   \   000000B0   0x1851             ADDS     R1,R2,R1
   \   000000B2   0xF891 0x109C      LDRB     R1,[R1, #+156]
   \   000000B6   0x1A40             SUBS     R0,R0,R1
   \   000000B8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000BA   0x.... 0x....      BL       f_abs16
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable11_14
   \   000000C2   0x7809             LDRB     R1,[R1, #+0]
   \   000000C4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000000C6   0x4288             CMP      R0,R1
   \   000000C8   0xF280 0x815C      BGE.W    ??check_start_stop_line_2
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   000000D0   0x219D             MOVS     R1,#+157
   \   000000D2   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   000000DA   0x5C61             LDRB     R1,[R4, R1]
   \   000000DC   0x1808             ADDS     R0,R1,R0
   \   000000DE   0xF810 0x0C9C      LDRB     R0,[R0, #-156]
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   000000E6   0x229D             MOVS     R2,#+157
   \   000000E8   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000000EC   0x.... 0x....      LDR.W    R2,??DataTable11_13
   \   000000F0   0x5CA2             LDRB     R2,[R4, R2]
   \   000000F2   0x1851             ADDS     R1,R2,R1
   \   000000F4   0xF891 0x109E      LDRB     R1,[R1, #+158]
   \   000000F8   0x1A40             SUBS     R0,R0,R1
   \   000000FA   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000000FC   0x.... 0x....      BL       f_abs16
   \   00000100   0x.... 0x....      LDR.W    R1,??DataTable11_14
   \   00000104   0x7809             LDRB     R1,[R1, #+0]
   \   00000106   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000108   0x4288             CMP      R0,R1
   \   0000010A   0xF280 0x813B      BGE.W    ??check_start_stop_line_2
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable11_15
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000118   0x229D             MOVS     R2,#+157
   \   0000011A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000011E   0x.... 0x....      LDR.W    R2,??DataTable11_13
   \   00000122   0x5CA2             LDRB     R2,[R4, R2]
   \   00000124   0x1851             ADDS     R1,R2,R1
   \   00000126   0xF811 0x1C9D      LDRB     R1,[R1, #-157]
   \   0000012A   0x4288             CMP      R0,R1
   \   0000012C   0xF080 0x812A      BCS.W    ??check_start_stop_line_2
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable11_15
   \   00000134   0x7800             LDRB     R0,[R0, #+0]
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   0000013A   0x229D             MOVS     R2,#+157
   \   0000013C   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000140   0x.... 0x....      LDR.W    R2,??DataTable11_13
   \   00000144   0x5CA2             LDRB     R2,[R4, R2]
   \   00000146   0x1851             ADDS     R1,R2,R1
   \   00000148   0xF811 0x1C9E      LDRB     R1,[R1, #-158]
   \   0000014C   0x4288             CMP      R0,R1
   \   0000014E   0xF080 0x8119      BCS.W    ??check_start_stop_line_2
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable11_15
   \   00000156   0x7800             LDRB     R0,[R0, #+0]
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   0000015C   0x229D             MOVS     R2,#+157
   \   0000015E   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000162   0x.... 0x....      LDR.W    R2,??DataTable11_13
   \   00000166   0x5CA2             LDRB     R2,[R4, R2]
   \   00000168   0x1851             ADDS     R1,R2,R1
   \   0000016A   0xF811 0x1C9C      LDRB     R1,[R1, #-156]
   \   0000016E   0x4288             CMP      R0,R1
   \   00000170   0xF080 0x8108      BCS.W    ??check_start_stop_line_2
   1637                {//左右两边能够有两段是黑色的
   1638                  //这两段白色的检测用的是左右边沿各自向内缩减5格子
   1639                  for(j = left_black[i] + 4 ; j <   center_white[i] - 3;j++)
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable11_16
   \   00000178   0x5C20             LDRB     R0,[R4, R0]
   \   0000017A   0x1D00             ADDS     R0,R0,#+4
   \   0000017C   0x0005             MOVS     R5,R0
   \                     ??check_start_stop_line_3: (+1)
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000182   0x5C20             LDRB     R0,[R4, R0]
   \   00000184   0x1EC0             SUBS     R0,R0,#+3
   \   00000186   0x4285             CMP      R5,R0
   \   00000188   0xDA78             BGE.N    ??check_start_stop_line_4
   1640                  {
   1641                    if((VideoImage2[i + 2][ j ] -  VideoImage2[i - 1][ j])> OT-10
   1642                       &&(VideoImage2[i + 2][ j + 1] -  VideoImage2[i - 1][ j+1])> OT-10
   1643                          &&(VideoImage2[i + 2][ j + 2] -  VideoImage2[i - 1][ j + 2])> OT-10 
   1644                           &&(VideoImage2[i + 2][ j + 3] -  VideoImage2[i - 1][ j + 3])> OT-10
   1645                            &&(VideoImage2[i + 2][ j + 4] -  VideoImage2[i - 1][ j + 4])> OT-10 ) // 
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   0000018E   0x7800             LDRB     R0,[R0, #+0]
   \   00000190   0x380A             SUBS     R0,R0,#+10
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000196   0x229D             MOVS     R2,#+157
   \   00000198   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000019C   0x1869             ADDS     R1,R5,R1
   \   0000019E   0xF891 0x113A      LDRB     R1,[R1, #+314]
   \   000001A2   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   000001A6   0x239D             MOVS     R3,#+157
   \   000001A8   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   000001AC   0x18AA             ADDS     R2,R5,R2
   \   000001AE   0xF812 0x2C9D      LDRB     R2,[R2, #-157]
   \   000001B2   0x1A89             SUBS     R1,R1,R2
   \   000001B4   0x4288             CMP      R0,R1
   \   000001B6   0xDA5F             BGE.N    ??check_start_stop_line_5
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   000001BC   0x7800             LDRB     R0,[R0, #+0]
   \   000001BE   0x380A             SUBS     R0,R0,#+10
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   000001C4   0x229D             MOVS     R2,#+157
   \   000001C6   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000001CA   0x1869             ADDS     R1,R5,R1
   \   000001CC   0xF891 0x113B      LDRB     R1,[R1, #+315]
   \   000001D0   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   000001D4   0x239D             MOVS     R3,#+157
   \   000001D6   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   000001DA   0x18AA             ADDS     R2,R5,R2
   \   000001DC   0xF812 0x2C9C      LDRB     R2,[R2, #-156]
   \   000001E0   0x1A89             SUBS     R1,R1,R2
   \   000001E2   0x4288             CMP      R0,R1
   \   000001E4   0xDA48             BGE.N    ??check_start_stop_line_5
   \   000001E6   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   000001EA   0x7800             LDRB     R0,[R0, #+0]
   \   000001EC   0x380A             SUBS     R0,R0,#+10
   \   000001EE   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   000001F2   0x229D             MOVS     R2,#+157
   \   000001F4   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000001F8   0x1869             ADDS     R1,R5,R1
   \   000001FA   0xF891 0x113C      LDRB     R1,[R1, #+316]
   \   000001FE   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   00000202   0x239D             MOVS     R3,#+157
   \   00000204   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   00000208   0x18AA             ADDS     R2,R5,R2
   \   0000020A   0xF812 0x2C9B      LDRB     R2,[R2, #-155]
   \   0000020E   0x1A89             SUBS     R1,R1,R2
   \   00000210   0x4288             CMP      R0,R1
   \   00000212   0xDA31             BGE.N    ??check_start_stop_line_5
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000218   0x7800             LDRB     R0,[R0, #+0]
   \   0000021A   0x380A             SUBS     R0,R0,#+10
   \   0000021C   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000220   0x229D             MOVS     R2,#+157
   \   00000222   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000226   0x1869             ADDS     R1,R5,R1
   \   00000228   0xF891 0x113D      LDRB     R1,[R1, #+317]
   \   0000022C   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   00000230   0x239D             MOVS     R3,#+157
   \   00000232   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   00000236   0x18AA             ADDS     R2,R5,R2
   \   00000238   0xF812 0x2C9A      LDRB     R2,[R2, #-154]
   \   0000023C   0x1A89             SUBS     R1,R1,R2
   \   0000023E   0x4288             CMP      R0,R1
   \   00000240   0xDA1A             BGE.N    ??check_start_stop_line_5
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000246   0x7800             LDRB     R0,[R0, #+0]
   \   00000248   0x380A             SUBS     R0,R0,#+10
   \   0000024A   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   0000024E   0x229D             MOVS     R2,#+157
   \   00000250   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000254   0x1869             ADDS     R1,R5,R1
   \   00000256   0xF891 0x113E      LDRB     R1,[R1, #+318]
   \   0000025A   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   0000025E   0x239D             MOVS     R3,#+157
   \   00000260   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   00000264   0x18AA             ADDS     R2,R5,R2
   \   00000266   0xF812 0x2C99      LDRB     R2,[R2, #-153]
   \   0000026A   0x1A89             SUBS     R1,R1,R2
   \   0000026C   0x4288             CMP      R0,R1
   \   0000026E   0xDA03             BGE.N    ??check_start_stop_line_5
   1646                    {
   1647                       left_start_stop_hang = i;
   \   00000270   0x0020             MOVS     R0,R4
   \   00000272   0x0006             MOVS     R6,R0
   1648                       left_start_stop_flag = 1;
   \   00000274   0x2001             MOVS     R0,#+1
   \   00000276   0x0007             MOVS     R7,R0
   1649                    }
   1650                  }
   \                     ??check_start_stop_line_5: (+1)
   \   00000278   0x1C6D             ADDS     R5,R5,#+1
   \   0000027A   0xE780             B.N      ??check_start_stop_line_3
   1651                  
   1652                  for(j = right_black[i] - 4 ; j > center_white[i] + 3;j--)
   \                     ??check_start_stop_line_4: (+1)
   \   0000027C   0x.... 0x....      LDR.W    R0,??DataTable12
   \   00000280   0x5C20             LDRB     R0,[R4, R0]
   \   00000282   0x1F00             SUBS     R0,R0,#+4
   \   00000284   0x0005             MOVS     R5,R0
   \                     ??check_start_stop_line_6: (+1)
   \   00000286   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   0000028A   0x5C20             LDRB     R0,[R4, R0]
   \   0000028C   0x1CC0             ADDS     R0,R0,#+3
   \   0000028E   0x42A8             CMP      R0,R5
   \   00000290   0xDA78             BGE.N    ??check_start_stop_line_2
   1653                  {
   1654                    if((VideoImage2[i + 2][ j] -  VideoImage2[i - 1][ j]) > OT-10
   1655                       &&(VideoImage2[i + 2][ j - 1] -  VideoImage2[i - 1][ j - 1])> OT-10
   1656                        &&(VideoImage2[i + 2][ j - 2] -  VideoImage2[i - 1][ j - 2])> OT-10
   1657                         &&(VideoImage2[i + 2][ j - 3] -  VideoImage2[i - 1][ j - 3])> OT-10
   1658                        &&(VideoImage2[i + 2][ j - 4] -  VideoImage2[i - 1][ j - 4])> OT-10 ) 
   \   00000292   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000296   0x7800             LDRB     R0,[R0, #+0]
   \   00000298   0x380A             SUBS     R0,R0,#+10
   \   0000029A   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   0000029E   0x229D             MOVS     R2,#+157
   \   000002A0   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000002A4   0x1869             ADDS     R1,R5,R1
   \   000002A6   0xF891 0x113A      LDRB     R1,[R1, #+314]
   \   000002AA   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   000002AE   0x239D             MOVS     R3,#+157
   \   000002B0   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   000002B4   0x18AA             ADDS     R2,R5,R2
   \   000002B6   0xF812 0x2C9D      LDRB     R2,[R2, #-157]
   \   000002BA   0x1A89             SUBS     R1,R1,R2
   \   000002BC   0x4288             CMP      R0,R1
   \   000002BE   0xDA5F             BGE.N    ??check_start_stop_line_7
   \   000002C0   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   000002C4   0x7800             LDRB     R0,[R0, #+0]
   \   000002C6   0x380A             SUBS     R0,R0,#+10
   \   000002C8   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   000002CC   0x229D             MOVS     R2,#+157
   \   000002CE   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   000002D2   0x1869             ADDS     R1,R5,R1
   \   000002D4   0xF891 0x1139      LDRB     R1,[R1, #+313]
   \   000002D8   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   000002DC   0x239D             MOVS     R3,#+157
   \   000002DE   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   000002E2   0x18AA             ADDS     R2,R5,R2
   \   000002E4   0xF812 0x2C9E      LDRB     R2,[R2, #-158]
   \   000002E8   0x1A89             SUBS     R1,R1,R2
   \   000002EA   0x4288             CMP      R0,R1
   \   000002EC   0xDA48             BGE.N    ??check_start_stop_line_7
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   000002F2   0x7800             LDRB     R0,[R0, #+0]
   \   000002F4   0x380A             SUBS     R0,R0,#+10
   \   000002F6   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   000002FA   0x229D             MOVS     R2,#+157
   \   000002FC   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   00000300   0x1869             ADDS     R1,R5,R1
   \   00000302   0xF891 0x1138      LDRB     R1,[R1, #+312]
   \   00000306   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   0000030A   0x239D             MOVS     R3,#+157
   \   0000030C   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   00000310   0x18AA             ADDS     R2,R5,R2
   \   00000312   0xF812 0x2C9F      LDRB     R2,[R2, #-159]
   \   00000316   0x1A89             SUBS     R1,R1,R2
   \   00000318   0x4288             CMP      R0,R1
   \   0000031A   0xDA31             BGE.N    ??check_start_stop_line_7
   \   0000031C   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000320   0x7800             LDRB     R0,[R0, #+0]
   \   00000322   0x380A             SUBS     R0,R0,#+10
   \   00000324   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000328   0x229D             MOVS     R2,#+157
   \   0000032A   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000032E   0x1869             ADDS     R1,R5,R1
   \   00000330   0xF891 0x1137      LDRB     R1,[R1, #+311]
   \   00000334   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   00000338   0x239D             MOVS     R3,#+157
   \   0000033A   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   0000033E   0x18AA             ADDS     R2,R5,R2
   \   00000340   0xF812 0x2CA0      LDRB     R2,[R2, #-160]
   \   00000344   0x1A89             SUBS     R1,R1,R2
   \   00000346   0x4288             CMP      R0,R1
   \   00000348   0xDA1A             BGE.N    ??check_start_stop_line_7
   \   0000034A   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   0000034E   0x7800             LDRB     R0,[R0, #+0]
   \   00000350   0x380A             SUBS     R0,R0,#+10
   \   00000352   0x.... 0x....      LDR.W    R1,??DataTable11_12
   \   00000356   0x229D             MOVS     R2,#+157
   \   00000358   0xFB02 0x1104      MLA      R1,R2,R4,R1
   \   0000035C   0x1869             ADDS     R1,R5,R1
   \   0000035E   0xF891 0x1136      LDRB     R1,[R1, #+310]
   \   00000362   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   00000366   0x239D             MOVS     R3,#+157
   \   00000368   0xFB03 0x2204      MLA      R2,R3,R4,R2
   \   0000036C   0x18AA             ADDS     R2,R5,R2
   \   0000036E   0xF812 0x2CA1      LDRB     R2,[R2, #-161]
   \   00000372   0x1A89             SUBS     R1,R1,R2
   \   00000374   0x4288             CMP      R0,R1
   \   00000376   0xDA03             BGE.N    ??check_start_stop_line_7
   1659                    {
   1660                       right_start_stop_hang = i;
   \   00000378   0x0020             MOVS     R0,R4
   \   0000037A   0x4680             MOV      R8,R0
   1661                       right_start_stop_flag = 1;
   \   0000037C   0x2001             MOVS     R0,#+1
   \   0000037E   0x4681             MOV      R9,R0
   1662                    }
   1663                  }//右边搜索 
   \                     ??check_start_stop_line_7: (+1)
   \   00000380   0x1E6D             SUBS     R5,R5,#+1
   \   00000382   0xE780             B.N      ??check_start_stop_line_6
   1664                } //中线符合标准
   1665                  //当找到了符合的起跑线的时候，跳出循环//判断是还要防止图像的错位
   1666                  if(  left_start_stop_flag == 1 && right_start_stop_flag == 1 && f_abs16(right_start_stop_hang - left_start_stop_hang) < 5)
   \                     ??check_start_stop_line_2: (+1)
   \   00000384   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000386   0x2F01             CMP      R7,#+1
   \   00000388   0xD113             BNE.N    ??check_start_stop_line_8
   \   0000038A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000038E   0xF1B9 0x0F01      CMP      R9,#+1
   \   00000392   0xD10E             BNE.N    ??check_start_stop_line_8
   \   00000394   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000398   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000039A   0xEBB8 0x0006      SUBS     R0,R8,R6
   \   0000039E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003A0   0x.... 0x....      BL       f_abs16
   \   000003A4   0x2805             CMP      R0,#+5
   \   000003A6   0xDA04             BGE.N    ??check_start_stop_line_8
   1667                  {
   1668                   ting1= 1;
   \   000003A8   0x2001             MOVS     R0,#+1
   \   000003AA   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   000003AE   0x7008             STRB     R0,[R1, #+0]
   1669                    break;//
   \   000003B0   0xE001             B.N      ??check_start_stop_line_0
   1670                  }
   1671              }//for循环
   \                     ??check_start_stop_line_8: (+1)
   \   000003B2   0x1C64             ADDS     R4,R4,#+1
   \   000003B4   0xE63B             B.N      ??check_start_stop_line_1
   1672            }
   1673            
   1674            if(ting1==1)
   \                     ??check_start_stop_line_0: (+1)
   \   000003B6   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   000003BA   0x7800             LDRB     R0,[R0, #+0]
   \   000003BC   0x2800             CMP      R0,#+0
   \   000003BE   0xD006             BEQ.N    ??check_start_stop_line_9
   1675                   zhou++;
   \   000003C0   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   000003C4   0x7800             LDRB     R0,[R0, #+0]
   \   000003C6   0x1C40             ADDS     R0,R0,#+1
   \   000003C8   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   000003CC   0x7008             STRB     R0,[R1, #+0]
   1676              if(zhou>=25)
   \                     ??check_start_stop_line_9: (+1)
   \   000003CE   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   000003D2   0x7800             LDRB     R0,[R0, #+0]
   \   000003D4   0x2819             CMP      R0,#+25
   \   000003D6   0xDB10             BLT.N    ??check_start_stop_line_10
   1677              { ting_check_stop=1;zhou=0;ting1=0;gpio_set (PORTB, 10,LOW );}
   \   000003D8   0x2001             MOVS     R0,#+1
   \   000003DA   0x.... 0x....      LDR.W    R1,??DataTable12_3
   \   000003DE   0x7008             STRB     R0,[R1, #+0]
   \   000003E0   0x2000             MOVS     R0,#+0
   \   000003E2   0x.... 0x....      LDR.W    R1,??DataTable12_2
   \   000003E6   0x7008             STRB     R0,[R1, #+0]
   \   000003E8   0x2000             MOVS     R0,#+0
   \   000003EA   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   000003EE   0x7008             STRB     R0,[R1, #+0]
   \   000003F0   0x2200             MOVS     R2,#+0
   \   000003F2   0x210A             MOVS     R1,#+10
   \   000003F4   0x2001             MOVS     R0,#+1
   \   000003F6   0x.... 0x....      BL       gpio_set
   1678          }
   \                     ??check_start_stop_line_10: (+1)
   \   000003FA   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1679          /*-----------------------------------舵机和电机的控制函数的变量---------------------------------
   1680          这个函数用于进行赛道的优化和控制，其中控制包括电机和舵机，这两部分。对其进行统一的控制
   1681          */

   \                                 In section .data, align 2
   1682          int16 big1=80;
   \                     big1:
   \   00000000   0x0050             DC16 80

   \                                 In section .data, align 2
   1683          int16 ft1=800;
   \                     ft1:
   \   00000000   0x0320             DC16 800

   \                                 In section .data, align 2
   1684          int16 big=1100;
   \                     big:
   \   00000000   0x044C             DC16 1100

   \                                 In section .bss, align 1
   1685          bool turn_l=0,turn_r=0;
   \                     turn_l:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     turn_r:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1686           bool barrier_l=0;
   \                     barrier_l:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1687           bool barrier_r=0;
   \                     barrier_r:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   1688          bool jianshu=0;
   \                     jianshu:
   \   00000000                      DS8 1
   1689          //uint angle_record=0;

   \                                 In section .bss, align 1
   1690          bool record_flag=0;
   \                     record_flag:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
   1691          void Control()
   1692          {
   \                     Control: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   1693           int16 i=0; //
   \   00000002   0x2400             MOVS     R4,#+0
   1694           int16 angle_temp=0;
   \   00000004   0x2500             MOVS     R5,#+0
   1695           center_average_a =0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   0000000C   0x8008             STRH     R0,[R1, #+0]
   1696           center_average_b = 0;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000014   0x8008             STRH     R0,[R1, #+0]
   1697           refer_error = 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   0000001C   0x8008             STRH     R0,[R1, #+0]
   1698           sumbe3=0;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable12_7
   \   00000024   0x8008             STRH     R0,[R1, #+0]
   1699           re_angle= angle;/////////问题的
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   0000002A   0x8800             LDRH     R0,[R0, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable12_9
   \   00000030   0x8008             STRH     R0,[R1, #+0]
   1700           
   1701             //////////////////////对图像的加权平均值的提取/////////////////////
   1702            center_average = 0;//清零
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000038   0x6008             STR      R0,[R1, #+0]
   1703            
   1704            error_servo_ref_p =0;  //增加这个p有利于出弯道内切    3/13    1/2
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   00000040   0x8008             STRH     R0,[R1, #+0]
   1705            error_servo_ref_d=0; 
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   00000048   0x8008             STRH     R0,[R1, #+0]
   1706          
   1707           if(control_top_whiteline>15)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000004E   0x8800             LDRH     R0,[R0, #+0]
   \   00000050   0x2810             CMP      R0,#+16
   \   00000052   0xF2C0 0x8268      BLT.W    ??Control_0
   1708          {
   1709            if(control_top_whiteline >= 41)                //处理长直道（>2m）出弯道，和半径很大的大弧弯  
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x2829             CMP      R0,#+41
   \   0000005E   0xDB4E             BLT.N    ??Control_1
   1710             {
   1711                for(i = bottom_whitebase+4;i<=bottom_whitebase+33;i++)
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x1D00             ADDS     R0,R0,#+4
   \   00000068   0x0004             MOVS     R4,R0
   \                     ??Control_2: (+1)
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   0000006E   0x7800             LDRB     R0,[R0, #+0]
   \   00000070   0x3021             ADDS     R0,R0,#+33
   \   00000072   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000074   0x42A0             CMP      R0,R4
   \   00000076   0xDB0C             BLT.N    ??Control_3
   1712               {
   1713                 center_average_a +=  center_white[i];
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000007C   0x8800             LDRH     R0,[R0, #+0]
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   00000082   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000084   0x5C61             LDRB     R1,[R4, R1]
   \   00000086   0x1840             ADDS     R0,R0,R1
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   0000008C   0x8008             STRH     R0,[R1, #+0]
   1714               }
   \   0000008E   0x1C64             ADDS     R4,R4,#+1
   \   00000090   0xE7EB             B.N      ??Control_2
   1715                center_average_a = center_average_a /(30);
   \                     ??Control_3: (+1)
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000096   0x8800             LDRH     R0,[R0, #+0]
   \   00000098   0x211E             MOVS     R1,#+30
   \   0000009A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000000A2   0x8008             STRH     R0,[R1, #+0]
   1716                
   1717              for(i= 41; i>=37;i--)
   \   000000A4   0x2029             MOVS     R0,#+41
   \   000000A6   0x0004             MOVS     R4,R0
   \                     ??Control_4: (+1)
   \   000000A8   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000AA   0x2C25             CMP      R4,#+37
   \   000000AC   0xDB0C             BLT.N    ??Control_5
   1718                {
   1719                 center_average_b +=  center_white[i];
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000000B2   0x8800             LDRH     R0,[R0, #+0]
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   000000B8   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000000BA   0x5C61             LDRB     R1,[R4, R1]
   \   000000BC   0x1840             ADDS     R0,R0,R1
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   000000C2   0x8008             STRH     R0,[R1, #+0]
   1720                }
   \   000000C4   0x1E64             SUBS     R4,R4,#+1
   \   000000C6   0xE7EF             B.N      ??Control_4
   1721                center_average_b = center_average_b /5;
   \                     ??Control_5: (+1)
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000000CC   0x8800             LDRH     R0,[R0, #+0]
   \   000000CE   0x2105             MOVS     R1,#+5
   \   000000D0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   000000D8   0x8008             STRH     R0,[R1, #+0]
   1722                
   1723                center_average = (20*center_average_a + 80*center_average_b)/100;     //   80 0.2     70 0.8
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   000000DE   0x8800             LDRH     R0,[R0, #+0]
   \   000000E0   0x2114             MOVS     R1,#+20
   \   000000E2   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   000000E6   0x8812             LDRH     R2,[R2, #+0]
   \   000000E8   0x2350             MOVS     R3,#+80
   \   000000EA   0x435A             MULS     R2,R3,R2
   \   000000EC   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000F0   0x2164             MOVS     R1,#+100
   \   000000F2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   000000FA   0x6008             STR      R0,[R1, #+0]
   \   000000FC   0xE15E             B.N      ??Control_6
   1724             }
   1725            
   1726            else  if(control_top_whiteline >=37)//入弯前大约1m以上
   \                     ??Control_1: (+1)
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000102   0x8800             LDRH     R0,[R0, #+0]
   \   00000104   0x2825             CMP      R0,#+37
   \   00000106   0xDB55             BLT.N    ??Control_7
   1727             {
   1728                for(i = bottom_whitebase+4;i<=bottom_whitebase+30;i++)
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   0000010C   0x7800             LDRB     R0,[R0, #+0]
   \   0000010E   0x1D00             ADDS     R0,R0,#+4
   \   00000110   0x0004             MOVS     R4,R0
   \                     ??Control_8: (+1)
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000116   0x7800             LDRB     R0,[R0, #+0]
   \   00000118   0x301E             ADDS     R0,R0,#+30
   \   0000011A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000011C   0x42A0             CMP      R0,R4
   \   0000011E   0xDB0C             BLT.N    ??Control_9
   1729               {
   1730                 center_average_a +=  center_white[i];
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000124   0x8800             LDRH     R0,[R0, #+0]
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   0000012A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000012C   0x5C61             LDRB     R1,[R4, R1]
   \   0000012E   0x1840             ADDS     R0,R0,R1
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000134   0x8008             STRH     R0,[R1, #+0]
   1731               }
   \   00000136   0x1C64             ADDS     R4,R4,#+1
   \   00000138   0xE7EB             B.N      ??Control_8
   1732                center_average_a = center_average_a /(27);
   \                     ??Control_9: (+1)
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000013E   0x8800             LDRH     R0,[R0, #+0]
   \   00000140   0x211B             MOVS     R1,#+27
   \   00000142   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000146   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   0000014A   0x8008             STRH     R0,[R1, #+0]
   1733                
   1734                  for(i= control_top_whiteline; i>=control_top_whiteline-3;i--)
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000150   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000154   0x0004             MOVS     R4,R0
   \                     ??Control_10: (+1)
   \   00000156   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000015C   0x8800             LDRH     R0,[R0, #+0]
   \   0000015E   0x1EC0             SUBS     R0,R0,#+3
   \   00000160   0x4284             CMP      R4,R0
   \   00000162   0xDB0C             BLT.N    ??Control_11
   1735                {
   1736                 center_average_b +=  center_white[i];
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000168   0x8800             LDRH     R0,[R0, #+0]
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   0000016E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000170   0x5C61             LDRB     R1,[R4, R1]
   \   00000172   0x1840             ADDS     R0,R0,R1
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000178   0x8008             STRH     R0,[R1, #+0]
   1737                }
   \   0000017A   0x1E64             SUBS     R4,R4,#+1
   \   0000017C   0xE7EB             B.N      ??Control_10
   1738                center_average_b = center_average_b /4;
   \                     ??Control_11: (+1)
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000182   0x8800             LDRH     R0,[R0, #+0]
   \   00000184   0x2104             MOVS     R1,#+4
   \   00000186   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000018A   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   0000018E   0x8008             STRH     R0,[R1, #+0]
   1739                
   1740                center_average = (18*center_average_a+82*center_average_b)/100;     //   80 0.2     70 0.8
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000194   0x8800             LDRH     R0,[R0, #+0]
   \   00000196   0x2112             MOVS     R1,#+18
   \   00000198   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   0000019C   0x8812             LDRH     R2,[R2, #+0]
   \   0000019E   0x2352             MOVS     R3,#+82
   \   000001A0   0x435A             MULS     R2,R3,R2
   \   000001A2   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000001A6   0x2164             MOVS     R1,#+100
   \   000001A8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   000001B0   0x6008             STR      R0,[R1, #+0]
   \   000001B2   0xE103             B.N      ??Control_6
   1741                
   1742             }
   1743           
   1744            else if(control_top_whiteline >=33)//入弯道1m以内
   \                     ??Control_7: (+1)
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   000001B8   0x8800             LDRH     R0,[R0, #+0]
   \   000001BA   0x2821             CMP      R0,#+33
   \   000001BC   0xDB54             BLT.N    ??Control_12
   1745             {
   1746                for(i = bottom_whitebase+4;i<=bottom_whitebase+24;i++)
   \   000001BE   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   000001C2   0x7800             LDRB     R0,[R0, #+0]
   \   000001C4   0x1D00             ADDS     R0,R0,#+4
   \   000001C6   0x0004             MOVS     R4,R0
   \                     ??Control_13: (+1)
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   000001CC   0x7800             LDRB     R0,[R0, #+0]
   \   000001CE   0x3018             ADDS     R0,R0,#+24
   \   000001D0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001D2   0x42A0             CMP      R0,R4
   \   000001D4   0xDB0C             BLT.N    ??Control_14
   1747               {
   1748                 center_average_a +=  center_white[i];
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   000001DA   0x8800             LDRH     R0,[R0, #+0]
   \   000001DC   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   000001E0   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000001E2   0x5C61             LDRB     R1,[R4, R1]
   \   000001E4   0x1840             ADDS     R0,R0,R1
   \   000001E6   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000001EA   0x8008             STRH     R0,[R1, #+0]
   1749               }
   \   000001EC   0x1C64             ADDS     R4,R4,#+1
   \   000001EE   0xE7EB             B.N      ??Control_13
   1750                center_average_a = center_average_a /21;
   \                     ??Control_14: (+1)
   \   000001F0   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   000001F4   0x8800             LDRH     R0,[R0, #+0]
   \   000001F6   0x2115             MOVS     R1,#+21
   \   000001F8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000001FC   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000200   0x8008             STRH     R0,[R1, #+0]
   1751                
   1752                for(i= control_top_whiteline; i>=control_top_whiteline-2;i--)
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000206   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000020A   0x0004             MOVS     R4,R0
   \                     ??Control_15: (+1)
   \   0000020C   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000212   0x8800             LDRH     R0,[R0, #+0]
   \   00000214   0x1E80             SUBS     R0,R0,#+2
   \   00000216   0x4284             CMP      R4,R0
   \   00000218   0xDB0C             BLT.N    ??Control_16
   1753                {
   1754                 center_average_b +=  center_white[i];
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   0000021E   0x8800             LDRH     R0,[R0, #+0]
   \   00000220   0x.... 0x....      LDR.W    R1,??DataTable11_13
   \   00000224   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000226   0x5C61             LDRB     R1,[R4, R1]
   \   00000228   0x1840             ADDS     R0,R0,R1
   \   0000022A   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   0000022E   0x8008             STRH     R0,[R1, #+0]
   1755                }
   \   00000230   0x1E64             SUBS     R4,R4,#+1
   \   00000232   0xE7EB             B.N      ??Control_15
   1756                center_average_b = center_average_b /3;
   \                     ??Control_16: (+1)
   \   00000234   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000238   0x8800             LDRH     R0,[R0, #+0]
   \   0000023A   0x2103             MOVS     R1,#+3
   \   0000023C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000240   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000244   0x8008             STRH     R0,[R1, #+0]
   1757                
   1758                center_average = (16*center_average_a + 84*center_average_b)/100;     //   80 0.2     70 0.8
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000024A   0x8800             LDRH     R0,[R0, #+0]
   \   0000024C   0x0100             LSLS     R0,R0,#+4
   \   0000024E   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000252   0x8809             LDRH     R1,[R1, #+0]
   \   00000254   0x2254             MOVS     R2,#+84
   \   00000256   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000025A   0x2164             MOVS     R1,#+100
   \   0000025C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000260   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000264   0x6008             STR      R0,[R1, #+0]
   \   00000266   0xE0A9             B.N      ??Control_6
   1759             }
   1760            
   1761            else if(control_top_whiteline >=27)//入弯道1m以内
   \                     ??Control_12: (+1)
   \   00000268   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000026C   0x8800             LDRH     R0,[R0, #+0]
   \   0000026E   0x281B             CMP      R0,#+27
   \   00000270   0xDB53             BLT.N    ??Control_17
   1762             {
   1763                for(i = bottom_whitebase+4;i<=bottom_whitebase+15;i++)
   \   00000272   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000276   0x7800             LDRB     R0,[R0, #+0]
   \   00000278   0x1D00             ADDS     R0,R0,#+4
   \   0000027A   0x0004             MOVS     R4,R0
   \                     ??Control_18: (+1)
   \   0000027C   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000280   0x7800             LDRB     R0,[R0, #+0]
   \   00000282   0x300F             ADDS     R0,R0,#+15
   \   00000284   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000286   0x42A0             CMP      R0,R4
   \   00000288   0xDB0B             BLT.N    ??Control_19
   1764               {
   1765                 center_average_a +=  center_white[i];
   \   0000028A   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000028E   0x8800             LDRH     R0,[R0, #+0]
   \   00000290   0x....             LDR.N    R1,??DataTable11_13
   \   00000292   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000294   0x5C61             LDRB     R1,[R4, R1]
   \   00000296   0x1840             ADDS     R0,R0,R1
   \   00000298   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   0000029C   0x8008             STRH     R0,[R1, #+0]
   1766               }
   \   0000029E   0x1C64             ADDS     R4,R4,#+1
   \   000002A0   0xE7EC             B.N      ??Control_18
   1767                center_average_a = center_average_a /12;
   \                     ??Control_19: (+1)
   \   000002A2   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   000002A6   0x8800             LDRH     R0,[R0, #+0]
   \   000002A8   0x210C             MOVS     R1,#+12
   \   000002AA   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002AE   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   000002B2   0x8008             STRH     R0,[R1, #+0]
   1768                
   1769                for(i= control_top_whiteline; i>=control_top_whiteline-2;i--)
   \   000002B4   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   000002B8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002BC   0x0004             MOVS     R4,R0
   \                     ??Control_20: (+1)
   \   000002BE   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002C0   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   000002C4   0x8800             LDRH     R0,[R0, #+0]
   \   000002C6   0x1E80             SUBS     R0,R0,#+2
   \   000002C8   0x4284             CMP      R4,R0
   \   000002CA   0xDB0B             BLT.N    ??Control_21
   1770                {
   1771                 center_average_b +=  center_white[i];
   \   000002CC   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000002D0   0x8800             LDRH     R0,[R0, #+0]
   \   000002D2   0x....             LDR.N    R1,??DataTable11_13
   \   000002D4   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   000002D6   0x5C61             LDRB     R1,[R4, R1]
   \   000002D8   0x1840             ADDS     R0,R0,R1
   \   000002DA   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   000002DE   0x8008             STRH     R0,[R1, #+0]
   1772                }
   \   000002E0   0x1E64             SUBS     R4,R4,#+1
   \   000002E2   0xE7EC             B.N      ??Control_20
   1773                center_average_b = center_average_b /3;
   \                     ??Control_21: (+1)
   \   000002E4   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000002E8   0x8800             LDRH     R0,[R0, #+0]
   \   000002EA   0x2103             MOVS     R1,#+3
   \   000002EC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002F0   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   000002F4   0x8008             STRH     R0,[R1, #+0]
   1774                
   1775                center_average = (14*center_average_a + 86*center_average_b)/100;     //   80 0.2     70 0.8
   \   000002F6   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   000002FA   0x8800             LDRH     R0,[R0, #+0]
   \   000002FC   0x210E             MOVS     R1,#+14
   \   000002FE   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   00000302   0x8812             LDRH     R2,[R2, #+0]
   \   00000304   0x2356             MOVS     R3,#+86
   \   00000306   0x435A             MULS     R2,R3,R2
   \   00000308   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   0000030C   0x2164             MOVS     R1,#+100
   \   0000030E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000312   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   00000316   0x6008             STR      R0,[R1, #+0]
   \   00000318   0xE050             B.N      ??Control_6
   1776             }
   1777            else   //
   1778               {
   1779                for(i = bottom_whitebase+4;i<=bottom_whitebase+10;i++)
   \                     ??Control_17: (+1)
   \   0000031A   0x....             LDR.N    R0,??DataTable11_11
   \   0000031C   0x7800             LDRB     R0,[R0, #+0]
   \   0000031E   0x1D00             ADDS     R0,R0,#+4
   \   00000320   0x0004             MOVS     R4,R0
   \                     ??Control_22: (+1)
   \   00000322   0x....             LDR.N    R0,??DataTable11_11
   \   00000324   0x7800             LDRB     R0,[R0, #+0]
   \   00000326   0x300A             ADDS     R0,R0,#+10
   \   00000328   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000032A   0x42A0             CMP      R0,R4
   \   0000032C   0xDB0B             BLT.N    ??Control_23
   1780               {
   1781                 center_average_a +=  center_white[i];
   \   0000032E   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   00000332   0x8800             LDRH     R0,[R0, #+0]
   \   00000334   0x....             LDR.N    R1,??DataTable11_13
   \   00000336   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000338   0x5C61             LDRB     R1,[R4, R1]
   \   0000033A   0x1840             ADDS     R0,R0,R1
   \   0000033C   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000340   0x8008             STRH     R0,[R1, #+0]
   1782               }
   \   00000342   0x1C64             ADDS     R4,R4,#+1
   \   00000344   0xE7ED             B.N      ??Control_22
   1783                center_average_a = center_average_a /7;
   \                     ??Control_23: (+1)
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000034A   0x8800             LDRH     R0,[R0, #+0]
   \   0000034C   0x2107             MOVS     R1,#+7
   \   0000034E   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000352   0x.... 0x....      LDR.W    R1,??DataTable12_4
   \   00000356   0x8008             STRH     R0,[R1, #+0]
   1784                
   1785                for(i= control_top_whiteline; i>=control_top_whiteline-2;i--)
   \   00000358   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000035C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000360   0x0004             MOVS     R4,R0
   \                     ??Control_24: (+1)
   \   00000362   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000364   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000368   0x8800             LDRH     R0,[R0, #+0]
   \   0000036A   0x1E80             SUBS     R0,R0,#+2
   \   0000036C   0x4284             CMP      R4,R0
   \   0000036E   0xDB0B             BLT.N    ??Control_25
   1786                {
   1787                 center_average_b +=  center_white[i];
   \   00000370   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000374   0x8800             LDRH     R0,[R0, #+0]
   \   00000376   0x....             LDR.N    R1,??DataTable11_13
   \   00000378   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000037A   0x5C61             LDRB     R1,[R4, R1]
   \   0000037C   0x1840             ADDS     R0,R0,R1
   \   0000037E   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000382   0x8008             STRH     R0,[R1, #+0]
   1788                }
   \   00000384   0x1E64             SUBS     R4,R4,#+1
   \   00000386   0xE7EC             B.N      ??Control_24
   1789                center_average_b = center_average_b /3;
   \                     ??Control_25: (+1)
   \   00000388   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   0000038C   0x8800             LDRH     R0,[R0, #+0]
   \   0000038E   0x2103             MOVS     R1,#+3
   \   00000390   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000394   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   00000398   0x8008             STRH     R0,[R1, #+0]
   1790                
   1791                center_average = (12*center_average_a+88*center_average_b)/100;
   \   0000039A   0x.... 0x....      LDR.W    R0,??DataTable12_4
   \   0000039E   0x8800             LDRH     R0,[R0, #+0]
   \   000003A0   0x210C             MOVS     R1,#+12
   \   000003A2   0x.... 0x....      LDR.W    R2,??DataTable12_5
   \   000003A6   0x8812             LDRH     R2,[R2, #+0]
   \   000003A8   0x2358             MOVS     R3,#+88
   \   000003AA   0x435A             MULS     R2,R3,R2
   \   000003AC   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000003B0   0x2164             MOVS     R1,#+100
   \   000003B2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000003B6   0x.... 0x....      LDR.W    R1,??DataTable12_10
   \   000003BA   0x6008             STR      R0,[R1, #+0]
   1792                }
   1793              refer_error = MID - center_average;  
   \                     ??Control_6: (+1)
   \   000003BC   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000003C0   0x6800             LDR      R0,[R0, #+0]
   \   000003C2   0xF1D0 0x004E      RSBS     R0,R0,#+78
   \   000003C6   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   000003CA   0x8008             STRH     R0,[R1, #+0]
   1794              //归中的error
   1795            if(abs(refer_error)<zhongjian)
   \   000003CC   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000003D0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003D4   0x.... 0x....      BL       abs
   \   000003D8   0x.... 0x....      LDR.W    R1,??DataTable12_14
   \   000003DC   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000003E0   0x4288             CMP      R0,R1
   \   000003E2   0xDA0C             BGE.N    ??Control_26
   1796            { lcd_ref_p= lcd_ref_p1;lcd_ref_d=lcd_ref_d1;}
   \   000003E4   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   000003E8   0x8800             LDRH     R0,[R0, #+0]
   \   000003EA   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   000003EE   0x8008             STRH     R0,[R1, #+0]
   \   000003F0   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000003F4   0x8800             LDRH     R0,[R0, #+0]
   \   000003F6   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   000003FA   0x8008             STRH     R0,[R1, #+0]
   \   000003FC   0xE00B             B.N      ??Control_27
   1797            else
   1798            { lcd_ref_p= lcd_ref_p2;lcd_ref_d=lcd_ref_d2;}  
   \                     ??Control_26: (+1)
   \   000003FE   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   00000402   0x8800             LDRH     R0,[R0, #+0]
   \   00000404   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   00000408   0x8008             STRH     R0,[R1, #+0]
   \   0000040A   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   0000040E   0x8800             LDRH     R0,[R0, #+0]
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000414   0x8008             STRH     R0,[R1, #+0]
   1799            if(barrier_l==1||barrier_r==1) { lcd_ref_p= lcd_ref_p2+30;lcd_ref_d=lcd_ref_d2+20;}
   \                     ??Control_27: (+1)
   \   00000416   0x.... 0x....      LDR.W    R0,??DataTable12_21
   \   0000041A   0x7800             LDRB     R0,[R0, #+0]
   \   0000041C   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   00000420   0x7809             LDRB     R1,[R1, #+0]
   \   00000422   0x4308             ORRS     R0,R1,R0
   \   00000424   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000426   0x2800             CMP      R0,#+0
   \   00000428   0xD00D             BEQ.N    ??Control_28
   \   0000042A   0x.... 0x....      LDR.W    R0,??DataTable12_19
   \   0000042E   0x8800             LDRH     R0,[R0, #+0]
   \   00000430   0x301E             ADDS     R0,R0,#+30
   \   00000432   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   00000436   0x8008             STRH     R0,[R1, #+0]
   \   00000438   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   0000043C   0x8800             LDRH     R0,[R0, #+0]
   \   0000043E   0x3014             ADDS     R0,R0,#+20
   \   00000440   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000444   0x8008             STRH     R0,[R1, #+0]
   1800            if( direction == 2){ lcd_ref_p= lcd_ref_p1+20;lcd_ref_d=lcd_ref_d1;}
   \                     ??Control_28: (+1)
   \   00000446   0x.... 0x....      LDR.W    R0,??DataTable12_23
   \   0000044A   0x7800             LDRB     R0,[R0, #+0]
   \   0000044C   0x2802             CMP      R0,#+2
   \   0000044E   0xD10C             BNE.N    ??Control_29
   \   00000450   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   00000454   0x8800             LDRH     R0,[R0, #+0]
   \   00000456   0x3014             ADDS     R0,R0,#+20
   \   00000458   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   0000045C   0x8008             STRH     R0,[R1, #+0]
   \   0000045E   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000462   0x8800             LDRH     R0,[R0, #+0]
   \   00000464   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   00000468   0x8008             STRH     R0,[R1, #+0]
   1801            if(turn_l==1||turn_r==1)
   \                     ??Control_29: (+1)
   \   0000046A   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   0000046E   0x7800             LDRB     R0,[R0, #+0]
   \   00000470   0x.... 0x....      LDR.W    R1,??DataTable12_25
   \   00000474   0x7809             LDRB     R1,[R1, #+0]
   \   00000476   0x4308             ORRS     R0,R1,R0
   \   00000478   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000047A   0x2800             CMP      R0,#+0
   \   0000047C   0xD008             BEQ.N    ??Control_30
   1802           { lcd_ref_p= 64;lcd_ref_d=300;}
   \   0000047E   0x2040             MOVS     R0,#+64
   \   00000480   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   00000484   0x8008             STRH     R0,[R1, #+0]
   \   00000486   0xF44F 0x7096      MOV      R0,#+300
   \   0000048A   0x.... 0x....      LDR.W    R1,??DataTable12_18
   \   0000048E   0x8008             STRH     R0,[R1, #+0]
   1803            
   1804              error_servo_ref_p = 1*f_abs16(center_average_b-MID)/8 + lcd_ref_p + 1*(ROW - control_top_whiteline)/2;  //增加这个p有利于出弯道内切    3/13    1/2
   \                     ??Control_30: (+1)
   \   00000490   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000494   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000498   0x384E             SUBS     R0,R0,#+78
   \   0000049A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000049C   0x.... 0x....      BL       f_abs16
   \   000004A0   0x2108             MOVS     R1,#+8
   \   000004A2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000004A6   0x.... 0x....      LDR.W    R1,??DataTable12_16
   \   000004AA   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000004AE   0x1808             ADDS     R0,R1,R0
   \   000004B0   0x.... 0x....      LDR.W    R1,??DataTable12_13
   \   000004B4   0x8809             LDRH     R1,[R1, #+0]
   \   000004B6   0xF1D1 0x0132      RSBS     R1,R1,#+50
   \   000004BA   0x2202             MOVS     R2,#+2
   \   000004BC   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000004C0   0x1808             ADDS     R0,R1,R0
   \   000004C2   0x.... 0x....      LDR.W    R1,??DataTable12_11
   \   000004C6   0x8008             STRH     R0,[R1, #+0]
   1805              error_servo_ref_d =  lcd_ref_d + f_abs16(center_average-MID)/20;//1*(ROW-control_top_whiteline)/16+    
   \   000004C8   0x.... 0x....      LDR.W    R0,??DataTable12_18
   \   000004CC   0xF9B0 0x6000      LDRSH    R6,[R0, #+0]
   \   000004D0   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   000004D4   0x6800             LDR      R0,[R0, #+0]
   \   000004D6   0x384E             SUBS     R0,R0,#+78
   \   000004D8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000004DA   0x.... 0x....      BL       f_abs16
   \   000004DE   0x2114             MOVS     R1,#+20
   \   000004E0   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000004E4   0x1980             ADDS     R0,R0,R6
   \   000004E6   0x.... 0x....      LDR.W    R1,??DataTable12_12
   \   000004EA   0x8008             STRH     R0,[R1, #+0]
   1806               
   1807             angle_temp=-(int16)( (error_servo_ref_p * refer_error + error_servo_ref_d * (refer_error - re_refer_error)) / 10);//     
   \   000004EC   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   000004F0   0x8800             LDRH     R0,[R0, #+0]
   \   000004F2   0x.... 0x....      LDR.W    R1,??DataTable12_6
   \   000004F6   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   000004FA   0x.... 0x....      LDR.W    R2,??DataTable12_12
   \   000004FE   0x8812             LDRH     R2,[R2, #+0]
   \   00000500   0x.... 0x....      LDR.W    R3,??DataTable12_6
   \   00000504   0xF9B3 0x3000      LDRSH    R3,[R3, #+0]
   \   00000508   0x.... 0x....      LDR.W    R6,??DataTable12_26
   \   0000050C   0xF9B6 0x6000      LDRSH    R6,[R6, #+0]
   \   00000510   0x1B9B             SUBS     R3,R3,R6
   \   00000512   0x435A             MULS     R2,R3,R2
   \   00000514   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000518   0x210A             MOVS     R1,#+10
   \   0000051A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000051E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000520   0x4240             RSBS     R0,R0,#+0
   \   00000522   0x0005             MOVS     R5,R0
   \   00000524   0xE004             B.N      ??Control_31
   1808           } 
   1809           
   1810           else
   1811             angle_temp = re_angle;
   \                     ??Control_0: (+1)
   \   00000526   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   0000052A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000052E   0x0005             MOVS     R5,R0
   1812           
   1813           
   1814           if(turn_l==1&&control_top_whiteline<31)
   \                     ??Control_31: (+1)
   \   00000530   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   00000534   0x7800             LDRB     R0,[R0, #+0]
   \   00000536   0x2800             CMP      R0,#+0
   \   00000538   0xD012             BEQ.N    ??Control_32
   \   0000053A   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000053E   0x8800             LDRH     R0,[R0, #+0]
   \   00000540   0x281F             CMP      R0,#+31
   \   00000542   0xDA0D             BGE.N    ??Control_32
   1815          {
   1816                 
   1817                   angle_temp=-ft1;
   \   00000544   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   00000548   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000054C   0x4240             RSBS     R0,R0,#+0
   \   0000054E   0x0005             MOVS     R5,R0
   1818           
   1819                   if(angle_temp<-1600)
   \   00000550   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000552   0xF515 0x6FC8      CMN      R5,#+1600
   \   00000556   0xDA19             BGE.N    ??Control_33
   1820                     angle_temp=-1600;
   \   00000558   0x.... 0x....      LDR.W    R0,??DataTable12_28  ;; 0xfffff9c0
   \   0000055C   0x0005             MOVS     R5,R0
   \   0000055E   0xE015             B.N      ??Control_33
   1821           
   1822          }
   1823          
   1824          else if(turn_r==1&&control_top_whiteline<31)
   \                     ??Control_32: (+1)
   \   00000560   0x.... 0x....      LDR.W    R0,??DataTable12_25
   \   00000564   0x7800             LDRB     R0,[R0, #+0]
   \   00000566   0x2800             CMP      R0,#+0
   \   00000568   0xD010             BEQ.N    ??Control_33
   \   0000056A   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000056E   0x8800             LDRH     R0,[R0, #+0]
   \   00000570   0x281F             CMP      R0,#+31
   \   00000572   0xDA0B             BGE.N    ??Control_33
   1825          {
   1826            
   1827                   angle_temp=ft1;
   \   00000574   0x.... 0x....      LDR.W    R0,??DataTable12_27
   \   00000578   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000057C   0x0005             MOVS     R5,R0
   1828                   
   1829           if(angle_temp>1600)
   \   0000057E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000580   0xF5B5 0x6FC8      CMP      R5,#+1600
   \   00000584   0xDD02             BLE.N    ??Control_33
   1830                angle_temp=1600; 
   \   00000586   0xF44F 0x60C8      MOV      R0,#+1600
   \   0000058A   0x0005             MOVS     R5,R0
   1831                  
   1832          }
   1833          
   1834          if(turn_l==0&&turn_r==0)
   \                     ??Control_33: (+1)
   \   0000058C   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   00000590   0x7800             LDRB     R0,[R0, #+0]
   \   00000592   0x.... 0x....      LDR.W    R1,??DataTable12_25
   \   00000596   0x7809             LDRB     R1,[R1, #+0]
   \   00000598   0x4308             ORRS     R0,R1,R0
   \   0000059A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000059C   0x2800             CMP      R0,#+0
   \   0000059E   0xD103             BNE.N    ??Control_34
   1835          {
   1836             record_flag=0; 
   \   000005A0   0x2000             MOVS     R0,#+0
   \   000005A2   0x.... 0x....      LDR.W    R1,??DataTable12_29
   \   000005A6   0x7008             STRB     R0,[R1, #+0]
   1837          }
   1838          
   1839           if(angle_temp>big)
   \                     ??Control_34: (+1)
   \   000005A8   0x.... 0x....      LDR.W    R0,??DataTable12_30
   \   000005AC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005B0   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000005B2   0x42A8             CMP      R0,R5
   \   000005B4   0xDA04             BGE.N    ??Control_35
   1840                angle_temp=big;
   \   000005B6   0x.... 0x....      LDR.W    R0,??DataTable12_30
   \   000005BA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005BE   0x0005             MOVS     R5,R0
   1841           if(angle_temp<-big)
   \                     ??Control_35: (+1)
   \   000005C0   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   000005C2   0x.... 0x....      LDR.W    R0,??DataTable12_30
   \   000005C6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005CA   0x42C5             CMN      R5,R0
   \   000005CC   0xDA05             BGE.N    ??Control_36
   1842                angle_temp=-big; 
   \   000005CE   0x.... 0x....      LDR.W    R0,??DataTable12_30
   \   000005D2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000005D6   0x4240             RSBS     R0,R0,#+0
   \   000005D8   0x0005             MOVS     R5,R0
   1843           
   1844           angle=angle_temp;
   \                     ??Control_36: (+1)
   \   000005DA   0x.... 0x....      LDR.W    R0,??DataTable12_8
   \   000005DE   0x8005             STRH     R5,[R0, #+0]
   1845           /*
   1846           if(jianshu==1)/////turn_l==1||turn_r==1                   RealSpeed
   1847           { 
   1848           if( RealSpeed>Speed_set+30){Speed=Speed_set-ft-50;}// acce_static=ACCE_STATIC-fanting-80;
   1849           else  if( RealSpeed>(Speed_set+10)){Speed=Speed_set-ft-40;}// acce_static=ACCE_STATIC-fanting-60;
   1850           else  if( RealSpeed>(Speed_set)){ Speed=Speed_set-ft-30;}//acce_static=ACCE_STATIC-fanting-40;
   1851            else  if( RealSpeed>(Speed_set-20)){Speed=Speed_set-ft-25;}//  acce_static=ACCE_STATIC-fanting-20;
   1852           else  if( RealSpeed>(Speed_set)-30){ Speed=Speed_set-ft-20;}//acce_static=ACCE_STATIC-fanting-10; 
   1853           else { Speed=Speed_set-ft-15;}   // acce_static=ACCE_STATIC-fanting;
   1854           }
   1855          else  Speed=Speed_set;
   1856           */
   1857          /*  if( begin==0&&liu==1&&feng==1 )acce_static=ACCE_STATIC-1000;
   1858          else  if( begin==0&&liu==0&&feng==1)acce_static=ACCE_STATIC-50;
   1859          else  if( begin==0&&liu==1&&feng==0)acce_static=ACCE_STATIC-150;
   1860          else  if( begin==0&&liu==0&&feng==0)acce_static=ACCE_STATIC;
   1861          */ 
   1862           /*
   1863          if(jianshu==0)
   1864          {
   1865           if( RealSpeed>Speed_set+10) 
   1866             {
   1867            if(abs(refer_error)>45)Speed=Speed_set-40;
   1868              else  if(abs(refer_error)>40)Speed=Speed_set-30;
   1869                else    if(abs(refer_error)>30)Speed=Speed_set-20; 
   1870                  else    if(abs(refer_error)>25)Speed=Speed_set-10; 
   1871                    else   if(abs(refer_error)>15)Speed=Speed_set;
   1872                      else   if(abs(refer_error)>10)Speed=Speed_set+10;
   1873                         else   Speed=Speed_set+15; 
   1874               }
   1875          else 
   1876            if( RealSpeed>Speed_set) 
   1877           {
   1878            if(abs(refer_error)>45)Speed=Speed_set-30;
   1879              else  if(abs(refer_error)>40)Speed=Speed_set-20;
   1880                else    if(abs(refer_error)>30)Speed=Speed_set-10; 
   1881                  else    if(abs(refer_error)>25)Speed=Speed_set; 
   1882                    else   if(abs(refer_error)>15)Speed=Speed_set+5;
   1883                      else   if(abs(refer_error)>10)Speed=Speed_set+15;
   1884                         else   Speed=Speed_set+25; 
   1885                }  
   1886           else 
   1887            if( RealSpeed>Speed_set-15) 
   1888           {
   1889            if(abs(refer_error)>45)Speed=Speed_set-20;
   1890              else  if(abs(refer_error)>40)Speed=Speed_set-10;
   1891                else    if(abs(refer_error)>30)Speed=Speed_set-5; 
   1892                  else    if(abs(refer_error)>25)Speed=Speed_set; 
   1893                    else   if(abs(refer_error)>15)Speed=Speed_set+10;
   1894                      else   if(abs(refer_error)>10)Speed=Speed_set+20;
   1895                         else   Speed=Speed_set+30; 
   1896                }  
   1897           else 
   1898            if( RealSpeed>Speed_set-30) 
   1899           {
   1900            if(abs(refer_error)>45)Speed=Speed_set-15;
   1901              else  if(abs(refer_error)>40)Speed=Speed_set-10;
   1902                else    if(abs(refer_error)>30)Speed=Speed_set; 
   1903                  else    if(abs(refer_error)>25)Speed=Speed_set+5; 
   1904                    else   if(abs(refer_error)>15)Speed=Speed_set+15;
   1905                      else   if(abs(refer_error)>10)Speed=Speed_set+25;
   1906                         else   Speed=Speed_set+35; 
   1907                } 
   1908           else
   1909           {
   1910            if(abs(refer_error)>45)Speed=Speed_set-10;
   1911              else  if(abs(refer_error)>40)Speed=Speed_set-5;
   1912                else    if(abs(refer_error)>30)Speed=Speed_set+5; 
   1913                  else    if(abs(refer_error)>25)Speed=Speed_set+15; 
   1914                    else   if(abs(refer_error)>15)Speed=Speed_set+25;
   1915                      else   if(abs(refer_error)>10)Speed=Speed_set+35;
   1916                         else   Speed=Speed_set+45; 
   1917                }   
   1918          }
   1919           */
   1920          
   1921          
   1922          /*  if( direction == 1 )
   1923           {
   1924             if(ramp_flag==1 )
   1925           { 
   1926             Speed=Speed_set+45;  
   1927           gpio_set (PORTB, 10, 0);
   1928           }
   1929             else 
   1930             {
   1931             Speed=Speed_set+45; 
   1932             }
   1933           }
   1934            else  if( direction == 2 )
   1935           {   
   1936             acce_static=ACCE_STATIC-40;
   1937           }
   1938           
   1939           else  if( direction ==3||direction == 5||direction == 6||direction == 4 )
   1940           {
   1941              acce_static=ACCE_STATIC+30;    
   1942           }
   1943           else 
   1944              acce_static=ACCE_STATIC; 
   1945           //
   1946          */
   1947           // if(ramp_flag==1 )gpio_set (PORTB, 10, 0);
   1948          /* 
   1949           if( direction == 1 )gpio_set (PORTB, 10, 0);
   1950           else  gpio_set (PORTB, 10,1);
   1951          
   1952            if(barrier_l==1||barrier_r==1) 
   1953               gpio_set (PORTB, 10, 0);
   1954           else 
   1955             gpio_set (PORTB, 10,1);
   1956            */
   1957           
   1958           if(turn_l==0&&turn_r==0)
   \   000005E0   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   000005E4   0x7800             LDRB     R0,[R0, #+0]
   \   000005E6   0x.... 0x....      LDR.W    R1,??DataTable12_25
   \   000005EA   0x7809             LDRB     R1,[R1, #+0]
   \   000005EC   0x4308             ORRS     R0,R1,R0
   \   000005EE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000005F0   0x2800             CMP      R0,#+0
   \   000005F2   0xD105             BNE.N    ??Control_37
   1959           {
   1960              re_refer_error =refer_error;
   \   000005F4   0x.... 0x....      LDR.W    R0,??DataTable12_6
   \   000005F8   0x8800             LDRH     R0,[R0, #+0]
   \   000005FA   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   000005FE   0x8008             STRH     R0,[R1, #+0]
   1961           }
   1962           
   1963          }
   \                     ??Control_37: (+1)
   \   00000600   0xBD70             POP      {R4-R6,PC}       ;; return
   1964          
   1965          
   1966           

   \                                 In section .data, align 4
   1967           float close=1.0;
   \                     close:
   \   00000000   0x3F800000         DC32 3F800000H
   1968           

   \                                 In section .text, align 2, keep-with-next
   1969          void barrier( )
   1970          {
   \                     barrier: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   1971           uint16 tadge_l=0,tadge_r=0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
   1972           uint16 i=0;
   \   00000006   0x2600             MOVS     R6,#+0
   1973           int16 record=0;
   \   00000008   0x2700             MOVS     R7,#+0
   1974          if(control_top_whiteline>20)
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000000E   0x8800             LDRH     R0,[R0, #+0]
   \   00000010   0x2815             CMP      R0,#+21
   \   00000012   0xF2C0 0x81E3      BLT.W    ??barrier_0
   1975          {
   1976          	for(i = bottom_whitebase+3;i<control_top_whiteline-3;i++)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable14
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x1CC0             ADDS     R0,R0,#+3
   \   0000001E   0x0006             MOVS     R6,R0
   \                     ??barrier_1: (+1)
   \   00000020   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0x1EC0             SUBS     R0,R0,#+3
   \   0000002A   0x4286             CMP      R6,R0
   \   0000002C   0xDA5F             BGE.N    ??barrier_2
   1977          {
   1978          	if( f_abs16( left_black[i]-left_black[i-1] )<4&&f_abs16(left_black[i]-left_black[i-2])<4&&f_abs16(left_black[i]-left_black[i-3])<4&&left_black[i+1]-left_black[i]>8&&left_black[i+2]-left_black[i]>7&&left_black[i+3]-left_black[i]>6)
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000032   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000034   0x5C30             LDRB     R0,[R6, R0]
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable15
   \   0000003A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000003C   0x1871             ADDS     R1,R6,R1
   \   0000003E   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000042   0x1A40             SUBS     R0,R0,R1
   \   00000044   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000046   0x.... 0x....      BL       f_abs16
   \   0000004A   0x2804             CMP      R0,#+4
   \   0000004C   0xDA48             BGE.N    ??barrier_3
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000052   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000054   0x5C30             LDRB     R0,[R6, R0]
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable15
   \   0000005A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000005C   0x1871             ADDS     R1,R6,R1
   \   0000005E   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000062   0x1A40             SUBS     R0,R0,R1
   \   00000064   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000066   0x.... 0x....      BL       f_abs16
   \   0000006A   0x2804             CMP      R0,#+4
   \   0000006C   0xDA38             BGE.N    ??barrier_3
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000072   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000074   0x5C30             LDRB     R0,[R6, R0]
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable15
   \   0000007A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000007C   0x1871             ADDS     R1,R6,R1
   \   0000007E   0xF811 0x1C03      LDRB     R1,[R1, #-3]
   \   00000082   0x1A40             SUBS     R0,R0,R1
   \   00000084   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000086   0x.... 0x....      BL       f_abs16
   \   0000008A   0x2804             CMP      R0,#+4
   \   0000008C   0xDA28             BGE.N    ??barrier_3
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000092   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000094   0x1830             ADDS     R0,R6,R0
   \   00000096   0x7840             LDRB     R0,[R0, #+1]
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable15
   \   0000009C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000009E   0x5C71             LDRB     R1,[R6, R1]
   \   000000A0   0x1A40             SUBS     R0,R0,R1
   \   000000A2   0x2809             CMP      R0,#+9
   \   000000A4   0xDB1C             BLT.N    ??barrier_3
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable15
   \   000000AA   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000AC   0x1830             ADDS     R0,R6,R0
   \   000000AE   0x7880             LDRB     R0,[R0, #+2]
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable15
   \   000000B4   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000B6   0x5C71             LDRB     R1,[R6, R1]
   \   000000B8   0x1A40             SUBS     R0,R0,R1
   \   000000BA   0x2808             CMP      R0,#+8
   \   000000BC   0xDB10             BLT.N    ??barrier_3
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable15
   \   000000C2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000C4   0x1830             ADDS     R0,R6,R0
   \   000000C6   0x78C0             LDRB     R0,[R0, #+3]
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable15
   \   000000CC   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000CE   0x5C71             LDRB     R1,[R6, R1]
   \   000000D0   0x1A40             SUBS     R0,R0,R1
   \   000000D2   0x2807             CMP      R0,#+7
   \   000000D4   0xDB04             BLT.N    ??barrier_3
   1979          {
   1980          	barrier_l=1;
   \   000000D6   0x2001             MOVS     R0,#+1
   \   000000D8   0x....             LDR.N    R1,??DataTable12_21
   \   000000DA   0x7008             STRB     R0,[R1, #+0]
   1981                  //barrier_r=0;
   1982                  tadge_l=i;
   \   000000DC   0x0034             MOVS     R4,R6
   1983                  break;
   \   000000DE   0xE006             B.N      ??barrier_2
   1984          }
   1985          
   1986          else
   1987          {
   1988          	barrier_l=0;
   \                     ??barrier_3: (+1)
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x....             LDR.N    R1,??DataTable12_21
   \   000000E4   0x7008             STRB     R0,[R1, #+0]
   1989                  //barrier_r=0;
   1990                  tadge_l=0;
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x0004             MOVS     R4,R0
   1991          }
   1992          
   1993          }
   \   000000EA   0x1C76             ADDS     R6,R6,#+1
   \   000000EC   0xE798             B.N      ??barrier_1
   1994          
   1995          
   1996          for(i = bottom_whitebase+3;i<control_top_whiteline-3;i++)
   \                     ??barrier_2: (+1)
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000000F2   0x7800             LDRB     R0,[R0, #+0]
   \   000000F4   0x1CC0             ADDS     R0,R0,#+3
   \   000000F6   0x0006             MOVS     R6,R0
   \                     ??barrier_4: (+1)
   \   000000F8   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000FA   0x....             LDR.N    R0,??DataTable12_13
   \   000000FC   0x8800             LDRH     R0,[R0, #+0]
   \   000000FE   0x1EC0             SUBS     R0,R0,#+3
   \   00000100   0x4286             CMP      R6,R0
   \   00000102   0xDA53             BGE.N    ??barrier_5
   1997          {
   1998          	
   1999          
   2000           if(f_abs16(right_black[i]-right_black[i-1])<4&&f_abs16(right_black[i]-right_black[i-2])<4&&f_abs16(right_black[i]-right_black[i-3])<4&&right_black[i]-right_black[i+1]>8&&right_black[i]-right_black[i+2]>7&&right_black[i]-right_black[i+3]>6)
   \   00000104   0x....             LDR.N    R0,??DataTable12
   \   00000106   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000108   0x5C30             LDRB     R0,[R6, R0]
   \   0000010A   0x....             LDR.N    R1,??DataTable12
   \   0000010C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000010E   0x1871             ADDS     R1,R6,R1
   \   00000110   0xF811 0x1C01      LDRB     R1,[R1, #-1]
   \   00000114   0x1A40             SUBS     R0,R0,R1
   \   00000116   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000118   0x.... 0x....      BL       f_abs16
   \   0000011C   0x2804             CMP      R0,#+4
   \   0000011E   0xDA3E             BGE.N    ??barrier_6
   \   00000120   0x....             LDR.N    R0,??DataTable12
   \   00000122   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000124   0x5C30             LDRB     R0,[R6, R0]
   \   00000126   0x....             LDR.N    R1,??DataTable12
   \   00000128   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000012A   0x1871             ADDS     R1,R6,R1
   \   0000012C   0xF811 0x1C02      LDRB     R1,[R1, #-2]
   \   00000130   0x1A40             SUBS     R0,R0,R1
   \   00000132   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000134   0x.... 0x....      BL       f_abs16
   \   00000138   0x2804             CMP      R0,#+4
   \   0000013A   0xDA30             BGE.N    ??barrier_6
   \   0000013C   0x....             LDR.N    R0,??DataTable12
   \   0000013E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000140   0x5C30             LDRB     R0,[R6, R0]
   \   00000142   0x....             LDR.N    R1,??DataTable12
   \   00000144   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000146   0x1871             ADDS     R1,R6,R1
   \   00000148   0xF811 0x1C03      LDRB     R1,[R1, #-3]
   \   0000014C   0x1A40             SUBS     R0,R0,R1
   \   0000014E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000150   0x.... 0x....      BL       f_abs16
   \   00000154   0x2804             CMP      R0,#+4
   \   00000156   0xDA22             BGE.N    ??barrier_6
   \   00000158   0x....             LDR.N    R0,??DataTable12
   \   0000015A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000015C   0x5C30             LDRB     R0,[R6, R0]
   \   0000015E   0x....             LDR.N    R1,??DataTable12
   \   00000160   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000162   0x1871             ADDS     R1,R6,R1
   \   00000164   0x7849             LDRB     R1,[R1, #+1]
   \   00000166   0x1A40             SUBS     R0,R0,R1
   \   00000168   0x2809             CMP      R0,#+9
   \   0000016A   0xDB18             BLT.N    ??barrier_6
   \   0000016C   0x....             LDR.N    R0,??DataTable12
   \   0000016E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000170   0x5C30             LDRB     R0,[R6, R0]
   \   00000172   0x....             LDR.N    R1,??DataTable12
   \   00000174   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000176   0x1871             ADDS     R1,R6,R1
   \   00000178   0x7889             LDRB     R1,[R1, #+2]
   \   0000017A   0x1A40             SUBS     R0,R0,R1
   \   0000017C   0x2808             CMP      R0,#+8
   \   0000017E   0xDB0E             BLT.N    ??barrier_6
   \   00000180   0x....             LDR.N    R0,??DataTable12
   \   00000182   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000184   0x5C30             LDRB     R0,[R6, R0]
   \   00000186   0x....             LDR.N    R1,??DataTable12
   \   00000188   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000018A   0x1871             ADDS     R1,R6,R1
   \   0000018C   0x78C9             LDRB     R1,[R1, #+3]
   \   0000018E   0x1A40             SUBS     R0,R0,R1
   \   00000190   0x2807             CMP      R0,#+7
   \   00000192   0xDB04             BLT.N    ??barrier_6
   2001          {
   2002          	barrier_r=1;
   \   00000194   0x2001             MOVS     R0,#+1
   \   00000196   0x....             LDR.N    R1,??DataTable12_22
   \   00000198   0x7008             STRB     R0,[R1, #+0]
   2003                  //barrier_l=0;
   2004                  tadge_r=i;
   \   0000019A   0x0035             MOVS     R5,R6
   2005                  break;
   \   0000019C   0xE006             B.N      ??barrier_5
   2006          }
   2007          
   2008          else
   2009          {
   2010          	barrier_r=0;
   \                     ??barrier_6: (+1)
   \   0000019E   0x2000             MOVS     R0,#+0
   \   000001A0   0x....             LDR.N    R1,??DataTable12_22
   \   000001A2   0x7008             STRB     R0,[R1, #+0]
   2011                   tadge_r=0;
   \   000001A4   0x2000             MOVS     R0,#+0
   \   000001A6   0x0005             MOVS     R5,R0
   2012                  //barrier_r=0;
   2013          }
   2014          
   2015          
   2016          }
   \   000001A8   0x1C76             ADDS     R6,R6,#+1
   \   000001AA   0xE7A5             B.N      ??barrier_4
   2017          
   2018          if(barrier_l==1&&barrier_r==0)
   \                     ??barrier_5: (+1)
   \   000001AC   0x....             LDR.N    R0,??DataTable12_21
   \   000001AE   0x7800             LDRB     R0,[R0, #+0]
   \   000001B0   0x....             LDR.N    R1,??DataTable12_22
   \   000001B2   0x7809             LDRB     R1,[R1, #+0]
   \   000001B4   0xF091 0x0101      EORS     R1,R1,#0x1
   \   000001B8   0x4208             TST      R0,R1
   \   000001BA   0xD04D             BEQ.N    ??barrier_7
   2019          {         GPIO_SET(PORTB, 10,0);
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   000001C0   0x6840             LDR      R0,[R0, #+4]
   \   000001C2   0x6800             LDR      R0,[R0, #+0]
   \   000001C4   0xF430 0x6080      BICS     R0,R0,#0x400
   \   000001C8   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   000001CC   0x6849             LDR      R1,[R1, #+4]
   \   000001CE   0x6008             STR      R0,[R1, #+0]
   2020          	for(i = bottom_whitebase;i<=control_top_whiteline;i++)
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable14
   \   000001D4   0x7800             LDRB     R0,[R0, #+0]
   \   000001D6   0x0006             MOVS     R6,R0
   \                     ??barrier_8: (+1)
   \   000001D8   0x....             LDR.N    R0,??DataTable12_13
   \   000001DA   0x8800             LDRH     R0,[R0, #+0]
   \   000001DC   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000001DE   0x42B0             CMP      R0,R6
   \   000001E0   0xF0C0 0x80FC      BCC.W    ??barrier_0
   2021          {
   2022          	record=left_black[tadge_l+3]+2/5*(tadge_l+3-i);
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable15
   \   000001E8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001EA   0x1820             ADDS     R0,R4,R0
   \   000001EC   0x78C0             LDRB     R0,[R0, #+3]
   \   000001EE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000001F0   0x1CE1             ADDS     R1,R4,#+3
   \   000001F2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000001F4   0x1B89             SUBS     R1,R1,R6
   \   000001F6   0x2200             MOVS     R2,#+0
   \   000001F8   0x4351             MULS     R1,R2,R1
   \   000001FA   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   000001FE   0x0007             MOVS     R7,R0
   2023                  if(record<=0)
   \   00000200   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000202   0x2F01             CMP      R7,#+1
   \   00000204   0xDA02             BGE.N    ??barrier_9
   2024                    record=0;
   \   00000206   0x2000             MOVS     R0,#+0
   \   00000208   0x0007             MOVS     R7,R0
   \   0000020A   0xE004             B.N      ??barrier_10
   2025                  else if(record>=MID)
   \                     ??barrier_9: (+1)
   \   0000020C   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000020E   0x2F4E             CMP      R7,#+78
   \   00000210   0xDB01             BLT.N    ??barrier_10
   2026                  {
   2027                    record=MID;
   \   00000212   0x204E             MOVS     R0,#+78
   \   00000214   0x0007             MOVS     R7,R0
   2028                  }
   2029                  left_black[i]=record;
   \                     ??barrier_10: (+1)
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable15
   \   0000021A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000021C   0x5437             STRB     R7,[R6, R0]
   2030                  
   2031                 record= (left_black[i]+right_black[i])/2;
   \   0000021E   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000222   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000224   0x5C30             LDRB     R0,[R6, R0]
   \   00000226   0x....             LDR.N    R1,??DataTable12
   \   00000228   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000022A   0x5C71             LDRB     R1,[R6, R1]
   \   0000022C   0x1808             ADDS     R0,R1,R0
   \   0000022E   0x2102             MOVS     R1,#+2
   \   00000230   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000234   0x0007             MOVS     R7,R0
   2032                 if(record<=0)
   \   00000236   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000238   0x2F01             CMP      R7,#+1
   \   0000023A   0xDA02             BGE.N    ??barrier_11
   2033                 {
   2034                    record=0;
   \   0000023C   0x2000             MOVS     R0,#+0
   \   0000023E   0x0007             MOVS     R7,R0
   \   00000240   0xE004             B.N      ??barrier_12
   2035                 }
   2036                  else if(record>=COLUMN-1)
   \                     ??barrier_11: (+1)
   \   00000242   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000244   0x2F9C             CMP      R7,#+156
   \   00000246   0xDB01             BLT.N    ??barrier_12
   2037                  {
   2038                    record=COLUMN-1;
   \   00000248   0x209C             MOVS     R0,#+156
   \   0000024A   0x0007             MOVS     R7,R0
   2039                  }
   2040                 center_white[i]=record;
   \                     ??barrier_12: (+1)
   \   0000024C   0x.... 0x....      LDR.W    R0,??DataTable17
   \   00000250   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000252   0x5437             STRB     R7,[R6, R0]
   2041                  
   2042          }
   \   00000254   0x1C76             ADDS     R6,R6,#+1
   \   00000256   0xE7BF             B.N      ??barrier_8
   2043           
   2044          }
   2045          
   2046          else if(barrier_r==1&&barrier_l==0)
   \                     ??barrier_7: (+1)
   \   00000258   0x....             LDR.N    R0,??DataTable12_22
   \   0000025A   0x7800             LDRB     R0,[R0, #+0]
   \   0000025C   0x....             LDR.N    R1,??DataTable12_21
   \   0000025E   0x7809             LDRB     R1,[R1, #+0]
   \   00000260   0xF091 0x0101      EORS     R1,R1,#0x1
   \   00000264   0x4208             TST      R0,R1
   \   00000266   0xD04B             BEQ.N    ??barrier_13
   2047          {        GPIO_SET(PORTB, 10,0);
   \   00000268   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   0000026C   0x6840             LDR      R0,[R0, #+4]
   \   0000026E   0x6800             LDR      R0,[R0, #+0]
   \   00000270   0xF430 0x6080      BICS     R0,R0,#0x400
   \   00000274   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   00000278   0x6849             LDR      R1,[R1, #+4]
   \   0000027A   0x6008             STR      R0,[R1, #+0]
   2048          	for(i = bottom_whitebase;i<=control_top_whiteline;i++)
   \   0000027C   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000280   0x7800             LDRB     R0,[R0, #+0]
   \   00000282   0x0006             MOVS     R6,R0
   \                     ??barrier_14: (+1)
   \   00000284   0x....             LDR.N    R0,??DataTable12_13
   \   00000286   0x8800             LDRH     R0,[R0, #+0]
   \   00000288   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000028A   0x42B0             CMP      R0,R6
   \   0000028C   0xF0C0 0x80A6      BCC.W    ??barrier_0
   2049          {
   2050          	 record=right_black[tadge_r+3]-2/5*(tadge_r+3-i);
   \   00000290   0x....             LDR.N    R0,??DataTable12
   \   00000292   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000294   0x1828             ADDS     R0,R5,R0
   \   00000296   0x78C0             LDRB     R0,[R0, #+3]
   \   00000298   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000029A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000029C   0x1B71             SUBS     R1,R6,R5
   \   0000029E   0x1EC9             SUBS     R1,R1,#+3
   \   000002A0   0x2200             MOVS     R2,#+0
   \   000002A2   0x4351             MULS     R1,R2,R1
   \   000002A4   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   000002A8   0x0007             MOVS     R7,R0
   2051                
   2052                  if(record<=MID)
   \   000002AA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002AC   0x2F4F             CMP      R7,#+79
   \   000002AE   0xDA02             BGE.N    ??barrier_15
   2053                    record=MID;
   \   000002B0   0x204E             MOVS     R0,#+78
   \   000002B2   0x0007             MOVS     R7,R0
   \   000002B4   0xE004             B.N      ??barrier_16
   2054                  else if(record>=COLUMN-1)
   \                     ??barrier_15: (+1)
   \   000002B6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002B8   0x2F9C             CMP      R7,#+156
   \   000002BA   0xDB01             BLT.N    ??barrier_16
   2055                  {
   2056                    record=COLUMN-1;
   \   000002BC   0x209C             MOVS     R0,#+156
   \   000002BE   0x0007             MOVS     R7,R0
   2057                  }
   2058                  right_black[i]=record;
   \                     ??barrier_16: (+1)
   \   000002C0   0x....             LDR.N    R0,??DataTable12
   \   000002C2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000002C4   0x5437             STRB     R7,[R6, R0]
   2059                  
   2060                 record= (left_black[i]+right_black[i])/2;
   \   000002C6   0x.... 0x....      LDR.W    R0,??DataTable15
   \   000002CA   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000002CC   0x5C30             LDRB     R0,[R6, R0]
   \   000002CE   0x....             LDR.N    R1,??DataTable12
   \   000002D0   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000002D2   0x5C71             LDRB     R1,[R6, R1]
   \   000002D4   0x1808             ADDS     R0,R1,R0
   \   000002D6   0x2102             MOVS     R1,#+2
   \   000002D8   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000002DC   0x0007             MOVS     R7,R0
   2061                 if(record<=0)
   \   000002DE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002E0   0x2F01             CMP      R7,#+1
   \   000002E2   0xDA02             BGE.N    ??barrier_17
   2062                 {
   2063                    record=0;
   \   000002E4   0x2000             MOVS     R0,#+0
   \   000002E6   0x0007             MOVS     R7,R0
   \   000002E8   0xE004             B.N      ??barrier_18
   2064                 }
   2065                  else if(record>=COLUMN-1)
   \                     ??barrier_17: (+1)
   \   000002EA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002EC   0x2F9C             CMP      R7,#+156
   \   000002EE   0xDB01             BLT.N    ??barrier_18
   2066                  {
   2067                    record=COLUMN-1;
   \   000002F0   0x209C             MOVS     R0,#+156
   \   000002F2   0x0007             MOVS     R7,R0
   2068                  }
   2069                 center_white[i]=record;
   \                     ??barrier_18: (+1)
   \   000002F4   0x.... 0x....      LDR.W    R0,??DataTable17
   \   000002F8   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000002FA   0x5437             STRB     R7,[R6, R0]
   2070          }
   \   000002FC   0x1C76             ADDS     R6,R6,#+1
   \   000002FE   0xE7C1             B.N      ??barrier_14
   2071          
   2072          }
   2073          
   2074          else if(barrier_r==1&&barrier_l==1)
   \                     ??barrier_13: (+1)
   \   00000300   0x....             LDR.N    R0,??DataTable12_22
   \   00000302   0x7800             LDRB     R0,[R0, #+0]
   \   00000304   0x....             LDR.N    R1,??DataTable12_21
   \   00000306   0x7809             LDRB     R1,[R1, #+0]
   \   00000308   0x4208             TST      R0,R1
   \   0000030A   0xD067             BEQ.N    ??barrier_0
   2075          {
   2076               GPIO_SET(PORTB, 10,0);
   \   0000030C   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000310   0x6840             LDR      R0,[R0, #+4]
   \   00000312   0x6800             LDR      R0,[R0, #+0]
   \   00000314   0xF430 0x6080      BICS     R0,R0,#0x400
   \   00000318   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   0000031C   0x6849             LDR      R1,[R1, #+4]
   \   0000031E   0x6008             STR      R0,[R1, #+0]
   2077               
   2078               for(i = bottom_whitebase;i<=control_top_whiteline;i++)
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000324   0x7800             LDRB     R0,[R0, #+0]
   \   00000326   0x0006             MOVS     R6,R0
   \                     ??barrier_19: (+1)
   \   00000328   0x....             LDR.N    R0,??DataTable12_13
   \   0000032A   0x8800             LDRH     R0,[R0, #+0]
   \   0000032C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000032E   0x42B0             CMP      R0,R6
   \   00000330   0xD354             BCC.N    ??barrier_0
   2079               {
   2080                 
   2081                 record=left_black[tadge_l+3]+2/5*(tadge_l+3-i);
   \   00000332   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000336   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000338   0x1820             ADDS     R0,R4,R0
   \   0000033A   0x78C0             LDRB     R0,[R0, #+3]
   \   0000033C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000033E   0x1CE1             ADDS     R1,R4,#+3
   \   00000340   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000342   0x1B89             SUBS     R1,R1,R6
   \   00000344   0x2200             MOVS     R2,#+0
   \   00000346   0x4351             MULS     R1,R2,R1
   \   00000348   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   0000034C   0x0007             MOVS     R7,R0
   2082                  if(record<=0)
   \   0000034E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000350   0x2F01             CMP      R7,#+1
   \   00000352   0xDA02             BGE.N    ??barrier_20
   2083                    record=0;
   \   00000354   0x2000             MOVS     R0,#+0
   \   00000356   0x0007             MOVS     R7,R0
   \   00000358   0xE004             B.N      ??barrier_21
   2084                  else if(record>=MID)
   \                     ??barrier_20: (+1)
   \   0000035A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000035C   0x2F4E             CMP      R7,#+78
   \   0000035E   0xDB01             BLT.N    ??barrier_21
   2085                  {
   2086                    record=MID;
   \   00000360   0x204E             MOVS     R0,#+78
   \   00000362   0x0007             MOVS     R7,R0
   2087                  }
   2088                  left_black[i]=record;
   \                     ??barrier_21: (+1)
   \   00000364   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000368   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000036A   0x5437             STRB     R7,[R6, R0]
   2089                  
   2090                 record=right_black[tadge_r+3]-2/5*(tadge_r+3-i);
   \   0000036C   0x....             LDR.N    R0,??DataTable12
   \   0000036E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000370   0x1828             ADDS     R0,R5,R0
   \   00000372   0x78C0             LDRB     R0,[R0, #+3]
   \   00000374   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000376   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000378   0x1B71             SUBS     R1,R6,R5
   \   0000037A   0x1EC9             SUBS     R1,R1,#+3
   \   0000037C   0x2200             MOVS     R2,#+0
   \   0000037E   0x4351             MULS     R1,R2,R1
   \   00000380   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   00000384   0x0007             MOVS     R7,R0
   2091                
   2092                  if(record<=MID)
   \   00000386   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000388   0x2F4F             CMP      R7,#+79
   \   0000038A   0xDA02             BGE.N    ??barrier_22
   2093                    record=MID;
   \   0000038C   0x204E             MOVS     R0,#+78
   \   0000038E   0x0007             MOVS     R7,R0
   \   00000390   0xE004             B.N      ??barrier_23
   2094                  else if(record>=COLUMN-1)
   \                     ??barrier_22: (+1)
   \   00000392   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000394   0x2F9C             CMP      R7,#+156
   \   00000396   0xDB01             BLT.N    ??barrier_23
   2095                  {
   2096                    record=COLUMN-1;
   \   00000398   0x209C             MOVS     R0,#+156
   \   0000039A   0x0007             MOVS     R7,R0
   2097                  }
   2098                  right_black[i]=record;
   \                     ??barrier_23: (+1)
   \   0000039C   0x....             LDR.N    R0,??DataTable12
   \   0000039E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000003A0   0x5437             STRB     R7,[R6, R0]
   2099                  
   2100                 record= (left_black[i]+right_black[i])/2;
   \   000003A2   0x.... 0x....      LDR.W    R0,??DataTable15
   \   000003A6   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000003A8   0x5C30             LDRB     R0,[R6, R0]
   \   000003AA   0x....             LDR.N    R1,??DataTable12
   \   000003AC   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000003AE   0x5C71             LDRB     R1,[R6, R1]
   \   000003B0   0x1808             ADDS     R0,R1,R0
   \   000003B2   0x2102             MOVS     R1,#+2
   \   000003B4   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000003B8   0x0007             MOVS     R7,R0
   2101                 if(record<=0)
   \   000003BA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003BC   0x2F01             CMP      R7,#+1
   \   000003BE   0xDA02             BGE.N    ??barrier_24
   2102                 {
   2103                    record=0;
   \   000003C0   0x2000             MOVS     R0,#+0
   \   000003C2   0x0007             MOVS     R7,R0
   \   000003C4   0xE004             B.N      ??barrier_25
   2104                 }
   2105                  else if(record>=COLUMN-1)
   \                     ??barrier_24: (+1)
   \   000003C6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003C8   0x2F9C             CMP      R7,#+156
   \   000003CA   0xDB01             BLT.N    ??barrier_25
   2106                  {
   2107                    record=COLUMN-1;
   \   000003CC   0x209C             MOVS     R0,#+156
   \   000003CE   0x0007             MOVS     R7,R0
   2108                  }
   2109                 center_white[i]=record;
   \                     ??barrier_25: (+1)
   \   000003D0   0x.... 0x....      LDR.W    R0,??DataTable17
   \   000003D4   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000003D6   0x5437             STRB     R7,[R6, R0]
   2110               }
   \   000003D8   0x1C76             ADDS     R6,R6,#+1
   \   000003DA   0xE7A5             B.N      ??barrier_19
   2111              
   2112          }
   2113          
   2114          else
   2115          {
   2116               //GPIO_SET(PORTB, 10,1);
   2117               
   2118          }
   2119          
   2120          }
   2121          
   2122          
   2123          }
   \                     ??barrier_0: (+1)
   \   000003DC   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   2124          

   \                                 In section .data, align 1
   2125          uint8 qing=38;
   \                     qing:
   \   00000000   0x26               DC8 38

   \                                 In section .data, align 1
   2126          uint8 huanjie=25;
   \                     huanjie:
   \   00000000   0x19               DC8 25
   2127          
   2128          
   2129          

   \                                 In section .text, align 2, keep-with-next
   2130          void across_smile()
   2131          {
   \                     across_smile: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   2132          //bool check_flag_l=0;
   2133          //bool check_flag_r=0;
   2134          
   2135          uint16 turn_l_count=0;
   \   00000004   0x2600             MOVS     R6,#+0
   2136          uint16 turn_r_count=0;
   \   00000006   0x2000             MOVS     R0,#+0
   2137          
   2138          int16 record=0;
   \   00000008   0x2100             MOVS     R1,#+0
   2139          
   2140          int tage=0;
   \   0000000A   0x2200             MOVS     R2,#+0
   2141          uint16 count_tt=0;
   \   0000000C   0x2300             MOVS     R3,#+0
   2142          uint16 i=0;
   \   0000000E   0x2400             MOVS     R4,#+0
   2143          uint16 temp=0;
   \   00000010   0x2500             MOVS     R5,#+0
   2144          
   2145          uint16 j=0;
   \   00000012   0x2700             MOVS     R7,#+0
   2146          
   2147          if( control_top_whiteline>30)
   \   00000014   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   00000018   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   0000001C   0xF1BC 0x0F1F      CMP      R12,#+31
   \   00000020   0xDB0B             BLT.N    ??across_smile_0
   2148          {
   2149              turn_l=0;
   \   00000022   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000026   0x.... 0x....      LDR.W    LR,??DataTable17_2
   \   0000002A   0xF88E 0xC000      STRB     R12,[LR, #+0]
   2150              turn_r=0;
   \   0000002E   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000032   0x.... 0x....      LDR.W    LR,??DataTable17_3
   \   00000036   0xF88E 0xC000      STRB     R12,[LR, #+0]
   2151          }
   2152          
   2153          for(i = bottom_whitebase+5;i<control_top_whiteline-6;i++)
   \                     ??across_smile_0: (+1)
   \   0000003A   0x.... 0x....      LDR.W    R12,??DataTable14
   \   0000003E   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000042   0xF11C 0x0C05      ADDS     R12,R12,#+5
   \   00000046   0x4664             MOV      R4,R12
   \                     ??across_smile_1: (+1)
   \   00000048   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000004A   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   0000004E   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   00000052   0xF1BC 0x0C06      SUBS     R12,R12,#+6
   \   00000056   0x4564             CMP      R4,R12
   \   00000058   0xF280 0x826A      BGE.W    ??across_smile_2
   2154          {
   2155               if(Row_state[i-3]==3&&Row_state[i-2]==3&&Row_state[i-1]==3&&Row_state[i]!=3&&Row_state[i+1]!=3&&Row_state[i+2]!=3)
   \   0000005C   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   00000060   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000062   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   00000066   0xF81C 0xCC03      LDRB     R12,[R12, #-3]
   \   0000006A   0xF1BC 0x0F03      CMP      R12,#+3
   \   0000006E   0xF040 0x825D      BNE.W    ??across_smile_3
   \   00000072   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   00000076   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000078   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   0000007C   0xF81C 0xCC02      LDRB     R12,[R12, #-2]
   \   00000080   0xF1BC 0x0F03      CMP      R12,#+3
   \   00000084   0xF040 0x8252      BNE.W    ??across_smile_3
   \   00000088   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   0000008C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000008E   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   00000092   0xF81C 0xCC01      LDRB     R12,[R12, #-1]
   \   00000096   0xF1BC 0x0F03      CMP      R12,#+3
   \   0000009A   0xF040 0x8247      BNE.W    ??across_smile_3
   \   0000009E   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   000000A2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000A4   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   000000A8   0xF1BC 0x0F03      CMP      R12,#+3
   \   000000AC   0xF000 0x823E      BEQ.W    ??across_smile_3
   \   000000B0   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   000000B4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000B6   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   000000BA   0xF89C 0xC001      LDRB     R12,[R12, #+1]
   \   000000BE   0xF1BC 0x0F03      CMP      R12,#+3
   \   000000C2   0xF000 0x8233      BEQ.W    ??across_smile_3
   \   000000C6   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   000000CA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000CC   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   000000D0   0xF89C 0xC002      LDRB     R12,[R12, #+2]
   \   000000D4   0xF1BC 0x0F03      CMP      R12,#+3
   \   000000D8   0xF000 0x8228      BEQ.W    ??across_smile_3
   2156            {
   2157          	if( Row_state[i]==0&&Row_state[i+1]==0&&Row_state[i+2]==0&&left_black[i]>10&&right_black[i]<COLUMN-10)//发现丢线
   \   000000DC   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   000000E0   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000E2   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   000000E6   0xF1BC 0x0F00      CMP      R12,#+0
   \   000000EA   0xF040 0x810D      BNE.W    ??across_smile_4
   \   000000EE   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   000000F2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000F4   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   000000F8   0xF89C 0xC001      LDRB     R12,[R12, #+1]
   \   000000FC   0xF1BC 0x0F00      CMP      R12,#+0
   \   00000100   0xF040 0x8102      BNE.W    ??across_smile_4
   \   00000104   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   00000108   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000010A   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   0000010E   0xF89C 0xC002      LDRB     R12,[R12, #+2]
   \   00000112   0xF1BC 0x0F00      CMP      R12,#+0
   \   00000116   0xF040 0x80F7      BNE.W    ??across_smile_4
   \   0000011A   0x.... 0x....      LDR.W    R12,??DataTable15
   \   0000011E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000120   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   00000124   0xF1BC 0x0F0B      CMP      R12,#+11
   \   00000128   0xF2C0 0x80EE      BLT.W    ??across_smile_4
   \   0000012C   0x.... 0x....      LDR.W    R12,??DataTable17_5
   \   00000130   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000132   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   00000136   0xF1BC 0x0F93      CMP      R12,#+147
   \   0000013A   0xF280 0x80E5      BGE.W    ??across_smile_4
   2158                 {
   2159          	 temp=i;
   \   0000013E   0x0025             MOVS     R5,R4
   2160          	for(j=temp;j<temp+10;j++)
   \   00000140   0x002F             MOVS     R7,R5
   \                     ??across_smile_5: (+1)
   \   00000142   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000144   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000146   0xF115 0x0C0A      ADDS     R12,R5,#+10
   \   0000014A   0x4567             CMP      R7,R12
   \   0000014C   0xF280 0x80A1      BGE.W    ??across_smile_6
   2161                 { 
   2162                   if( left_black[j]>6)
   \   00000150   0x.... 0x....      LDR.W    R12,??DataTable15
   \   00000154   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000156   0xF817 0xC00C      LDRB     R12,[R7, R12]
   \   0000015A   0xF1BC 0x0F07      CMP      R12,#+7
   \   0000015E   0xF2C0 0x8096      BLT.W    ??across_smile_7
   2163                   {
   2164                    if( VideoImage2[j][ left_black[j]-1]>WHITE_BLACK_OT&&VideoImage2[j][ left_black[j]-2]>WHITE_BLACK_OT&&VideoImage2[j][ left_black[j]-3]>WHITE_BLACK_OT
   2165                         &&VideoImage2[j][ left_black[j]-4]>WHITE_BLACK_OT&&VideoImage2[j][ left_black[j]-5]>WHITE_BLACK_OT&&VideoImage2[j][ left_black[j]-6]>WHITE_BLACK_OT&&(Row_state[j]!=2&&Row_state[j]!=1))
   \   00000162   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   00000166   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   0000016A   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   0000016E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000170   0xF05F 0x089D      MOVS     R8,#+157
   \   00000174   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   00000178   0x.... 0x....      LDR.W    R8,??DataTable15
   \   0000017C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000017E   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   00000182   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   00000186   0xF81E 0xEC01      LDRB     LR,[LR, #-1]
   \   0000018A   0x45F4             CMP      R12,LR
   \   0000018C   0xF080 0x807F      BCS.W    ??across_smile_7
   \   00000190   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   00000194   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000198   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   0000019C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000019E   0xF05F 0x089D      MOVS     R8,#+157
   \   000001A2   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   000001A6   0x.... 0x....      LDR.W    R8,??DataTable15
   \   000001AA   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000001AC   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   000001B0   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   000001B4   0xF81E 0xEC02      LDRB     LR,[LR, #-2]
   \   000001B8   0x45F4             CMP      R12,LR
   \   000001BA   0xD268             BCS.N    ??across_smile_7
   \   000001BC   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   000001C0   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000001C4   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   000001C8   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000001CA   0xF05F 0x089D      MOVS     R8,#+157
   \   000001CE   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   000001D2   0x.... 0x....      LDR.W    R8,??DataTable15
   \   000001D6   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000001D8   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   000001DC   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   000001E0   0xF81E 0xEC03      LDRB     LR,[LR, #-3]
   \   000001E4   0x45F4             CMP      R12,LR
   \   000001E6   0xD252             BCS.N    ??across_smile_7
   \   000001E8   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   000001EC   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000001F0   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   000001F4   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000001F6   0xF05F 0x089D      MOVS     R8,#+157
   \   000001FA   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   000001FE   0x.... 0x....      LDR.W    R8,??DataTable15
   \   00000202   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000204   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   00000208   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   0000020C   0xF81E 0xEC04      LDRB     LR,[LR, #-4]
   \   00000210   0x45F4             CMP      R12,LR
   \   00000212   0xD23C             BCS.N    ??across_smile_7
   \   00000214   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   00000218   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   0000021C   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   00000220   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000222   0xF05F 0x089D      MOVS     R8,#+157
   \   00000226   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   0000022A   0x.... 0x....      LDR.W    R8,??DataTable15
   \   0000022E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000230   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   00000234   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   00000238   0xF81E 0xEC05      LDRB     LR,[LR, #-5]
   \   0000023C   0x45F4             CMP      R12,LR
   \   0000023E   0xD226             BCS.N    ??across_smile_7
   \   00000240   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   00000244   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000248   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   0000024C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000024E   0xF05F 0x089D      MOVS     R8,#+157
   \   00000252   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   00000256   0x.... 0x....      LDR.W    R8,??DataTable15
   \   0000025A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000025C   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   00000260   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   00000264   0xF81E 0xEC06      LDRB     LR,[LR, #-6]
   \   00000268   0x45F4             CMP      R12,LR
   \   0000026A   0xD210             BCS.N    ??across_smile_7
   \   0000026C   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   00000270   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000272   0xF817 0xC00C      LDRB     R12,[R7, R12]
   \   00000276   0xF1BC 0x0F02      CMP      R12,#+2
   \   0000027A   0xD008             BEQ.N    ??across_smile_7
   \   0000027C   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   00000280   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000282   0xF817 0xC00C      LDRB     R12,[R7, R12]
   \   00000286   0xF1BC 0x0F01      CMP      R12,#+1
   \   0000028A   0xD000             BEQ.N    ??across_smile_7
   2166                    {
   2167                      turn_l_count++;
   \   0000028C   0x1C76             ADDS     R6,R6,#+1
   2168                    }
   2169                   }
   2170          
   2171                 }//向上搜索完毕
   \                     ??across_smile_7: (+1)
   \   0000028E   0x1C7F             ADDS     R7,R7,#+1
   \   00000290   0xE757             B.N      ??across_smile_5
   2172                 
   2173                 if(turn_l_count>7&&center_white[control_top_whiteline]>35&&center_white[control_top_whiteline]<MID&&right_black[control_top_whiteline]-left_black[control_top_whiteline]<40)   //////
   \                     ??across_smile_6: (+1)
   \   00000292   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000294   0x2E08             CMP      R6,#+8
   \   00000296   0xF2C0 0x8149      BLT.W    ??across_smile_3
   \   0000029A   0x.... 0x....      LDR.W    R12,??DataTable17
   \   0000029E   0x.... 0x....      LDR.W    LR,??DataTable17_1
   \   000002A2   0xF8BE 0xE000      LDRH     LR,[LR, #+0]
   \   000002A6   0xF81E 0xC00C      LDRB     R12,[LR, R12]
   \   000002AA   0xF1BC 0x0F24      CMP      R12,#+36
   \   000002AE   0xF2C0 0x813D      BLT.W    ??across_smile_3
   \   000002B2   0x.... 0x....      LDR.W    R12,??DataTable17
   \   000002B6   0x.... 0x....      LDR.W    LR,??DataTable17_1
   \   000002BA   0xF8BE 0xE000      LDRH     LR,[LR, #+0]
   \   000002BE   0xF81E 0xC00C      LDRB     R12,[LR, R12]
   \   000002C2   0xF1BC 0x0F4E      CMP      R12,#+78
   \   000002C6   0xF280 0x8131      BGE.W    ??across_smile_3
   \   000002CA   0x.... 0x....      LDR.W    R12,??DataTable17_5
   \   000002CE   0x.... 0x....      LDR.W    LR,??DataTable17_1
   \   000002D2   0xF8BE 0xE000      LDRH     LR,[LR, #+0]
   \   000002D6   0xF81E 0xC00C      LDRB     R12,[LR, R12]
   \   000002DA   0x.... 0x....      LDR.W    LR,??DataTable15
   \   000002DE   0x.... 0x....      LDR.W    R8,??DataTable17_1
   \   000002E2   0xF8B8 0x8000      LDRH     R8,[R8, #+0]
   \   000002E6   0xF818 0xE00E      LDRB     LR,[R8, LR]
   \   000002EA   0xEBBC 0x0C0E      SUBS     R12,R12,LR
   \   000002EE   0xF1BC 0x0F28      CMP      R12,#+40
   \   000002F2   0xF280 0x811B      BGE.W    ??across_smile_3
   2174                 {    
   2175                      turn_l=1;
   \   000002F6   0xF05F 0x0C01      MOVS     R12,#+1
   \   000002FA   0x.... 0x....      LDR.W    LR,??DataTable17_2
   \   000002FE   0xF88E 0xC000      STRB     R12,[LR, #+0]
   2176                      tage=temp;
   \   00000302   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000304   0x002A             MOVS     R2,R5
   2177                      break;
   \   00000306   0xE113             B.N      ??across_smile_2
   2178                  }
   2179            
   2180                 }
   2181                  else if( Row_state[i]==1&&Row_state[i+1]==1&&Row_state[i+2]==1&&right_black[i]<COLUMN-10&&left_black[i]>10)
   \                     ??across_smile_4: (+1)
   \   00000308   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   0000030C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000030E   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   00000312   0xF1BC 0x0F01      CMP      R12,#+1
   \   00000316   0xF040 0x8109      BNE.W    ??across_smile_3
   \   0000031A   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   0000031E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000320   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   00000324   0xF89C 0xC001      LDRB     R12,[R12, #+1]
   \   00000328   0xF1BC 0x0F01      CMP      R12,#+1
   \   0000032C   0xF040 0x80FE      BNE.W    ??across_smile_3
   \   00000330   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   00000334   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000336   0xEB14 0x0C0C      ADDS     R12,R4,R12
   \   0000033A   0xF89C 0xC002      LDRB     R12,[R12, #+2]
   \   0000033E   0xF1BC 0x0F01      CMP      R12,#+1
   \   00000342   0xF040 0x80F3      BNE.W    ??across_smile_3
   \   00000346   0x.... 0x....      LDR.W    R12,??DataTable17_5
   \   0000034A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000034C   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   00000350   0xF1BC 0x0F93      CMP      R12,#+147
   \   00000354   0xF280 0x80EA      BGE.W    ??across_smile_3
   \   00000358   0x.... 0x....      LDR.W    R12,??DataTable15
   \   0000035C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000035E   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   00000362   0xF1BC 0x0F0B      CMP      R12,#+11
   \   00000366   0xF2C0 0x80E1      BLT.W    ??across_smile_3
   2182                {
   2183                  temp=i;
   \   0000036A   0x0025             MOVS     R5,R4
   2184          	for(j=temp;j<temp+10;j++)
   \   0000036C   0x002F             MOVS     R7,R5
   \                     ??across_smile_8: (+1)
   \   0000036E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000370   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000372   0xF115 0x0C0A      ADDS     R12,R5,#+10
   \   00000376   0x4567             CMP      R7,R12
   \   00000378   0xF280 0x80A1      BGE.W    ??across_smile_9
   2185                 { 
   2186                   if( right_black[j]<COLUMN-7)
   \   0000037C   0x.... 0x....      LDR.W    R12,??DataTable17_5
   \   00000380   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000382   0xF817 0xC00C      LDRB     R12,[R7, R12]
   \   00000386   0xF1BC 0x0F96      CMP      R12,#+150
   \   0000038A   0xF280 0x8096      BGE.W    ??across_smile_10
   2187                   {
   2188                    if( VideoImage2[j][ right_black[j]+1]>WHITE_BLACK_OT&&VideoImage2[j][ right_black[j]+2]>WHITE_BLACK_OT&&VideoImage2[j][ right_black[j]+3]>WHITE_BLACK_OT
   2189                         &&VideoImage2[j][ right_black[j]+4]>WHITE_BLACK_OT&&VideoImage2[j][ right_black[j]+5]>WHITE_BLACK_OT&&VideoImage2[j][ right_black[j]+6]>WHITE_BLACK_OT&&(Row_state[j]!=2&&Row_state[j]!=0))
   \   0000038E   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   00000392   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000396   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   0000039A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000039C   0xF05F 0x089D      MOVS     R8,#+157
   \   000003A0   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   000003A4   0x.... 0x....      LDR.W    R8,??DataTable17_5
   \   000003A8   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003AA   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   000003AE   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   000003B2   0xF89E 0xE001      LDRB     LR,[LR, #+1]
   \   000003B6   0x45F4             CMP      R12,LR
   \   000003B8   0xF080 0x807F      BCS.W    ??across_smile_10
   \   000003BC   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   000003C0   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000003C4   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   000003C8   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003CA   0xF05F 0x089D      MOVS     R8,#+157
   \   000003CE   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   000003D2   0x.... 0x....      LDR.W    R8,??DataTable17_5
   \   000003D6   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003D8   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   000003DC   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   000003E0   0xF89E 0xE002      LDRB     LR,[LR, #+2]
   \   000003E4   0x45F4             CMP      R12,LR
   \   000003E6   0xD268             BCS.N    ??across_smile_10
   \   000003E8   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   000003EC   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000003F0   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   000003F4   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003F6   0xF05F 0x089D      MOVS     R8,#+157
   \   000003FA   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   000003FE   0x.... 0x....      LDR.W    R8,??DataTable17_5
   \   00000402   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000404   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   00000408   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   0000040C   0xF89E 0xE003      LDRB     LR,[LR, #+3]
   \   00000410   0x45F4             CMP      R12,LR
   \   00000412   0xD252             BCS.N    ??across_smile_10
   \   00000414   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   00000418   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   0000041C   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   00000420   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000422   0xF05F 0x089D      MOVS     R8,#+157
   \   00000426   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   0000042A   0x.... 0x....      LDR.W    R8,??DataTable17_5
   \   0000042E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000430   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   00000434   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   00000438   0xF89E 0xE004      LDRB     LR,[LR, #+4]
   \   0000043C   0x45F4             CMP      R12,LR
   \   0000043E   0xD23C             BCS.N    ??across_smile_10
   \   00000440   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   00000444   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000448   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   0000044C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000044E   0xF05F 0x089D      MOVS     R8,#+157
   \   00000452   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   00000456   0x.... 0x....      LDR.W    R8,??DataTable17_5
   \   0000045A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000045C   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   00000460   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   00000464   0xF89E 0xE005      LDRB     LR,[LR, #+5]
   \   00000468   0x45F4             CMP      R12,LR
   \   0000046A   0xD226             BCS.N    ??across_smile_10
   \   0000046C   0x.... 0x....      LDR.W    R12,??DataTable17_6
   \   00000470   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000474   0x.... 0x....      LDR.W    LR,??DataTable17_7
   \   00000478   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000047A   0xF05F 0x089D      MOVS     R8,#+157
   \   0000047E   0xFB08 0xEE07      MLA      LR,R8,R7,LR
   \   00000482   0x.... 0x....      LDR.W    R8,??DataTable17_5
   \   00000486   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000488   0xF817 0x8008      LDRB     R8,[R7, R8]
   \   0000048C   0xEB18 0x0E0E      ADDS     LR,R8,LR
   \   00000490   0xF89E 0xE006      LDRB     LR,[LR, #+6]
   \   00000494   0x45F4             CMP      R12,LR
   \   00000496   0xD210             BCS.N    ??across_smile_10
   \   00000498   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   0000049C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000049E   0xF817 0xC00C      LDRB     R12,[R7, R12]
   \   000004A2   0xF1BC 0x0F02      CMP      R12,#+2
   \   000004A6   0xD008             BEQ.N    ??across_smile_10
   \   000004A8   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   000004AC   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000004AE   0xF817 0xC00C      LDRB     R12,[R7, R12]
   \   000004B2   0xF1BC 0x0F00      CMP      R12,#+0
   \   000004B6   0xD000             BEQ.N    ??across_smile_10
   2190                    {
   2191                      turn_r_count++;
   \   000004B8   0x1C40             ADDS     R0,R0,#+1
   2192                    }
   2193                   }
   2194          
   2195                 }
   \                     ??across_smile_10: (+1)
   \   000004BA   0x1C7F             ADDS     R7,R7,#+1
   \   000004BC   0xE757             B.N      ??across_smile_8
   2196                 
   2197                 if(turn_r_count>7&&center_white[control_top_whiteline]>MID&&center_white[control_top_whiteline]<121&&right_black[control_top_whiteline]-left_black[control_top_whiteline]<40)   
   \                     ??across_smile_9: (+1)
   \   000004BE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000004C0   0x2808             CMP      R0,#+8
   \   000004C2   0xDB33             BLT.N    ??across_smile_3
   \   000004C4   0x.... 0x....      LDR.W    R12,??DataTable17
   \   000004C8   0x.... 0x....      LDR.W    LR,??DataTable17_1
   \   000004CC   0xF8BE 0xE000      LDRH     LR,[LR, #+0]
   \   000004D0   0xF81E 0xC00C      LDRB     R12,[LR, R12]
   \   000004D4   0xF1BC 0x0F4F      CMP      R12,#+79
   \   000004D8   0xDB28             BLT.N    ??across_smile_3
   \   000004DA   0x.... 0x....      LDR.W    R12,??DataTable17
   \   000004DE   0x.... 0x....      LDR.W    LR,??DataTable17_1
   \   000004E2   0xF8BE 0xE000      LDRH     LR,[LR, #+0]
   \   000004E6   0xF81E 0xC00C      LDRB     R12,[LR, R12]
   \   000004EA   0xF1BC 0x0F79      CMP      R12,#+121
   \   000004EE   0xDA1D             BGE.N    ??across_smile_3
   \   000004F0   0x.... 0x....      LDR.W    R12,??DataTable17_5
   \   000004F4   0x.... 0x....      LDR.W    LR,??DataTable17_1
   \   000004F8   0xF8BE 0xE000      LDRH     LR,[LR, #+0]
   \   000004FC   0xF81E 0xC00C      LDRB     R12,[LR, R12]
   \   00000500   0x.... 0x....      LDR.W    LR,??DataTable15
   \   00000504   0x.... 0x....      LDR.W    R8,??DataTable17_1
   \   00000508   0xF8B8 0x8000      LDRH     R8,[R8, #+0]
   \   0000050C   0xF818 0xE00E      LDRB     LR,[R8, LR]
   \   00000510   0xEBBC 0x0C0E      SUBS     R12,R12,LR
   \   00000514   0xF1BC 0x0F28      CMP      R12,#+40
   \   00000518   0xDA08             BGE.N    ??across_smile_3
   2198                 {    
   2199                      turn_r=1;
   \   0000051A   0xF05F 0x0C01      MOVS     R12,#+1
   \   0000051E   0x.... 0x....      LDR.W    LR,??DataTable17_3
   \   00000522   0xF88E 0xC000      STRB     R12,[LR, #+0]
   2200                      tage=temp;
   \   00000526   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000528   0x002A             MOVS     R2,R5
   2201                      break;
   \   0000052A   0xE001             B.N      ??across_smile_2
   2202                 }
   2203                     
   2204                     
   2205                   }
   2206                  
   2207                  
   2208                }
   2209          }
   \                     ??across_smile_3: (+1)
   \   0000052C   0x1C64             ADDS     R4,R4,#+1
   \   0000052E   0xE58B             B.N      ??across_smile_1
   2210           if(turn_l==1||turn_r==1)jianshu=1;
   \                     ??across_smile_2: (+1)
   \   00000530   0x.... 0x....      LDR.W    R12,??DataTable17_2
   \   00000534   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000538   0x.... 0x....      LDR.W    LR,??DataTable17_3
   \   0000053C   0xF89E 0xE000      LDRB     LR,[LR, #+0]
   \   00000540   0xEA5E 0x0C0C      ORRS     R12,LR,R12
   \   00000544   0xFA5F 0xFC8C      UXTB     R12,R12          ;; ZeroExt  R12,R12,#+24,#+24
   \   00000548   0xF1BC 0x0F00      CMP      R12,#+0
   \   0000054C   0xD006             BEQ.N    ??across_smile_11
   \   0000054E   0xF05F 0x0C01      MOVS     R12,#+1
   \   00000552   0x.... 0x....      LDR.W    LR,??DataTable20
   \   00000556   0xF88E 0xC000      STRB     R12,[LR, #+0]
   \   0000055A   0xE005             B.N      ??across_smile_12
   2211          else jianshu=0;     
   \                     ??across_smile_11: (+1)
   \   0000055C   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000560   0x.... 0x....      LDR.W    LR,??DataTable20
   \   00000564   0xF88E 0xC000      STRB     R12,[LR, #+0]
   2212          if( control_top_whiteline>=qing)
   \                     ??across_smile_12: (+1)
   \   00000568   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   0000056C   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   00000570   0x.... 0x....      LDR.W    LR,??DataTable20_1
   \   00000574   0xF89E 0xE000      LDRB     LR,[LR, #+0]
   \   00000578   0xFA1F 0xFE8E      UXTH     LR,LR            ;; ZeroExt  LR,LR,#+16,#+16
   \   0000057C   0x45F4             CMP      R12,LR
   \   0000057E   0xD30B             BCC.N    ??across_smile_13
   2213          {
   2214              turn_l=0;
   \   00000580   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000584   0x.... 0x....      LDR.W    LR,??DataTable17_2
   \   00000588   0xF88E 0xC000      STRB     R12,[LR, #+0]
   2215              turn_r=0;
   \   0000058C   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000590   0x.... 0x....      LDR.W    LR,??DataTable17_3
   \   00000594   0xF88E 0xC000      STRB     R12,[LR, #+0]
   2216          }
   2217          
   2218          if(turn_l==1)
   \                     ??across_smile_13: (+1)
   \   00000598   0x.... 0x....      LDR.W    R12,??DataTable17_2
   \   0000059C   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000005A0   0xF1BC 0x0F00      CMP      R12,#+0
   \   000005A4   0xF000 0x80B9      BEQ.W    ??across_smile_14
   2219          {
   2220            GPIO_SET(PORTB, 10,0);
   \   000005A8   0x.... 0x....      LDR.W    R12,??DataTable15_1
   \   000005AC   0xF8DC 0xC004      LDR      R12,[R12, #+4]
   \   000005B0   0xF8DC 0xC000      LDR      R12,[R12, #+0]
   \   000005B4   0xF43C 0x6C80      BICS     R12,R12,#0x400
   \   000005B8   0x.... 0x....      LDR.W    LR,??DataTable15_1
   \   000005BC   0xF8DE 0xE004      LDR      LR,[LR, #+4]
   \   000005C0   0xF8CE 0xC000      STR      R12,[LR, #+0]
   2221            if( tage!=bottom_whitebase-3&&tage!=0)
   \   000005C4   0x.... 0x....      LDR.W    R12,??DataTable14
   \   000005C8   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000005CC   0xF1BC 0x0C03      SUBS     R12,R12,#+3
   \   000005D0   0x4562             CMP      R2,R12
   \   000005D2   0xD056             BEQ.N    ??across_smile_15
   \   000005D4   0x2A00             CMP      R2,#+0
   \   000005D6   0xD054             BEQ.N    ??across_smile_15
   2222            {
   2223             for(i =bottom_whitebase; i<=control_top_whiteline;i++)
   \   000005D8   0x.... 0x....      LDR.W    R12,??DataTable14
   \   000005DC   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000005E0   0x4664             MOV      R4,R12
   \                     ??across_smile_16: (+1)
   \   000005E2   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   000005E6   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   000005EA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000005EC   0x45A4             CMP      R12,R4
   \   000005EE   0xF0C0 0x8162      BCC.W    ??across_smile_17
   2224                   {                                                                    
   2225                    record =huanjie+center_white[bottom_whitebase] + (i -bottom_whitebase)*(left_black[tage+3]-center_white[bottom_whitebase])/( tage+3-bottom_whitebase );  
   \   000005F2   0x.... 0x....      LDR.W    R12,??DataTable21
   \   000005F6   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000005FA   0x.... 0x....      LDR.W    LR,??DataTable17
   \   000005FE   0x.... 0x....      LDR.W    R8,??DataTable14
   \   00000602   0xF898 0x8000      LDRB     R8,[R8, #+0]
   \   00000606   0xF818 0xE00E      LDRB     LR,[R8, LR]
   \   0000060A   0xEB1E 0x0C0C      ADDS     R12,LR,R12
   \   0000060E   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000610   0x.... 0x....      LDR.W    LR,??DataTable14
   \   00000614   0xF89E 0xE000      LDRB     LR,[LR, #+0]
   \   00000618   0xEBB4 0x0E0E      SUBS     LR,R4,LR
   \   0000061C   0x.... 0x....      LDR.W    R8,??DataTable15
   \   00000620   0xEB12 0x0808      ADDS     R8,R2,R8
   \   00000624   0xF898 0x8003      LDRB     R8,[R8, #+3]
   \   00000628   0x.... 0x....      LDR.W    R9,??DataTable17
   \   0000062C   0x.... 0x....      LDR.W    R10,??DataTable14
   \   00000630   0xF89A 0xA000      LDRB     R10,[R10, #+0]
   \   00000634   0xF81A 0x9009      LDRB     R9,[R10, R9]
   \   00000638   0xEBB8 0x0809      SUBS     R8,R8,R9
   \   0000063C   0xFB08 0xFE0E      MUL      LR,R8,LR
   \   00000640   0xF112 0x0803      ADDS     R8,R2,#+3
   \   00000644   0x.... 0x....      LDR.W    R9,??DataTable14
   \   00000648   0xF899 0x9000      LDRB     R9,[R9, #+0]
   \   0000064C   0xEBB8 0x0809      SUBS     R8,R8,R9
   \   00000650   0xFB9E 0xFEF8      SDIV     LR,LR,R8
   \   00000654   0xEB1E 0x0C0C      ADDS     R12,LR,R12
   \   00000658   0x4661             MOV      R1,R12
   2226                    if( record<=0)
   \   0000065A   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000065C   0x2901             CMP      R1,#+1
   \   0000065E   0xDA03             BGE.N    ??across_smile_18
   2227                        record=0;
   \   00000660   0xF05F 0x0C00      MOVS     R12,#+0
   \   00000664   0x4661             MOV      R1,R12
   \   00000666   0xE005             B.N      ??across_smile_19
   2228          
   2229                    else if( record>=MID)
   \                     ??across_smile_18: (+1)
   \   00000668   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000066A   0x294E             CMP      R1,#+78
   \   0000066C   0xDB02             BLT.N    ??across_smile_19
   2230                        record=MID;
   \   0000066E   0xF05F 0x0C4E      MOVS     R12,#+78
   \   00000672   0x4661             MOV      R1,R12
   2231                    center_white[i]=(uint8)record;
   \                     ??across_smile_19: (+1)
   \   00000674   0x.... 0x....      LDR.W    R12,??DataTable17
   \   00000678   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000067A   0xF804 0x100C      STRB     R1,[R4, R12]
   2232                    
   2233                   }	
   \   0000067E   0x1C64             ADDS     R4,R4,#+1
   \   00000680   0xE7AF             B.N      ??across_smile_16
   2234           
   2235              
   2236            
   2237          }
   2238           
   2239            else if( tage==0 ) 
   \                     ??across_smile_15: (+1)
   \   00000682   0x2A00             CMP      R2,#+0
   \   00000684   0xF040 0x8117      BNE.W    ??across_smile_17
   2240          {
   2241            for(i =bottom_whitebase; i<=control_top_whiteline;i++)
   \   00000688   0x.... 0x....      LDR.W    R12,??DataTable14
   \   0000068C   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000690   0x4664             MOV      R4,R12
   \                     ??across_smile_20: (+1)
   \   00000692   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   00000696   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   0000069A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000069C   0x45A4             CMP      R12,R4
   \   0000069E   0xD312             BCC.N    ??across_smile_21
   2242            {
   2243              if(Row_state[i]==0||left_black[i]<=1)//可能有问题
   \   000006A0   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   000006A4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000006A6   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   000006AA   0xF1BC 0x0F00      CMP      R12,#+0
   \   000006AE   0xD007             BEQ.N    ??across_smile_22
   \   000006B0   0x.... 0x....      LDR.W    R12,??DataTable15
   \   000006B4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000006B6   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   000006BA   0xF1BC 0x0F02      CMP      R12,#+2
   \   000006BE   0xDA00             BGE.N    ??across_smile_23
   2244              {
   2245                count_tt++;
   \                     ??across_smile_22: (+1)
   \   000006C0   0x1C5B             ADDS     R3,R3,#+1
   2246              }
   2247            }
   \                     ??across_smile_23: (+1)
   \   000006C2   0x1C64             ADDS     R4,R4,#+1
   \   000006C4   0xE7E5             B.N      ??across_smile_20
   2248            
   2249            if(count_tt>=(bottom_whitebase+control_top_whiteline)/3)
   \                     ??across_smile_21: (+1)
   \   000006C6   0x.... 0x....      LDR.W    R12,??DataTable14
   \   000006CA   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000006CE   0x.... 0x....      LDR.W    LR,??DataTable17_1
   \   000006D2   0xF8BE 0xE000      LDRH     LR,[LR, #+0]
   \   000006D6   0xEB1E 0x0C0C      ADDS     R12,LR,R12
   \   000006DA   0xF05F 0x0E03      MOVS     LR,#+3
   \   000006DE   0xFB9C 0xFCFE      SDIV     R12,R12,LR
   \   000006E2   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000006E4   0x4563             CMP      R3,R12
   \   000006E6   0xF2C0 0x80E6      BLT.W    ??across_smile_17
   2250            {
   2251            for(i =bottom_whitebase; i<=control_top_whiteline;i++)  
   \   000006EA   0x.... 0x....      LDR.W    R12,??DataTable14
   \   000006EE   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   000006F2   0x4664             MOV      R4,R12
   \                     ??across_smile_24: (+1)
   \   000006F4   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   000006F8   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   000006FC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000006FE   0x45A4             CMP      R12,R4
   \   00000700   0xF0C0 0x80D9      BCC.W    ??across_smile_17
   2252              center_white[i] =huanjie;
   \   00000704   0x.... 0x....      LDR.W    R12,??DataTable21
   \   00000708   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   0000070C   0x.... 0x....      LDR.W    LR,??DataTable17
   \   00000710   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000712   0xF804 0xC00E      STRB     R12,[R4, LR]
   \   00000716   0x1C64             ADDS     R4,R4,#+1
   \   00000718   0xE7EC             B.N      ??across_smile_24
   2253           /* {
   2254                center_white[i] = right_black[i] - (right_black[bottom_whitebase]-center_white[bottom_whitebase]);
   2255                  left_black[i] = center_white[i] - (right_black[bottom_whitebase]-center_white[bottom_whitebase]);
   2256                  if( center_white[i] < 1)
   2257                    center_white[i] = 0;
   2258                  if(left_black[i] < 1)
   2259                    left_black[i] = 0;
   2260            }*/
   2261            }
   2262            else
   2263            {
   2264              
   2265            }
   2266                                                                                                
   2267          }
   2268          }
   2269          
   2270          else if(turn_r==1)
   \                     ??across_smile_14: (+1)
   \   0000071A   0x.... 0x....      LDR.W    R12,??DataTable17_3
   \   0000071E   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000722   0xF1BC 0x0F00      CMP      R12,#+0
   \   00000726   0xF000 0x80B8      BEQ.W    ??across_smile_25
   2271          { 
   2272            GPIO_SET(PORTB, 10,0);
   \   0000072A   0x.... 0x....      LDR.W    R12,??DataTable15_1
   \   0000072E   0xF8DC 0xC004      LDR      R12,[R12, #+4]
   \   00000732   0xF8DC 0xC000      LDR      R12,[R12, #+0]
   \   00000736   0xF43C 0x6C80      BICS     R12,R12,#0x400
   \   0000073A   0x.... 0x....      LDR.W    LR,??DataTable15_1
   \   0000073E   0xF8DE 0xE004      LDR      LR,[LR, #+4]
   \   00000742   0xF8CE 0xC000      STR      R12,[LR, #+0]
   2273            if( tage!=bottom_whitebase-3&&tage!=0)
   \   00000746   0x.... 0x....      LDR.W    R12,??DataTable14
   \   0000074A   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   0000074E   0xF1BC 0x0C03      SUBS     R12,R12,#+3
   \   00000752   0x4562             CMP      R2,R12
   \   00000754   0xD056             BEQ.N    ??across_smile_26
   \   00000756   0x2A00             CMP      R2,#+0
   \   00000758   0xD054             BEQ.N    ??across_smile_26
   2274            {
   2275          
   2276          for(i =bottom_whitebase; i<=control_top_whiteline;i++)
   \   0000075A   0x.... 0x....      LDR.W    R12,??DataTable14
   \   0000075E   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000762   0x4664             MOV      R4,R12
   \                     ??across_smile_27: (+1)
   \   00000764   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   00000768   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   0000076C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000076E   0x45A4             CMP      R12,R4
   \   00000770   0xF0C0 0x80A1      BCC.W    ??across_smile_17
   2277                   {                                                                    
   2278                    record =-huanjie+ center_white[bottom_whitebase] + (i -bottom_whitebase)*(right_black[tage+3]-center_white[bottom_whitebase])/( tage+3-bottom_whitebase );  
   \   00000774   0x.... 0x....      LDR.W    R12,??DataTable17
   \   00000778   0x.... 0x....      LDR.W    LR,??DataTable14
   \   0000077C   0xF89E 0xE000      LDRB     LR,[LR, #+0]
   \   00000780   0xF81E 0xC00C      LDRB     R12,[LR, R12]
   \   00000784   0x.... 0x....      LDR.W    LR,??DataTable21
   \   00000788   0xF89E 0xE000      LDRB     LR,[LR, #+0]
   \   0000078C   0xEBBC 0x0C0E      SUBS     R12,R12,LR
   \   00000790   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000792   0x.... 0x....      LDR.W    LR,??DataTable14
   \   00000796   0xF89E 0xE000      LDRB     LR,[LR, #+0]
   \   0000079A   0xEBB4 0x0E0E      SUBS     LR,R4,LR
   \   0000079E   0x.... 0x....      LDR.W    R8,??DataTable17_5
   \   000007A2   0xEB12 0x0808      ADDS     R8,R2,R8
   \   000007A6   0xF898 0x8003      LDRB     R8,[R8, #+3]
   \   000007AA   0x.... 0x....      LDR.W    R9,??DataTable17
   \   000007AE   0x.... 0x....      LDR.W    R10,??DataTable14
   \   000007B2   0xF89A 0xA000      LDRB     R10,[R10, #+0]
   \   000007B6   0xF81A 0x9009      LDRB     R9,[R10, R9]
   \   000007BA   0xEBB8 0x0809      SUBS     R8,R8,R9
   \   000007BE   0xFB08 0xFE0E      MUL      LR,R8,LR
   \   000007C2   0xF112 0x0803      ADDS     R8,R2,#+3
   \   000007C6   0x.... 0x....      LDR.W    R9,??DataTable14
   \   000007CA   0xF899 0x9000      LDRB     R9,[R9, #+0]
   \   000007CE   0xEBB8 0x0809      SUBS     R8,R8,R9
   \   000007D2   0xFB9E 0xFEF8      SDIV     LR,LR,R8
   \   000007D6   0xEB1E 0x0C0C      ADDS     R12,LR,R12
   \   000007DA   0x4661             MOV      R1,R12
   2279                    if( record<=MID)
   \   000007DC   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000007DE   0x294F             CMP      R1,#+79
   \   000007E0   0xDA03             BGE.N    ??across_smile_28
   2280                        record=MID;
   \   000007E2   0xF05F 0x0C4E      MOVS     R12,#+78
   \   000007E6   0x4661             MOV      R1,R12
   \   000007E8   0xE005             B.N      ??across_smile_29
   2281          
   2282                    else if( record>=COLUMN-1)
   \                     ??across_smile_28: (+1)
   \   000007EA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000007EC   0x299C             CMP      R1,#+156
   \   000007EE   0xDB02             BLT.N    ??across_smile_29
   2283                        record=COLUMN-1;
   \   000007F0   0xF05F 0x0C9C      MOVS     R12,#+156
   \   000007F4   0x4661             MOV      R1,R12
   2284                    center_white[i]=(uint8)record;
   \                     ??across_smile_29: (+1)
   \   000007F6   0x.... 0x....      LDR.W    R12,??DataTable17
   \   000007FA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000007FC   0xF804 0x100C      STRB     R1,[R4, R12]
   2285                   }	
   \   00000800   0x1C64             ADDS     R4,R4,#+1
   \   00000802   0xE7AF             B.N      ??across_smile_27
   2286          
   2287          
   2288          
   2289          }
   2290          else if(tage==0)
   \                     ??across_smile_26: (+1)
   \   00000804   0x2A00             CMP      R2,#+0
   \   00000806   0xD156             BNE.N    ??across_smile_17
   2291          {
   2292            for(i =bottom_whitebase; i<=control_top_whiteline;i++)
   \   00000808   0x.... 0x....      LDR.W    R12,??DataTable14
   \   0000080C   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000810   0x4664             MOV      R4,R12
   \                     ??across_smile_30: (+1)
   \   00000812   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   00000816   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   0000081A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000081C   0x45A4             CMP      R12,R4
   \   0000081E   0xD312             BCC.N    ??across_smile_31
   2293            {
   2294              if(Row_state[i]==1||right_black[i]>=COLUMN-2)
   \   00000820   0x.... 0x....      LDR.W    R12,??DataTable17_4
   \   00000824   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000826   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   0000082A   0xF1BC 0x0F01      CMP      R12,#+1
   \   0000082E   0xD007             BEQ.N    ??across_smile_32
   \   00000830   0x.... 0x....      LDR.W    R12,??DataTable17_5
   \   00000834   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000836   0xF814 0xC00C      LDRB     R12,[R4, R12]
   \   0000083A   0xF1BC 0x0F9B      CMP      R12,#+155
   \   0000083E   0xDB00             BLT.N    ??across_smile_33
   2295              {
   2296                count_tt++;
   \                     ??across_smile_32: (+1)
   \   00000840   0x1C5B             ADDS     R3,R3,#+1
   2297              }
   2298            }
   \                     ??across_smile_33: (+1)
   \   00000842   0x1C64             ADDS     R4,R4,#+1
   \   00000844   0xE7E5             B.N      ??across_smile_30
   2299            
   2300            if(count_tt>=(bottom_whitebase+control_top_whiteline)/3)
   \                     ??across_smile_31: (+1)
   \   00000846   0x.... 0x....      LDR.W    R12,??DataTable14
   \   0000084A   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   0000084E   0x.... 0x....      LDR.W    LR,??DataTable17_1
   \   00000852   0xF8BE 0xE000      LDRH     LR,[LR, #+0]
   \   00000856   0xEB1E 0x0C0C      ADDS     R12,LR,R12
   \   0000085A   0xF05F 0x0E03      MOVS     LR,#+3
   \   0000085E   0xFB9C 0xFCFE      SDIV     R12,R12,LR
   \   00000862   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   00000864   0x4563             CMP      R3,R12
   \   00000866   0xDB26             BLT.N    ??across_smile_17
   2301            {
   2302              for(i =bottom_whitebase; i<=control_top_whiteline;i++)
   \   00000868   0x.... 0x....      LDR.W    R12,??DataTable14
   \   0000086C   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000870   0x4664             MOV      R4,R12
   \                     ??across_smile_34: (+1)
   \   00000872   0x.... 0x....      LDR.W    R12,??DataTable17_1
   \   00000876   0xF8BC 0xC000      LDRH     R12,[R12, #+0]
   \   0000087A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000087C   0x45A4             CMP      R12,R4
   \   0000087E   0xD31A             BCC.N    ??across_smile_17
   2303               center_white[i] =COLUMN-huanjie;
   \   00000880   0x.... 0x....      LDR.W    R12,??DataTable21
   \   00000884   0xF89C 0xC000      LDRB     R12,[R12, #+0]
   \   00000888   0xF1DC 0x0C9D      RSBS     R12,R12,#+157
   \   0000088C   0x.... 0x....      LDR.W    LR,??DataTable17
   \   00000890   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000892   0xF804 0xC00E      STRB     R12,[R4, LR]
   \   00000896   0x1C64             ADDS     R4,R4,#+1
   \   00000898   0xE7EB             B.N      ??across_smile_34
   2304              /*{
   2305                  center_white[i] = left_black[i] + (center_white[bottom_whitebase]-left_black[bottom_whitebase]);
   2306                  right_black[i] = center_white[i] + (center_white[bottom_whitebase]-left_black[bottom_whitebase]);
   2307                  if( center_white[i] > COLUMN - 1)
   2308                    center_white[i] = COLUMN - 1;
   2309                  if(right_black[i] > COLUMN - 1)
   2310                    right_black[i] = COLUMN - 1;
   2311              }*/
   2312            }
   2313            else
   2314            {
   2315              
   2316            }
   2317            
   2318            }
   2319          }
   2320          
   2321          else
   2322          {
   2323              GPIO_SET(PORTB, 10,1);
   \                     ??across_smile_25: (+1)
   \   0000089A   0x.... 0x....      LDR.W    R12,??DataTable15_1
   \   0000089E   0xF8DC 0xC004      LDR      R12,[R12, #+4]
   \   000008A2   0xF8DC 0xC000      LDR      R12,[R12, #+0]
   \   000008A6   0xF45C 0x6C80      ORRS     R12,R12,#0x400
   \   000008AA   0x.... 0x....      LDR.W    LR,??DataTable15_1
   \   000008AE   0xF8DE 0xE004      LDR      LR,[LR, #+4]
   \   000008B2   0xF8CE 0xC000      STR      R12,[LR, #+0]
   2324          }
   2325          
   2326          }
   \                     ??across_smile_17: (+1)
   \   000008B6   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   2327           
   2328          //--------------------------------------------------------------------------------------------------
   2329          
   2330          
   2331          
   2332          //-------------------------------------------------------------------------------------------------
   2333          
   2334           
   2335          //--------------------------------------------------------------------------------------------------
   2336          

   \                                 In section .text, align 2, keep-with-next
   2337          void GetPower()
   2338          {
   \                     GetPower: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   2339                 
   2340            adc_start(ADC0, AD14, ADC_10bit );
   \   00000002   0x2202             MOVS     R2,#+2
   \   00000004   0x210E             MOVS     R1,#+14
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       adc_start
   2341                  
   2342            V=ad_ave(ADC0, AD14, ADC_10bit,10 )*9.43/1024.0;
   \   0000000C   0x230A             MOVS     R3,#+10
   \   0000000E   0x2202             MOVS     R2,#+2
   \   00000010   0x210E             MOVS     R1,#+14
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       ad_ave
   \   00000018   0x.... 0x....      BL       __aeabi_f2d
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable24  ;; 0xf5c28f5c
   \   00000020   0x.... 0x....      LDR.W    R3,??DataTable24_1  ;; 0x4022dc28
   \   00000024   0x.... 0x....      BL       __aeabi_dmul
   \   00000028   0x2200             MOVS     R2,#+0
   \   0000002A   0x.... 0x....      LDR.W    R3,??DataTable24_2  ;; 0x40900000
   \   0000002E   0x.... 0x....      BL       __aeabi_ddiv
   \   00000032   0x.... 0x....      BL       __aeabi_d2f
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable25
   \   0000003A   0x6008             STR      R0,[R1, #+0]
   2343            
   2344            adc_stop(ADC0);
   \   0000003C   0x2000             MOVS     R0,#+0
   \   0000003E   0x.... 0x....      BL       adc_stop
   2345          }
   \   00000042   0xBD01             POP      {R0,PC}          ;; return
   2346          /*------------------------------------------------------------------------------
   2347                                              AD采样，均值                                                     
   2348          ------------------------------------------------------------------------------*/
   2349          

   \                                 In section .text, align 4, keep-with-next
   2350          void GetADValue(void) //查询方式,8位精度，右对齐，数据存放在ATDDRLx
   2351          {  uint8 i=0; 
   \                     GetADValue: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x2400             MOVS     R4,#+0
   2352            adc_start(ADC1, AD10, ADC_10bit );
   \   00000004   0x2202             MOVS     R2,#+2
   \   00000006   0x210A             MOVS     R1,#+10
   \   00000008   0x2001             MOVS     R0,#+1
   \   0000000A   0x.... 0x....      BL       adc_start
   2353            
   2354            AD_AngleData[0] = ad_ave(ADC1, AD10, ADC_10bit,30 );     //结果
   \   0000000E   0x231E             MOVS     R3,#+30
   \   00000010   0x2202             MOVS     R2,#+2
   \   00000012   0x210A             MOVS     R1,#+10
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      BL       ad_ave
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable24_3
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   2355            
   2356            adc_stop(ADC1);
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x.... 0x....      BL       adc_stop
   2357            
   2358             for(i = 50; i > 0; i--)
   \   00000026   0x2032             MOVS     R0,#+50
   \   00000028   0x0004             MOVS     R4,R0
   \                     ??GetADValue_0: (+1)
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0x2C00             CMP      R4,#+0
   \   0000002E   0xD002             BEQ.N    ??GetADValue_1
   2359                  {
   2360                      asm("nop") ;
   \   00000030   0xBF00             nop
   2361                  }
   \   00000032   0x1E64             SUBS     R4,R4,#+1
   \   00000034   0xE7F9             B.N      ??GetADValue_0
   2362            
   2363            
   2364            adc_start(ADC1, AD11, ADC_10bit );
   \                     ??GetADValue_1: (+1)
   \   00000036   0x2202             MOVS     R2,#+2
   \   00000038   0x210B             MOVS     R1,#+11
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0x.... 0x....      BL       adc_start
   2365            
   2366            AD_AngleData[1] = ad_ave(ADC1, AD11, ADC_10bit,50 );
   \   00000040   0x2332             MOVS     R3,#+50
   \   00000042   0x2202             MOVS     R2,#+2
   \   00000044   0x210B             MOVS     R1,#+11
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0x.... 0x....      BL       ad_ave
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable24_3
   \   00000050   0x6048             STR      R0,[R1, #+4]
   2367             adc_stop(ADC1);
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x.... 0x....      BL       adc_stop
   2368                        
   2369          }
   \   00000058   0xBD10             POP      {R4,PC}          ;; return
   2370          /*------------------------------------------------------------------------------
   2371                                                   角度环控制                                                  
   2372          ------------------------------------------------------------------------------*/
   2373          
   2374          
   2375          /*2.计算角度*///0626改

   \                                 In section .bss, align 4
   2376           float tmp=0;
   \                     tmp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   2377           float temp1[3]={0};
   \                     temp1:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   2378           float temp2[3]={0};
   \                     temp2:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   2379           float last_acce_angle=0;
   \                     last_acce_angle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   2380           float Angle[5]={0};
   \                     Angle:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   2381           float  AcceData[3]={0};
   \                     AcceData:
   \   00000000                      DS8 12
   2382          //uint8 Rg=15; 

   \                                 In section .bss, align 4
   2383          float Rgr;
   \                     Rgr:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   2384          float pre_Lastgyro=0,Lastgyro=0;                     //用于陀螺仪中值滤波的递推赋值
   \                     pre_Lastgyro:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Lastgyro:
   \   00000000                      DS8 4
   2385          

   \                                 In section .text, align 2, keep-with-next
   2386          void GetAngle() 
   2387          {         
   \                     GetAngle: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   2388                    uint16 i=0;
   \   00000004   0x2400             MOVS     R4,#+0
   2389                    float tempa,tempb,tempc,max,min;             //用于陀螺仪的均值滤波
   2390                    acce = AD_AngleData[1]*3.22265625;		                        //角度校正  //静态值 360    352
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   0000000A   0x6840             LDR      R0,[R0, #+4]
   \   0000000C   0x.... 0x....      BL       __aeabi_f2d
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0x.... 0x....      LDR.W    R3,??DataTable24_4  ;; 0x4009c800
   \   00000016   0x.... 0x....      BL       __aeabi_dmul
   \   0000001A   0x.... 0x....      BL       __aeabi_d2f
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable24_5
   \   00000022   0x6008             STR      R0,[R1, #+0]
   2391                    
   2392                    acce_offset=acce_static-acce;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable24_6
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable24_5
   \   0000002E   0x6809             LDR      R1,[R1, #+0]
   \   00000030   0x.... 0x....      BL       __aeabi_fsub
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable24_7
   \   00000038   0x6008             STR      R0,[R1, #+0]
   2393                    acce_G = acce_offset/800;                                     //这里得到角度的正弦值
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable24_7
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable24_8  ;; 0x44480000
   \   00000044   0x.... 0x....      BL       __aeabi_fdiv
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable24_9
   \   0000004C   0x6008             STR      R0,[R1, #+0]
   2394                    
   2395                     
   2396                    if(acce_G >1 ) acce_G = 1;                                    //算出的值可能大于1或小于-1，是错的，所以限下幅            
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable24_9
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable24_10  ;; 0x3f800001
   \   00000058   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000005C   0xD804             BHI.N    ??GetAngle_0
   \   0000005E   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable24_9
   \   00000066   0x6008             STR      R0,[R1, #+0]
   2397                    if(acce_G <-1) acce_G = -1;
   \                     ??GetAngle_0: (+1)
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable24_9
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable24_11  ;; 0xbf800000
   \   00000072   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000076   0xD204             BCS.N    ??GetAngle_1
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable24_11  ;; 0xbf800000
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable24_9
   \   00000080   0x6008             STR      R0,[R1, #+0]
   2398                               
   2399                    acce_angle = 180/3.1416*asin(acce_G);                         //asin求反正弦，得出的单位是弧度，*180/pi得到角度值                                
   \                     ??GetAngle_1: (+1)
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable24_9
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x.... 0x....      BL       __aeabi_f2d
   \   0000008C   0x.... 0x....      BL       asin
   \   00000090   0x.... 0x....      LDR.W    R2,??DataTable24_12  ;; 0xb6774c14
   \   00000094   0x.... 0x....      LDR.W    R3,??DataTable24_13  ;; 0x404ca5d7
   \   00000098   0x.... 0x....      BL       __aeabi_dmul
   \   0000009C   0x.... 0x....      BL       __aeabi_d2f
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable24_14
   \   000000A4   0x6008             STR      R0,[R1, #+0]
   2400               
   2401                    /*temp1[0]=temp1[1];
   2402                    temp1[1]=temp1[2];
   2403                    temp1[2]=acce_angle;*/
   2404           
   2405                    //acce_angle=(last_acce_angle+acce_angle)/2.0;//考虑增大均值范围
   2406                    //last_acce_angle=acce_angle;
   2407                    
   2408                     for(i=2;i>=1;i--)                                                   //历史数据的处理
   \   000000A6   0x2002             MOVS     R0,#+2
   \   000000A8   0x0004             MOVS     R4,R0
   \                     ??GetAngle_2: (+1)
   \   000000AA   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000AC   0x2C00             CMP      R4,#+0
   \   000000AE   0xD00D             BEQ.N    ??GetAngle_3
   2409                      {   
   2410                              AcceData[i] = AcceData[i-1];
   \   000000B0   0x.... 0x....      LDR.W    R0,??DataTable24_15
   \   000000B4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000B6   0xEB10 0x0084      ADDS     R0,R0,R4, LSL #+2
   \   000000BA   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable24_15
   \   000000C2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000C4   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   2411                      }	
   \   000000C8   0x1E64             SUBS     R4,R4,#+1
   \   000000CA   0xE7EE             B.N      ??GetAngle_2
   2412                    AcceData[0] = acce_angle;
   \                     ??GetAngle_3: (+1)
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable24_14
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable24_15
   \   000000D6   0x6008             STR      R0,[R1, #+0]
   2413                    
   2414                    acce_angle= (AcceData[ 0 ]+AcceData[ 1 ])/2.0; 
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable24_15
   \   000000DC   0x6801             LDR      R1,[R0, #+0]
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable24_15
   \   000000E2   0x6840             LDR      R0,[R0, #+4]
   \   000000E4   0x.... 0x....      BL       __aeabi_fadd
   \   000000E8   0x.... 0x....      BL       __aeabi_f2d
   \   000000EC   0x2200             MOVS     R2,#+0
   \   000000EE   0xF05F 0x4380      MOVS     R3,#+1073741824
   \   000000F2   0x.... 0x....      BL       __aeabi_ddiv
   \   000000F6   0x.... 0x....      BL       __aeabi_d2f
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable24_14
   \   000000FE   0x6008             STR      R0,[R1, #+0]
   2415                 
   2416          	  gyro =AD_AngleData[0]*3.22265625;
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable24_3
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0x.... 0x....      BL       __aeabi_f2d
   \   0000010A   0x2200             MOVS     R2,#+0
   \   0000010C   0x.... 0x....      LDR.W    R3,??DataTable24_4  ;; 0x4009c800
   \   00000110   0x.... 0x....      BL       __aeabi_dmul
   \   00000114   0x.... 0x....      BL       __aeabi_d2f
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable24_16
   \   0000011C   0x6008             STR      R0,[R1, #+0]
   2417                    
   2418                    
   2419                    tempa=pre_Lastgyro;
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable24_17
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0x4681             MOV      R9,R0
   2420                    tempb=Lastgyro;
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable24_18
   \   0000012A   0x6800             LDR      R0,[R0, #+0]
   \   0000012C   0x4680             MOV      R8,R0
   2421                    tempc=gyro;  
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable24_16
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x0005             MOVS     R5,R0
   2422                    max = tempa > tempb ? tempa:tempb;//??????
   \   00000136   0x4640             MOV      R0,R8
   \   00000138   0x4649             MOV      R1,R9
   \   0000013A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000013E   0xD201             BCS.N    ??GetAngle_4
   \   00000140   0x464E             MOV      R6,R9
   \   00000142   0xE000             B.N      ??GetAngle_5
   \                     ??GetAngle_4: (+1)
   \   00000144   0x4646             MOV      R6,R8
   2423                    max = max > tempc ? max:tempc;
   \                     ??GetAngle_5: (+1)
   \   00000146   0x0028             MOVS     R0,R5
   \   00000148   0x0031             MOVS     R1,R6
   \   0000014A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000014E   0xD300             BCC.N    ??GetAngle_6
   \                     ??GetAngle_7: (+1)
   \   00000150   0x002E             MOVS     R6,R5
   2424                    min = tempa < tempb ? tempa:tempb;
   \                     ??GetAngle_6: (+1)
   \   00000152   0x4648             MOV      R0,R9
   \   00000154   0x4641             MOV      R1,R8
   \   00000156   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000015A   0xD201             BCS.N    ??GetAngle_8
   \   0000015C   0x464F             MOV      R7,R9
   \   0000015E   0xE000             B.N      ??GetAngle_9
   \                     ??GetAngle_8: (+1)
   \   00000160   0x4647             MOV      R7,R8
   2425                    min = min < tempc ? min:tempc;
   \                     ??GetAngle_9: (+1)
   \   00000162   0x0038             MOVS     R0,R7
   \   00000164   0x0029             MOVS     R1,R5
   \   00000166   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000016A   0xD300             BCC.N    ??GetAngle_10
   \                     ??GetAngle_11: (+1)
   \   0000016C   0x002F             MOVS     R7,R5
   2426                    if(tempa > min && tempa < max)  gyro = tempa;
   \                     ??GetAngle_10: (+1)
   \   0000016E   0x0038             MOVS     R0,R7
   \   00000170   0x4649             MOV      R1,R9
   \   00000172   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000176   0xD208             BCS.N    ??GetAngle_12
   \   00000178   0x4648             MOV      R0,R9
   \   0000017A   0x0031             MOVS     R1,R6
   \   0000017C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000180   0xD203             BCS.N    ??GetAngle_12
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable24_16
   \   00000186   0xF8C0 0x9000      STR      R9,[R0, #+0]
   2427                    if(tempb > min  && tempb < max )  gyro = tempb;
   \                     ??GetAngle_12: (+1)
   \   0000018A   0x0038             MOVS     R0,R7
   \   0000018C   0x4641             MOV      R1,R8
   \   0000018E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000192   0xD208             BCS.N    ??GetAngle_13
   \   00000194   0x4640             MOV      R0,R8
   \   00000196   0x0031             MOVS     R1,R6
   \   00000198   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000019C   0xD203             BCS.N    ??GetAngle_13
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable24_16
   \   000001A2   0xF8C0 0x8000      STR      R8,[R0, #+0]
   2428                    if(tempc > min  &&  tempc < max)  gyro = tempc;  
   \                     ??GetAngle_13: (+1)
   \   000001A6   0x0038             MOVS     R0,R7
   \   000001A8   0x0029             MOVS     R1,R5
   \   000001AA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001AE   0xD207             BCS.N    ??GetAngle_14
   \   000001B0   0x0028             MOVS     R0,R5
   \   000001B2   0x0031             MOVS     R1,R6
   \   000001B4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001B8   0xD202             BCS.N    ??GetAngle_14
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable24_16
   \   000001BE   0x6005             STR      R5,[R0, #+0]
   2429                    
   2430                    pre_Lastgyro = Lastgyro;                                //角速度递推赋值
   \                     ??GetAngle_14: (+1)
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable24_18
   \   000001C4   0x6800             LDR      R0,[R0, #+0]
   \   000001C6   0x.... 0x....      LDR.W    R1,??DataTable24_17
   \   000001CA   0x6008             STR      R0,[R1, #+0]
   2431                    Lastgyro = gyro;/**/
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable24_16
   \   000001D0   0x6800             LDR      R0,[R0, #+0]
   \   000001D2   0x.... 0x....      LDR.W    R1,??DataTable24_18
   \   000001D6   0x6008             STR      R0,[R1, #+0]
   2432                    gyro_offset= gyro-GYRO_STATIC;                             //-GYRO_STATIC;
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable24_16
   \   000001DC   0x6800             LDR      R0,[R0, #+0]
   \   000001DE   0x.... 0x....      LDR.W    R1,??DataTable24_19
   \   000001E2   0x6809             LDR      R1,[R1, #+0]
   \   000001E4   0x.... 0x....      BL       __aeabi_fsub
   \   000001E8   0x.... 0x....      LDR.W    R1,??DataTable24_20
   \   000001EC   0x6008             STR      R0,[R1, #+0]
   2433                    w= gyro_offset/3.417;     //0.67mv/g                                    //角速度值-静态值    w= ( gyro - GYRO_OFF )/6.7;  
   \   000001EE   0x.... 0x....      LDR.W    R0,??DataTable24_20
   \   000001F2   0x6800             LDR      R0,[R0, #+0]
   \   000001F4   0x.... 0x....      BL       __aeabi_f2d
   \   000001F8   0x.... 0x....      LDR.W    R2,??DataTable24_21  ;; 0x189374bc
   \   000001FC   0x.... 0x....      LDR.W    R3,??DataTable24_22  ;; 0x400b5604
   \   00000200   0x.... 0x....      BL       __aeabi_ddiv
   \   00000204   0x.... 0x....      BL       __aeabi_d2f
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable24_23
   \   0000020C   0x6008             STR      R0,[R1, #+0]
   2434               
   2435                    
   2436                   
   2437                    
   2438                   
   2439                      ////0.9////////////////////////////////////////////////////////////////////////
   2440                     g_nCarAngle+= ( ft*w +( acce_angle - g_nCarAngle ) )*0.00125;//0.9偏大  
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable26
   \   00000212   0x6800             LDR      R0,[R0, #+0]
   \   00000214   0x.... 0x....      BL       __aeabi_f2d
   \   00000218   0x4682             MOV      R10,R0
   \   0000021A   0x468B             MOV      R11,R1
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable24_24
   \   00000220   0x6801             LDR      R1,[R0, #+0]
   \   00000222   0x.... 0x....      LDR.W    R0,??DataTable24_23
   \   00000226   0x6800             LDR      R0,[R0, #+0]
   \   00000228   0x.... 0x....      BL       __aeabi_fmul
   \   0000022C   0x9000             STR      R0,[SP, #+0]
   \   0000022E   0x.... 0x....      LDR.W    R0,??DataTable24_14
   \   00000232   0x6800             LDR      R0,[R0, #+0]
   \   00000234   0x.... 0x....      LDR.W    R1,??DataTable26
   \   00000238   0x6809             LDR      R1,[R1, #+0]
   \   0000023A   0x.... 0x....      BL       __aeabi_fsub
   \   0000023E   0x9900             LDR      R1,[SP, #+0]
   \   00000240   0x.... 0x....      BL       __aeabi_fadd
   \   00000244   0x.... 0x....      BL       __aeabi_f2d
   \   00000248   0x.... 0x....      LDR.W    R2,??DataTable25_1  ;; 0x47ae147b
   \   0000024C   0x.... 0x....      LDR.W    R3,??DataTable25_2  ;; 0x3f547ae1
   \   00000250   0x.... 0x....      BL       __aeabi_dmul
   \   00000254   0x4652             MOV      R2,R10
   \   00000256   0x465B             MOV      R3,R11
   \   00000258   0x.... 0x....      BL       __aeabi_dadd
   \   0000025C   0x.... 0x....      BL       __aeabi_d2f
   \   00000260   0x.... 0x....      LDR.W    R1,??DataTable26
   \   00000264   0x6008             STR      R0,[R1, #+0]
   2441                     
   2442                   /*  for(i=4;i>=1;i--)                                                 //历史数据的处理
   2443                    {   
   2444                       Angle[i] = Angle[i-1];
   2445                    }
   2446                       Angle[0] = g_nCarAngle;
   2447                    
   2448                     g_nCarAngle=(Angle[0]+Angle[1])/2;*//* */                 
   2449          }  
   \   00000266   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   2450          
   2451              
   2452          /*3.角度控制*/
   2453          
   2454            
   2455          

   \                                 In section .text, align 2, keep-with-next
   2456          void  CarAngleAdjust()                                          //要调整输出值与周期之间的比例
   2457          {last_anglePD = anglePD;
   \                     CarAngleAdjust: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable28
   \   00000006   0x8800             LDRH     R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable25_3
   \   0000000C   0x8008             STRH     R0,[R1, #+0]
   2458          
   2459          if(turn_l==1||turn_r==1)
   \   0000000E   0x....             LDR.N    R0,??DataTable17_2
   \   00000010   0x7800             LDRB     R0,[R0, #+0]
   \   00000012   0x....             LDR.N    R1,??DataTable17_3
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0x4308             ORRS     R0,R1,R0
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD00C             BEQ.N    ??CarAngleAdjust_0
   2460          {
   2461            angle_kp_set=angle_kp_across;
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable25_4
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable25_5
   \   00000028   0x6008             STR      R0,[R1, #+0]
   2462            angle_kd_set=angle_kd_across;
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable25_6
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable25_7
   \   00000034   0x6008             STR      R0,[R1, #+0]
   \   00000036   0xE00B             B.N      ??CarAngleAdjust_1
   2463          }
   2464          
   2465          else
   2466          {
   2467            angle_kp_set=angle_kp;
   \                     ??CarAngleAdjust_0: (+1)
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable25_8
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable25_5
   \   00000042   0x6008             STR      R0,[R1, #+0]
   2468            angle_kd_set=angle_kd;
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable26_1
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable25_7
   \   0000004E   0x6008             STR      R0,[R1, #+0]
   2469          }
   2470            anglePD =(int16)(g_nCarAngle* angle_kp_set  +  angle_kd_set*w);   
   \                     ??CarAngleAdjust_1: (+1)
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable26
   \   00000054   0x6801             LDR      R1,[R0, #+0]
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable25_5
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0x.... 0x....      BL       __aeabi_fmul
   \   00000060   0x0004             MOVS     R4,R0
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable25_7
   \   00000066   0x6801             LDR      R1,[R0, #+0]
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable24_23
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       __aeabi_fmul
   \   00000072   0x0021             MOVS     R1,R4
   \   00000074   0x.... 0x....      BL       __aeabi_fadd
   \   00000078   0x.... 0x....      BL       __aeabi_f2iz
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable28
   \   00000080   0x8008             STRH     R0,[R1, #+0]
   2471           // anglePD = (int16)(0.8*last_anglePD + anglePD*0.2);               //平滑输出，意义不太大吧                                                                                        
   2472          }
   \   00000082   0xBD10             POP      {R4,PC}          ;; return
   2473          
   2474          
   2475          /*------------------------------------------------------------------------------
   2476                                                  速度闭环控制                                                 
   2477          ------------------------------------------------------------------------------*/ 
   2478          
   2479          /*速度闭环控制*/                                       
   2480          

   \                                 In section .text, align 2, keep-with-next
   2481          void  SpeedControl(void)
   2482          {
   \                     SpeedControl: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   2483                    g_nRightCount =FTM1_CNT;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable27  ;; 0x40039004
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable27_1
   \   0000000C   0x8008             STRH     R0,[R1, #+0]
   2484                    g_nLeftCount = ~FTM2_CNT+1;
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable27_2  ;; 0x400b8004
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x43C0             MVNS     R0,R0
   \   00000016   0x1C40             ADDS     R0,R0,#+1
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable27_3
   \   0000001C   0x8008             STRH     R0,[R1, #+0]
   2485                    FTM1_CNT=0;
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable27  ;; 0x40039004
   \   00000024   0x6008             STR      R0,[R1, #+0]
   2486                    FTM2_CNT=0;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable27_2  ;; 0x400b8004
   \   0000002C   0x6008             STR      R0,[R1, #+0]
   2487            
   2488                    LeftRealSpeed =g_nLeftCount*0.06;//+0.25*LeftRealSpeed;	0.08    //比例系数0.062属于经验,对应于200p     p.2125
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable27_3
   \   00000032   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000036   0x.... 0x....      BL       __aeabi_i2d
   \   0000003A   0x.... 0x....      LDR.W    R2,??DataTable27_4  ;; 0xeb851eb8
   \   0000003E   0x.... 0x....      LDR.W    R3,??DataTable27_5  ;; 0x3faeb851
   \   00000042   0x.... 0x....      BL       __aeabi_dmul
   \   00000046   0x.... 0x....      BL       __aeabi_d2f
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable27_6
   \   0000004E   0x6008             STR      R0,[R1, #+0]
   2489                    RightRealSpeed=g_nRightCount*0.06;//+0.25*RightRealSpeed;      //比例系数0.025属于经验,对应于500p  
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable27_1
   \   00000054   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000058   0x.... 0x....      BL       __aeabi_i2d
   \   0000005C   0x.... 0x....      LDR.W    R2,??DataTable27_4  ;; 0xeb851eb8
   \   00000060   0x.... 0x....      LDR.W    R3,??DataTable27_5  ;; 0x3faeb851
   \   00000064   0x.... 0x....      BL       __aeabi_dmul
   \   00000068   0x.... 0x....      BL       __aeabi_d2f
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable27_7
   \   00000070   0x6008             STR      R0,[R1, #+0]
   2490                                  	                             
   2491                    //RealSpeed=( LeftRealSpeed+ RightRealSpeed )/2 ;//
   2492                    RealSpeed=(RightRealSpeed+LeftRealSpeed)/2 ;//0624
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable27_7
   \   00000076   0x6801             LDR      R1,[R0, #+0]
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable27_6
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x.... 0x....      BL       __aeabi_fadd
   \   00000082   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000086   0x.... 0x....      BL       __aeabi_fdiv
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable27_8
   \   0000008E   0x6008             STR      R0,[R1, #+0]
   2493                    Speed_error = Speed-RealSpeed ;
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable27_9
   \   00000094   0x8800             LDRH     R0,[R0, #+0]
   \   00000096   0x.... 0x....      BL       __aeabi_ui2f
   \   0000009A   0x.... 0x....      LDR.W    R1,??DataTable27_8
   \   0000009E   0x6809             LDR      R1,[R1, #+0]
   \   000000A0   0x.... 0x....      BL       __aeabi_fsub
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable27_10
   \   000000A8   0x6008             STR      R0,[R1, #+0]
   2494                    
   2495                    if(Speed_error>Speed_limit)
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable27_11
   \   000000AE   0x8800             LDRH     R0,[R0, #+0]
   \   000000B0   0x.... 0x....      BL       __aeabi_ui2f
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable27_10
   \   000000B8   0x6809             LDR      R1,[R1, #+0]
   \   000000BA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000BE   0xD207             BCS.N    ??SpeedControl_0
   2496                              Speed_error = Speed_limit;
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable27_11
   \   000000C4   0x8800             LDRH     R0,[R0, #+0]
   \   000000C6   0x.... 0x....      BL       __aeabi_ui2f
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable27_10
   \   000000CE   0x6008             STR      R0,[R1, #+0]
   2497                    if(Speed_error<-Speed_limit)
   \                     ??SpeedControl_0: (+1)
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable27_11
   \   000000D4   0x8800             LDRH     R0,[R0, #+0]
   \   000000D6   0x4240             RSBS     R0,R0,#+0
   \   000000D8   0x.... 0x....      BL       __aeabi_i2f
   \   000000DC   0x0001             MOVS     R1,R0
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable27_10
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000E8   0xD208             BCS.N    ??SpeedControl_1
   2498                              Speed_error = -Speed_limit;      
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable27_11
   \   000000EE   0x8800             LDRH     R0,[R0, #+0]
   \   000000F0   0x4240             RSBS     R0,R0,#+0
   \   000000F2   0x.... 0x....      BL       __aeabi_i2f
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable27_10
   \   000000FA   0x6008             STR      R0,[R1, #+0]
   2499                   
   2500           //P控制//  
   2501                    
   2502                    motor_P = speed_kp*Speed_error;        
   \                     ??SpeedControl_1: (+1)
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable27_12
   \   00000100   0x6801             LDR      R1,[R0, #+0]
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable27_10
   \   00000106   0x6800             LDR      R0,[R0, #+0]
   \   00000108   0x.... 0x....      BL       __aeabi_fmul
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable27_13
   \   00000110   0x6008             STR      R0,[R1, #+0]
   2503                   
   2504          //I控制
   2505                     if(motor_I<=500&&motor_I>=-500)
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable27_14
   \   00000116   0x6800             LDR      R0,[R0, #+0]
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable27_15  ;; 0x43fa0001
   \   0000011C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000120   0xD217             BCS.N    ??SpeedControl_2
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable27_14
   \   00000126   0x6800             LDR      R0,[R0, #+0]
   \   00000128   0x.... 0x....      LDR.W    R1,??DataTable27_16  ;; 0xc3fa0000
   \   0000012C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000130   0xD80F             BHI.N    ??SpeedControl_2
   2506                    motor_I +=  speed_ki*Speed_error;
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable28_1
   \   00000136   0x6801             LDR      R1,[R0, #+0]
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable27_10
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0x.... 0x....      BL       __aeabi_fmul
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable27_14
   \   00000146   0x6809             LDR      R1,[R1, #+0]
   \   00000148   0x.... 0x....      BL       __aeabi_fadd
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable27_14
   \   00000150   0x6008             STR      R0,[R1, #+0]
   2507                      
   2508                    SpeedPIDold=SpeedPID;
   \                     ??SpeedControl_2: (+1)
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable28_2
   \   00000156   0x6800             LDR      R0,[R0, #+0]
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable28_3
   \   0000015C   0x6008             STR      R0,[R1, #+0]
   2509                    SpeedPID = motor_P + motor_I;                
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable27_13
   \   00000162   0x6801             LDR      R1,[R0, #+0]
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable27_14
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0x.... 0x....      BL       __aeabi_fadd
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable28_2
   \   00000172   0x6008             STR      R0,[R1, #+0]
   2510          }
   \   00000174   0xBD01             POP      {R0,PC}          ;; return
   2511          
   2512           /*float LeftSpeed_filter=0,LeftSpeed_filter_last=0,  RightSpeed_filter=0,RightSpeed_filter_last=0 ;
   2513          bool jifenflag=0;
   2514          void  SpeedControl(void)
   2515          {         
   2516                    bool jifenflag=0;
   2517                    g_nRightCount =FTM1_CNT;
   2518                    g_nLeftCount = ~FTM2_CNT+1;
   2519                    FTM1_CNT=0;
   2520                    FTM2_CNT=0;
   2521                    LeftSpeed_filter =LeftSpeed_filter_last;
   2522                    RightSpeed_filter  =RightSpeed_filter_last ;
   2523                    
   2524                    LeftSpeed_filter*=0.2;//0.35 	           
   2525                    LeftSpeed_filter+=g_nLeftCount*0.06;// 0.05;      //比例系数0.025属于经验,对应于500p
   2526          
   2527          
   2528          
   2529                    RightSpeed_filter*=0.2;	// 0.35;  
   2530                    RightSpeed_filter+= g_nRightCount*0.06;//;0.05          
   2531                           
   2532            
   2533                   //LeftRealSpeed =g_nLeftCount*0.06;//+0.25*LeftRealSpeed;	0.08    //比例系数0.062属于经验,对应于200p     p.2125
   2534                    //RightRealSpeed=g_nRightCount*0.06;//+0.25*RightRealSpeed;      //比例系数0.025属于经验,对应于500p  
   2535                                  	                             
   2536                    RealSpeed=(  RightSpeed_filter+LeftSpeed_filter )/2 ;//
   2537                    
   2538                    LeftSpeed_filter =0;
   2539                    RightSpeed_filter =0;
   2540                    
   2541                    LeftSpeed_filter_last=LeftSpeed_filter;
   2542                    RightSpeed_filter_last = RightSpeed_filter;
   2543                    
   2544                    Speed_error = Speed_set-RealSpeed ;
   2545                    
   2546                    if(Speed_error>50)
   2547                              Speed_error = 50;
   2548                    if(Speed_error<-50)
   2549                              Speed_error = -50; 
   2550                    
   2551                    //ar_speed_kp();
   2552                    
   2553                    
   2554                     if(Speed_error<=10&&Speed_error>=-10)  //之前为10
   2555                   {
   2556                              jifenflag = 1;
   2557                   }
   2558                   else 
   2559                   {
   2560                              jifenflag =0;
   2561                   }
   2562                   if(jifenflag==1)
   2563                   {
   2564                       motor_I +=  speed_ki*Speed_error;
   2565                   }
   2566                    
   2567                    if(motor_I>500)    
   2568                    {
   2569                      motor_I=500;
   2570                    }
   2571                    
   2572                     if(motor_I<-500)    
   2573                    {
   2574                      motor_I=-500;
   2575                    }
   2576                   
   2577           //P控制//  
   2578                    
   2579                    motor_P = speed_kp*Speed_error;        
   2580                   
   2581          //I控制
   2582                     //if(motor_I<=500&&motor_I>=-500)
   2583                    //motor_I +=  speed_ki*Speed_error;
   2584                    
   2585                   
   2586                    
   2587                    SpeedPIDold=SpeedPID;
   2588                    SpeedPID = motor_P + motor_I;     
   2589                    
   2590                    
   2591                     if(SpeedPID>2500) 
   2592                              SpeedPID = 2500;
   2593                    if(SpeedPID<-2500)
   2594                              SpeedPID = -2500;   
   2595          }*/

   \                                 In section .text, align 2, keep-with-next
   2596          void   SpeedControlOut()
   2597          {
   \                     SpeedControlOut: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   2598                    float temp;
   2599                    temp = SpeedPID - SpeedPIDold;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable28_2
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable28_3
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fsub
   \   00000012   0x0004             MOVS     R4,R0
   2600                    SpeedPIDout = (int16)(temp*(sumbe2 + 1)/50+ SpeedPIDold) ;//+  speeddiff*0;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable28_4
   \   00000018   0x8800             LDRH     R0,[R0, #+0]
   \   0000001A   0x1C40             ADDS     R0,R0,#+1
   \   0000001C   0x.... 0x....      BL       __aeabi_i2f
   \   00000020   0x0021             MOVS     R1,R4
   \   00000022   0x.... 0x....      BL       __aeabi_fmul
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable28_5  ;; 0x42480000
   \   0000002A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable28_3
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x.... 0x....      BL       __aeabi_fadd
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable28_6
   \   00000040   0x8008             STRH     R0,[R1, #+0]
   2601          }
   \   00000042   0xBD10             POP      {R4,PC}          ;; return
   2602          
   2603          /*------------------------------------------------------------------------------
   2604                                            电机输出                                                    
   2605                                    ( 角度+速度+方向=pwm输出)                                          
   2606          ------------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   2607          void CarControlOut()
   2608          {        
   \                     CarControlOut: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   2609                if(jianshu==1)
   \   00000002   0x....             LDR.N    R0,??DataTable20
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD005             BEQ.N    ??CarControlOut_0
   2610                  {
   2611                /*   if( RealSpeed>Speed_set+20)   close=0.1;          
   2612                  else  if( RealSpeed>Speed_set+10)  close=0.15;
   2613                   else  if( RealSpeed>Speed_set-5)      close=0.2;
   2614                      else  if( RealSpeed>Speed_set-15)   close=0.25;
   2615                        else  if( RealSpeed>Speed_set-30)   close=0.3;
   2616                           else     close=0.35;    
   2617                     */
   2618                    close=0.1;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable28_7  ;; 0x3dcccccd
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable28_8
   \   00000012   0x6008             STR      R0,[R1, #+0]
   \   00000014   0xE004             B.N      ??CarControlOut_1
   2619                   }
   2620                   
   2621                   else
   2622                   {
   2623                      close=1.0;
   \                     ??CarControlOut_0: (+1)
   \   00000016   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable28_8
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   2624                   }
   2625                
   2626                   if(lcd_debug==1||start1==0) angleout = 0;
   \                     ??CarControlOut_1: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable28_9
   \   00000024   0x7800             LDRB     R0,[R0, #+0]
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable28_10
   \   0000002A   0x7809             LDRB     R1,[R1, #+0]
   \   0000002C   0xF091 0x0101      EORS     R1,R1,#0x1
   \   00000030   0x4308             ORRS     R0,R1,R0
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD003             BEQ.N    ??CarControlOut_2
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable28_11
   \   0000003E   0x8008             STRH     R0,[R1, #+0]
   2627                   RightSpeedPwm =(int16)(anglePD-SpeedPIDout*close-angleout);        //150  -100
   \                     ??CarControlOut_2: (+1)
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable28
   \   00000044   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000048   0x.... 0x....      BL       __aeabi_i2f
   \   0000004C   0x0004             MOVS     R4,R0
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable28_6
   \   00000052   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000056   0x.... 0x....      BL       __aeabi_i2f
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable28_8
   \   0000005E   0x6809             LDR      R1,[R1, #+0]
   \   00000060   0x.... 0x....      BL       __aeabi_fmul
   \   00000064   0x0001             MOVS     R1,R0
   \   00000066   0x0020             MOVS     R0,R4
   \   00000068   0x.... 0x....      BL       __aeabi_fsub
   \   0000006C   0x0004             MOVS     R4,R0
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable28_11
   \   00000072   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000076   0x.... 0x....      BL       __aeabi_i2f
   \   0000007A   0x0001             MOVS     R1,R0
   \   0000007C   0x0020             MOVS     R0,R4
   \   0000007E   0x.... 0x....      BL       __aeabi_fsub
   \   00000082   0x.... 0x....      BL       __aeabi_f2iz
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable28_12
   \   0000008A   0x8008             STRH     R0,[R1, #+0]
   2628                   LeftSpeedPwm = (int16)(anglePD-SpeedPIDout*close+angleout)+summ;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable28
   \   00000090   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000094   0x.... 0x....      BL       __aeabi_i2f
   \   00000098   0x0004             MOVS     R4,R0
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable28_6
   \   0000009E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000A2   0x.... 0x....      BL       __aeabi_i2f
   \   000000A6   0x.... 0x....      LDR.W    R1,??DataTable28_8
   \   000000AA   0x6809             LDR      R1,[R1, #+0]
   \   000000AC   0x.... 0x....      BL       __aeabi_fmul
   \   000000B0   0x0001             MOVS     R1,R0
   \   000000B2   0x0020             MOVS     R0,R4
   \   000000B4   0x.... 0x....      BL       __aeabi_fsub
   \   000000B8   0x0004             MOVS     R4,R0
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable28_11
   \   000000BE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000C2   0x.... 0x....      BL       __aeabi_i2f
   \   000000C6   0x0021             MOVS     R1,R4
   \   000000C8   0x.... 0x....      BL       __aeabi_fadd
   \   000000CC   0x.... 0x....      BL       __aeabi_f2iz
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable28_13
   \   000000D4   0x7809             LDRB     R1,[R1, #+0]
   \   000000D6   0x1840             ADDS     R0,R0,R1
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable28_14
   \   000000DC   0x8008             STRH     R0,[R1, #+0]
   2629                    
   2630                    if( ting==1||ting_check_stop==1)
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable28_15
   \   000000E2   0x7800             LDRB     R0,[R0, #+0]
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable28_16
   \   000000E8   0x7809             LDRB     R1,[R1, #+0]
   \   000000EA   0x4308             ORRS     R0,R1,R0
   \   000000EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000EE   0x2800             CMP      R0,#+0
   \   000000F0   0xD007             BEQ.N    ??CarControlOut_3
   2631                    {
   2632                 
   2633                      RightSpeedPwm = 0;
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable28_12
   \   000000F8   0x8008             STRH     R0,[R1, #+0]
   2634                      LeftSpeedPwm  = 0;
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable28_14
   \   00000100   0x8008             STRH     R0,[R1, #+0]
   2635                    }
   2636          
   2637                    if(RightSpeedPwm>2500)  RightSpeedPwm = 2500;
   \                     ??CarControlOut_3: (+1)
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \   00000106   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000010A   0xF640 0x11C5      MOVW     R1,#+2501
   \   0000010E   0x4288             CMP      R0,R1
   \   00000110   0xDB04             BLT.N    ??CarControlOut_4
   \   00000112   0xF640 0x10C4      MOVW     R0,#+2500
   \   00000116   0x.... 0x....      LDR.W    R1,??DataTable28_12
   \   0000011A   0x8008             STRH     R0,[R1, #+0]
   2638                    if(RightSpeedPwm<-2500)  RightSpeedPwm = -2500 ;
   \                     ??CarControlOut_4: (+1)
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \   00000120   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable28_17  ;; 0xfffff63c
   \   00000128   0x4288             CMP      R0,R1
   \   0000012A   0xDA04             BGE.N    ??CarControlOut_5
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable28_17  ;; 0xfffff63c
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable28_12
   \   00000134   0x8008             STRH     R0,[R1, #+0]
   2639                    if(LeftSpeedPwm>2500)   LeftSpeedPwm =2500;
   \                     ??CarControlOut_5: (+1)
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable28_14
   \   0000013A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000013E   0xF640 0x11C5      MOVW     R1,#+2501
   \   00000142   0x4288             CMP      R0,R1
   \   00000144   0xDB04             BLT.N    ??CarControlOut_6
   \   00000146   0xF640 0x10C4      MOVW     R0,#+2500
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable28_14
   \   0000014E   0x8008             STRH     R0,[R1, #+0]
   2640                    if(LeftSpeedPwm<-2500)  LeftSpeedPwm = -2500;
   \                     ??CarControlOut_6: (+1)
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable28_14
   \   00000154   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable28_17  ;; 0xfffff63c
   \   0000015C   0x4288             CMP      R0,R1
   \   0000015E   0xDA04             BGE.N    ??CarControlOut_7
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable28_17  ;; 0xfffff63c
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable28_14
   \   00000168   0x8008             STRH     R0,[R1, #+0]
   2641                
   2642                    if(  RightSpeedPwm> 0 )
   \                     ??CarControlOut_7: (+1)
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \   0000016E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000172   0x2801             CMP      R0,#+1
   \   00000174   0xDB0A             BLT.N    ??CarControlOut_8
   2643                    {
   2644                             FTM0_C7V = RightSpeedPwm;                   
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \   0000017A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable28_18  ;; 0x40038048
   \   00000182   0x6008             STR      R0,[R1, #+0]
   2645                             FTM0_C6V = 0;            /////////////////////////////////////////////////////////////////////////////////////////////////////
   \   00000184   0x2000             MOVS     R0,#+0
   \   00000186   0x.... 0x....      LDR.W    R1,??DataTable28_19  ;; 0x40038040
   \   0000018A   0x6008             STR      R0,[R1, #+0]
   2646                             
   2647                              
   2648                    }
   2649                    if(  RightSpeedPwm<= 0)
   \                     ??CarControlOut_8: (+1)
   \   0000018C   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \   00000190   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000194   0x2801             CMP      R0,#+1
   \   00000196   0xDA0B             BGE.N    ??CarControlOut_9
   2650                    {
   2651                             FTM0_C7V = 0;
   \   00000198   0x2000             MOVS     R0,#+0
   \   0000019A   0x.... 0x....      LDR.W    R1,??DataTable28_18  ;; 0x40038048
   \   0000019E   0x6008             STR      R0,[R1, #+0]
   2652                             FTM0_C6V = -RightSpeedPwm;
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable28_12
   \   000001A4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001A8   0x4240             RSBS     R0,R0,#+0
   \   000001AA   0x.... 0x....      LDR.W    R1,??DataTable28_19  ;; 0x40038040
   \   000001AE   0x6008             STR      R0,[R1, #+0]
   2653                           
   2654                    }
   2655          //右轮
   2656                    if(  LeftSpeedPwm > 0 )
   \                     ??CarControlOut_9: (+1)
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable28_14
   \   000001B4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001B8   0x2801             CMP      R0,#+1
   \   000001BA   0xDB0A             BLT.N    ??CarControlOut_10
   2657                    {
   2658                             FTM0_C5V = 0;
   \   000001BC   0x2000             MOVS     R0,#+0
   \   000001BE   0x.... 0x....      LDR.W    R1,??DataTable28_20  ;; 0x40038038
   \   000001C2   0x6008             STR      R0,[R1, #+0]
   2659                             FTM0_C4V = LeftSpeedPwm;
   \   000001C4   0x.... 0x....      LDR.W    R0,??DataTable28_14
   \   000001C8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001CC   0x.... 0x....      LDR.W    R1,??DataTable29  ;; 0x40038030
   \   000001D0   0x6008             STR      R0,[R1, #+0]
   2660                     }
   2661                    if(  LeftSpeedPwm <= 0)
   \                     ??CarControlOut_10: (+1)
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable28_14
   \   000001D6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001DA   0x2801             CMP      R0,#+1
   \   000001DC   0xDA0B             BGE.N    ??CarControlOut_11
   2662                    { 
   2663                            
   2664                             FTM0_C5V =-LeftSpeedPwm;
   \   000001DE   0x.... 0x....      LDR.W    R0,??DataTable28_14
   \   000001E2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001E6   0x4240             RSBS     R0,R0,#+0
   \   000001E8   0x.... 0x....      LDR.W    R1,??DataTable28_20  ;; 0x40038038
   \   000001EC   0x6008             STR      R0,[R1, #+0]
   2665                             FTM0_C4V = 0;
   \   000001EE   0x2000             MOVS     R0,#+0
   \   000001F0   0x.... 0x....      LDR.W    R1,??DataTable29  ;; 0x40038030
   \   000001F4   0x6008             STR      R0,[R1, #+0]
   2666                    }
   2667          }
   \                     ??CarControlOut_11: (+1)
   \   000001F6   0xBD10             POP      {R4,PC}          ;; return
   2668          
   2669          
   2670          
   2671          /*------------------------------------------------------------------------------
   2672                                      串口部分              
   2673          ------------------------------------------------------------------------------*/
   2674          
   2675          
   2676          
   2677          /*超级示波器*/
   2678          

   \                                 In section .bss, align 4
   2679          float OutData[4] = { 0 };
   \                     OutData:
   \   00000000                      DS8 16
   2680          

   \                                 In section .text, align 2, keep-with-next
   2681          unsigned short CRC_CHECK(unsigned char *Buf, unsigned char CRC_CNT)
   2682          {
   \                     CRC_CHECK: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
   \   00000002   0x0002             MOVS     R2,R0
   2683              unsigned short CRC_Temp;
   2684              unsigned char i,j;
   2685              CRC_Temp = 0xffff;
   \   00000004   0xF64F 0x75FF      MOVW     R5,#+65535
   \   00000008   0x0028             MOVS     R0,R5
   2686          
   2687              for (i=0;i<CRC_CNT; i++){      
   \   0000000A   0x2500             MOVS     R5,#+0
   \   0000000C   0x002B             MOVS     R3,R5
   \                     ??CRC_CHECK_0: (+1)
   \   0000000E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x428B             CMP      R3,R1
   \   00000014   0xD216             BCS.N    ??CRC_CHECK_1
   2688                  CRC_Temp ^= Buf[i];
   \   00000016   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000018   0x5C9D             LDRB     R5,[R3, R2]
   \   0000001A   0x4068             EORS     R0,R5,R0
   2689                  for (j=0;j<8;j++) {
   \   0000001C   0x2500             MOVS     R5,#+0
   \   0000001E   0x002C             MOVS     R4,R5
   \                     ??CRC_CHECK_2: (+1)
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x2C08             CMP      R4,#+8
   \   00000024   0xDA0C             BGE.N    ??CRC_CHECK_3
   2690                      if (CRC_Temp & 0x01)
   \   00000026   0x07C5             LSLS     R5,R0,#+31
   \   00000028   0xD506             BPL.N    ??CRC_CHECK_4
   2691                          CRC_Temp = (CRC_Temp >>1 ) ^ 0xa001;
   \   0000002A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000002C   0x0840             LSRS     R0,R0,#+1
   \   0000002E   0xF480 0x4020      EOR      R0,R0,#0xA000
   \   00000032   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000036   0xE001             B.N      ??CRC_CHECK_5
   2692                      else
   2693                          CRC_Temp = CRC_Temp >> 1;
   \                     ??CRC_CHECK_4: (+1)
   \   00000038   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003A   0x0840             LSRS     R0,R0,#+1
   2694                  }
   \                     ??CRC_CHECK_5: (+1)
   \   0000003C   0x1C64             ADDS     R4,R4,#+1
   \   0000003E   0xE7EF             B.N      ??CRC_CHECK_2
   2695              }
   \                     ??CRC_CHECK_3: (+1)
   \   00000040   0x1C5B             ADDS     R3,R3,#+1
   \   00000042   0xE7E4             B.N      ??CRC_CHECK_0
   2696              return(CRC_Temp);
   \                     ??CRC_CHECK_1: (+1)
   \   00000044   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000046   0xBC30             POP      {R4,R5}
   \   00000048   0x4770             BX       LR               ;; return
   2697          }
   2698          

   \                                 In section .bss, align 1
   2699          uint8 j=0;
   \                     j:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
   2700          void OutPut_Data(void)
   2701          {
   \                     OutPut_Data: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
   2702            int temp[4] = {0};
   \   00000004   0xA807             ADD      R0,SP,#+28
   \   00000006   0x2110             MOVS     R1,#+16
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
   2703            unsigned int temp1[4] = {0};
   \   0000000C   0xA803             ADD      R0,SP,#+12
   \   0000000E   0x2110             MOVS     R1,#+16
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
   2704            unsigned char databuf[10] = {0};
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0xC00E             STM      R0!,{R1-R3}
   \   0000001E   0x380C             SUBS     R0,R0,#+12
   2705            unsigned char i;
   2706            unsigned short CRC16 = 0;
   \   00000020   0x2500             MOVS     R5,#+0
   2707            for(i=0;i<4;i++)
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x0004             MOVS     R4,R0
   \                     ??OutPut_Data_0: (+1)
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x2C04             CMP      R4,#+4
   \   0000002A   0xDA14             BGE.N    ??OutPut_Data_1
   2708             {
   2709              
   2710              temp[i]  = (int)OutData[i];
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable29_1
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000036   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003A   0xA907             ADD      R1,SP,#+28
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   2711              temp1[i] = (unsigned int)temp[i];
   \   00000042   0xA807             ADD      R0,SP,#+28
   \   00000044   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000046   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   0000004A   0xA903             ADD      R1,SP,#+12
   \   0000004C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004E   0xF841 0x0024      STR      R0,[R1, R4, LSL #+2]
   2712              
   2713             }
   \   00000052   0x1C64             ADDS     R4,R4,#+1
   \   00000054   0xE7E7             B.N      ??OutPut_Data_0
   2714             
   2715            for(i=0;i<4;i++) 
   \                     ??OutPut_Data_1: (+1)
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x0004             MOVS     R4,R0
   \                     ??OutPut_Data_2: (+1)
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C04             CMP      R4,#+4
   \   0000005E   0xDA19             BGE.N    ??OutPut_Data_3
   2716            {
   2717              databuf[i*2]   = (unsigned char)(temp1[i]%256);
   \   00000060   0xA803             ADD      R0,SP,#+12
   \   00000062   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000064   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000068   0xF44F 0x7180      MOV      R1,#+256
   \   0000006C   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000070   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   00000074   0xA800             ADD      R0,SP,#+0
   \   00000076   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000078   0xF800 0x2014      STRB     R2,[R0, R4, LSL #+1]
   2718              databuf[i*2+1] = (unsigned char)(temp1[i]/256);
   \   0000007C   0xA803             ADD      R0,SP,#+12
   \   0000007E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000080   0xF850 0x0024      LDR      R0,[R0, R4, LSL #+2]
   \   00000084   0x0A00             LSRS     R0,R0,#+8
   \   00000086   0xA900             ADD      R1,SP,#+0
   \   00000088   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008A   0xEB11 0x0144      ADDS     R1,R1,R4, LSL #+1
   \   0000008E   0x7048             STRB     R0,[R1, #+1]
   2719            }
   \   00000090   0x1C64             ADDS     R4,R4,#+1
   \   00000092   0xE7E2             B.N      ??OutPut_Data_2
   2720            
   2721            CRC16 = CRC_CHECK(databuf,8);
   \                     ??OutPut_Data_3: (+1)
   \   00000094   0x2108             MOVS     R1,#+8
   \   00000096   0xA800             ADD      R0,SP,#+0
   \   00000098   0x.... 0x....      BL       CRC_CHECK
   \   0000009C   0x0005             MOVS     R5,R0
   2722            databuf[8] = CRC16%256;
   \   0000009E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000A0   0xF44F 0x7080      MOV      R0,#+256
   \   000000A4   0xFB95 0xF1F0      SDIV     R1,R5,R0
   \   000000A8   0xFB01 0x5110      MLS      R1,R1,R0,R5
   \   000000AC   0xF88D 0x1008      STRB     R1,[SP, #+8]
   2723            databuf[9] = CRC16/256;
   \   000000B0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000B2   0xF44F 0x7080      MOV      R0,#+256
   \   000000B6   0xFB95 0xF0F0      SDIV     R0,R5,R0
   \   000000BA   0xF88D 0x0009      STRB     R0,[SP, #+9]
   2724            
   2725            
   2726            for(i=0;i<10;i++)
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x0004             MOVS     R4,R0
   \                     ??OutPut_Data_4: (+1)
   \   000000C2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C4   0x2C0A             CMP      R4,#+10
   \   000000C6   0xDA07             BGE.N    ??OutPut_Data_5
   2727              uart_putchar(UART0,databuf[i]);
   \   000000C8   0xA800             ADD      R0,SP,#+0
   \   000000CA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000CC   0x5C21             LDRB     R1,[R4, R0]
   \   000000CE   0x2000             MOVS     R0,#+0
   \   000000D0   0x.... 0x....      BL       uart_putchar
   \   000000D4   0x1C64             ADDS     R4,R4,#+1
   \   000000D6   0xE7F4             B.N      ??OutPut_Data_4
   2728            
   2729          }
   \                     ??OutPut_Data_5: (+1)
   \   000000D8   0xB00B             ADD      SP,SP,#+44
   \   000000DA   0xBD30             POP      {R4,R5,PC}       ;; return
   2730          
   2731          

   \                                 In section .bss, align 1
   2732          uint8 put_cnt=0;
   \                     put_cnt:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
   2733          uint8 put_date[11]={0};
   \                     put_date:
   \   00000000                      DS8 12

   \                                 In section .text, align 2, keep-with-next
   2734          void PutDate(){
   \                     PutDate: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   2735            
   2736             
   2737            
   2738             
   2739              put_date[0]=255;
   \   00000002   0x20FF             MOVS     R0,#+255
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable28_21
   \   00000008   0x7008             STRB     R0,[R1, #+0]
   2740              put_date[1]=(uint8)w*10;
   \   0000000A   0x....             LDR.N    R0,??DataTable24_23
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000012   0x210A             MOVS     R1,#+10
   \   00000014   0x4348             MULS     R0,R1,R0
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable28_21
   \   0000001A   0x7048             STRB     R0,[R1, #+1]
   2741              put_date[2]=(uint16)acce& 0x00ff;
   \   0000001C   0x....             LDR.N    R0,??DataTable24_5
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x.... 0x....      BL       __aeabi_f2iz
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable28_21
   \   00000028   0x7088             STRB     R0,[R1, #+2]
   2742              put_date[3]=(uint16)acce>>8;
   \   0000002A   0x....             LDR.N    R0,??DataTable24_5
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000032   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000034   0x0A00             LSRS     R0,R0,#+8
   \   00000036   0x.... 0x....      LDR.W    R1,??DataTable28_21
   \   0000003A   0x70C8             STRB     R0,[R1, #+3]
   2743              put_date[4]=(uint8)GYRO_STATIC/10;
   \   0000003C   0x....             LDR.N    R0,??DataTable24_19
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x.... 0x....      BL       __aeabi_f2iz
   \   00000044   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000046   0x210A             MOVS     R1,#+10
   \   00000048   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable28_21
   \   00000050   0x7108             STRB     R0,[R1, #+4]
   2744           
   2745            
   2746            
   2747              put_date[10]=254;
   \   00000052   0x20FE             MOVS     R0,#+254
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable28_21
   \   00000058   0x7288             STRB     R0,[R1, #+10]
   2748              
   2749              
   2750          //    put_date[0]=255;
   2751          //    put_date[1]=1;
   2752          //    put_date[2]=2;
   2753          //    put_date[3]=2;
   2754          //    put_date[4]=3;
   2755          //    put_date[5]=5;
   2756          //    put_date[6]=6;
   2757          //    put_date[7]=10;
   2758          //    put_date[8]=0;
   2759          //    put_date[9]=7;
   2760          //    put_date[10]=254;
   2761              
   2762              
   2763              
   2764             UART_D_REG(UARTx[UART0])= put_date[put_cnt];
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable28_21
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable29_2
   \   00000062   0x7809             LDRB     R1,[R1, #+0]
   \   00000064   0x5C08             LDRB     R0,[R1, R0]
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable28_22
   \   0000006A   0x6809             LDR      R1,[R1, #+0]
   \   0000006C   0x71C8             STRB     R0,[R1, #+7]
   2765             //    uart_putchar(UART0,123);
   2766               put_cnt++;
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable29_2
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x1C40             ADDS     R0,R0,#+1
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable29_2
   \   0000007A   0x7008             STRB     R0,[R1, #+0]
   2767              
   2768               if(put_cnt==11) put_cnt=0;
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable29_2
   \   00000080   0x7800             LDRB     R0,[R0, #+0]
   \   00000082   0x280B             CMP      R0,#+11
   \   00000084   0xD103             BNE.N    ??PutDate_0
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable29_2
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
   2769          
   2770          }
   \                     ??PutDate_0: (+1)
   \   0000008E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   2771          uint8 send_date[9]={0};
   \                     send_date:
   \   00000000                      DS8 12

   \                                 In section .bss, align 1
   2772          uint8 send_cnt=0;
   \                     send_cnt:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
   2773          void SendDate(){
   \                     SendDate: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   2774                         
   2775                 speed_kp =send_date[1];
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable28_23
   \   00000006   0x7840             LDRB     R0,[R0, #+1]
   \   00000008   0x.... 0x....      BL       __aeabi_ui2f
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable27_12
   \   00000010   0x6008             STR      R0,[R1, #+0]
   2776                             
   2777                 speed_ki = send_date[2]/10.0;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable28_23
   \   00000016   0x7880             LDRB     R0,[R0, #+2]
   \   00000018   0x.... 0x....      BL       __aeabi_ui2d
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x.... 0x....      LDR.W    R3,??DataTable28_24  ;; 0x40240000
   \   00000022   0x.... 0x....      BL       __aeabi_ddiv
   \   00000026   0x.... 0x....      BL       __aeabi_d2f
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable28_1
   \   0000002E   0x6008             STR      R0,[R1, #+0]
   2778                 
   2779               
   2780                                     
   2781                 
   2782          //       Speed_set =  send_date[7];
   2783           
   2784          }
   \   00000030   0xBD01             POP      {R0,PC}          ;; return
   2785          
   2786          //----------------------------串口初始化-----------------------------//                       李靖康学长

   \                                 In section .text, align 2, keep-with-next
   2787          void UART0_Init(void)    //PTB16 RXD    PTB17 TXD
   2788          {
   \                     UART0_Init: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
   2789              uint32 uartclk_khz = CORE_CLOCK*10 * BUS_CLOCK;//时钟180MHz    //随时更改
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable28_25  ;; 0x2bf20
   2790              uint32 baud = BAUD;
   \   00000006   0xF44F 0x4196      MOV      R1,#+19200
   2791              uint16 sbr,brfa;
   2792              
   2793              SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK; //开启B口时钟
   \   0000000A   0x.... 0x....      LDR.W    R4,??DataTable28_26  ;; 0x40048038
   \   0000000E   0x6824             LDR      R4,[R4, #+0]
   \   00000010   0xF454 0x6480      ORRS     R4,R4,#0x400
   \   00000014   0x.... 0x....      LDR.W    R5,??DataTable28_26  ;; 0x40048038
   \   00000018   0x602C             STR      R4,[R5, #+0]
   2794              PORTB_PCR16|=PORT_PCR_MUX(3);//将PTB16引脚设置为模式3，即UART0_RX
   \   0000001A   0x.... 0x....      LDR.W    R4,??DataTable28_27  ;; 0x4004a040
   \   0000001E   0x6824             LDR      R4,[R4, #+0]
   \   00000020   0xF454 0x7440      ORRS     R4,R4,#0x300
   \   00000024   0x.... 0x....      LDR.W    R5,??DataTable28_27  ;; 0x4004a040
   \   00000028   0x602C             STR      R4,[R5, #+0]
   2795              PORTB_PCR17|=PORT_PCR_MUX(3);//将PTB177引脚设置为模式3，即UART0_TX
   \   0000002A   0x.... 0x....      LDR.W    R4,??DataTable28_28  ;; 0x4004a044
   \   0000002E   0x6824             LDR      R4,[R4, #+0]
   \   00000030   0xF454 0x7440      ORRS     R4,R4,#0x300
   \   00000034   0x.... 0x....      LDR.W    R5,??DataTable28_28  ;; 0x4004a044
   \   00000038   0x602C             STR      R4,[R5, #+0]
   2796              SIM_SCGC4|=SIM_SCGC4_UART0_MASK;//开启UART0时钟
   \   0000003A   0x.... 0x....      LDR.W    R4,??DataTable28_29  ;; 0x40048034
   \   0000003E   0x6824             LDR      R4,[R4, #+0]
   \   00000040   0xF454 0x6480      ORRS     R4,R4,#0x400
   \   00000044   0x.... 0x....      LDR.W    R5,??DataTable28_29  ;; 0x40048034
   \   00000048   0x602C             STR      R4,[R5, #+0]
   2797              sbr = (uint16)((uartclk_khz*1000)/(baud*16));//计算并设置波特率
   \   0000004A   0xF44F 0x747A      MOV      R4,#+1000
   \   0000004E   0xFB04 0xF400      MUL      R4,R4,R0
   \   00000052   0x010D             LSLS     R5,R1,#+4
   \   00000054   0xFBB4 0xF4F5      UDIV     R4,R4,R5
   \   00000058   0x0022             MOVS     R2,R4
   2798              
   2799              UART0_BDH = (uint8)((sbr&0x1F00)>>8);//将波特率19200写入相应的寄存器然后进行使能，使其工作。前面的buad只是一个数字，而后面的计算是将19200写入这个寄存器，然后进行使能
   \   0000005A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000005C   0x1214             ASRS     R4,R2,#+8
   \   0000005E   0xF014 0x041F      ANDS     R4,R4,#0x1F
   \   00000062   0x.... 0x....      LDR.W    R5,??DataTable28_30  ;; 0x4006a000
   \   00000066   0x702C             STRB     R4,[R5, #+0]
   2800              UART0_BDL=(uint8)(sbr&0x00FF);
   \   00000068   0x.... 0x....      LDR.W    R4,??DataTable28_31  ;; 0x4006a001
   \   0000006C   0x7022             STRB     R2,[R4, #+0]
   2801              brfa = (((uartclk_khz*32000)/(baud*16))-(sbr*32));
   \   0000006E   0xF44F 0x44FA      MOV      R4,#+32000
   \   00000072   0xFB04 0xF400      MUL      R4,R4,R0
   \   00000076   0x010D             LSLS     R5,R1,#+4
   \   00000078   0xFBB4 0xF4F5      UDIV     R4,R4,R5
   \   0000007C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000007E   0xEBB4 0x1442      SUBS     R4,R4,R2, LSL #+5
   \   00000082   0x0023             MOVS     R3,R4
   2802              UART0_C4 = (uint8)(brfa & 0x001F);
   \   00000084   0xF013 0x041F      ANDS     R4,R3,#0x1F
   \   00000088   0x.... 0x....      LDR.W    R5,??DataTable28_32  ;; 0x4006a00a
   \   0000008C   0x702C             STRB     R4,[R5, #+0]
   2803              UART0_C2 |=(UART_C2_TE_MASK|UART_C2_RE_MASK);
   \   0000008E   0x.... 0x....      LDR.W    R4,??DataTable30  ;; 0x4006a003
   \   00000092   0x7824             LDRB     R4,[R4, #+0]
   \   00000094   0xF054 0x040C      ORRS     R4,R4,#0xC
   \   00000098   0x.... 0x....      LDR.W    R5,??DataTable30  ;; 0x4006a003
   \   0000009C   0x702C             STRB     R4,[R5, #+0]
   2804              UART0_C1 = 0;	
   \   0000009E   0x2400             MOVS     R4,#+0
   \   000000A0   0x.... 0x....      LDR.W    R5,??DataTable28_33  ;; 0x4006a002
   \   000000A4   0x702C             STRB     R4,[R5, #+0]
   2805              UART0_C2 |= UART_C2_RIE_MASK;   //开UART0接收中断
   \   000000A6   0x.... 0x....      LDR.W    R4,??DataTable30  ;; 0x4006a003
   \   000000AA   0x7824             LDRB     R4,[R4, #+0]
   \   000000AC   0xF054 0x0420      ORRS     R4,R4,#0x20
   \   000000B0   0x.... 0x....      LDR.W    R5,??DataTable30  ;; 0x4006a003
   \   000000B4   0x702C             STRB     R4,[R5, #+0]
   2806          }
   \   000000B6   0xBC30             POP      {R4,R5}
   \   000000B8   0x4770             BX       LR               ;; return
   2807          
   2808          //------------------------串口发送函数------------------------ //                           
   2809          

   \                                 In section .text, align 4, keep-with-next
   2810          void SCI0_send_mesage(void)
   2811          {
   \                     SCI0_send_mesage: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   2812              //int i = 0;
   2813              static bool sci_temp = 0,ts=0;
   2814               int i = 0,j = 0;
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0x2500             MOVS     R5,#+0
   2815              DisableInterrupts;  //发送图像数据时，要关闭所有中断，否则会出错    
   \   00000006   0xB672             CPSID i
   2816              if(send_mes == 1)  //参数 自己上位机
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable30_1
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2801             CMP      R0,#+1
   \   00000010   0xF040 0x80BA      BNE.W    ??SCI0_send_mesage_0
   2817              {  
   2818                
   2819                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达0
   \                     ??SCI0_send_mesage_1: (+1)
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000018   0x7800             LDRB     R0,[R0, #+0]
   \   0000001A   0x0600             LSLS     R0,R0,#+24
   \   0000001C   0xD5FA             BPL.N    ??SCI0_send_mesage_1
   2820                  UART0_D =0x01;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000024   0x7008             STRB     R0,[R1, #+0]
   2821                  
   2822                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达1
   \                     ??SCI0_send_mesage_2: (+1)
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x0600             LSLS     R0,R0,#+24
   \   0000002E   0xD5FA             BPL.N    ??SCI0_send_mesage_2
   2823                  UART0_D =(uint8)((uint16)angle_kp>>8);
   \   00000030   0x....             LDR.N    R0,??DataTable25_8
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x.... 0x....      BL       __aeabi_f2iz
   \   00000038   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003A   0x0A00             LSRS     R0,R0,#+8
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000040   0x7008             STRB     R0,[R1, #+0]
   2824                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达2
   \                     ??SCI0_send_mesage_3: (+1)
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x0600             LSLS     R0,R0,#+24
   \   0000004A   0xD5FA             BPL.N    ??SCI0_send_mesage_3
   2825                  UART0_D = (uint8)( (uint16)angle_kp&0x00ff);
   \   0000004C   0x....             LDR.N    R0,??DataTable25_8
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x.... 0x....      BL       __aeabi_f2iz
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000058   0x7008             STRB     R0,[R1, #+0]
   2826                  
   2827                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达3
   \                     ??SCI0_send_mesage_4: (+1)
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0x0600             LSLS     R0,R0,#+24
   \   00000062   0xD5FA             BPL.N    ??SCI0_send_mesage_4
   2828                  UART0_D =(uint8)(angle_kd);
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable26_1
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x.... 0x....      BL       __aeabi_f2iz
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000072   0x7008             STRB     R0,[R1, #+0]
   2829                  
   2830                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达4
   \                     ??SCI0_send_mesage_5: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x0600             LSLS     R0,R0,#+24
   \   0000007C   0xD5FA             BPL.N    ??SCI0_send_mesage_5
   2831                  UART0_D = (uint8)( (uint16)error_servo_ref_d >>8 );
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable29_5
   \   00000082   0x8800             LDRH     R0,[R0, #+0]
   \   00000084   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000086   0x0A00             LSRS     R0,R0,#+8
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
   2832                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达5
   \                     ??SCI0_send_mesage_6: (+1)
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0x0600             LSLS     R0,R0,#+24
   \   00000096   0xD5FA             BPL.N    ??SCI0_send_mesage_6
   2833                  UART0_D =(uint8)( (uint16)error_servo_ref_d  &0x00ff);
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable29_5
   \   0000009C   0x8800             LDRH     R0,[R0, #+0]
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000000A2   0x7008             STRB     R0,[R1, #+0]
   2834                  
   2835                 while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达6
   \                     ??SCI0_send_mesage_7: (+1)
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0x0600             LSLS     R0,R0,#+24
   \   000000AC   0xD5FA             BPL.N    ??SCI0_send_mesage_7
   2836                  UART0_D = (uint8)( (uint16)error_servo_ref_p >>8 );
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable29_6
   \   000000B2   0x8800             LDRH     R0,[R0, #+0]
   \   000000B4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000B6   0x0A00             LSRS     R0,R0,#+8
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000000BC   0x7008             STRB     R0,[R1, #+0]
   2837                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达7
   \                     ??SCI0_send_mesage_8: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000000C2   0x7800             LDRB     R0,[R0, #+0]
   \   000000C4   0x0600             LSLS     R0,R0,#+24
   \   000000C6   0xD5FA             BPL.N    ??SCI0_send_mesage_8
   2838                  UART0_D =(uint8)( (uint16)error_servo_ref_p  &0x00ff);
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable29_6
   \   000000CC   0x8800             LDRH     R0,[R0, #+0]
   \   000000CE   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000000D2   0x7008             STRB     R0,[R1, #+0]
   2839                  
   2840                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达8
   \                     ??SCI0_send_mesage_9: (+1)
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000000D8   0x7800             LDRB     R0,[R0, #+0]
   \   000000DA   0x0600             LSLS     R0,R0,#+24
   \   000000DC   0xD5FA             BPL.N    ??SCI0_send_mesage_9
   2841                  UART0_D = (uint8)( speed_kp );
   \   000000DE   0x....             LDR.N    R0,??DataTable27_12
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000E6   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000000EA   0x7008             STRB     R0,[R1, #+0]
   2842                  
   2843                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达9
   \                     ??SCI0_send_mesage_10: (+1)
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x0600             LSLS     R0,R0,#+24
   \   000000F4   0xD5FA             BPL.N    ??SCI0_send_mesage_10
   2844                  UART0_D = (uint8)( speed_ki*10);
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable28_1
   \   000000FA   0x6801             LDR      R1,[R0, #+0]
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable29_7  ;; 0x41200000
   \   00000100   0x.... 0x....      BL       __aeabi_fmul
   \   00000104   0x.... 0x....      BL       __aeabi_f2iz
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   0000010C   0x7008             STRB     R0,[R1, #+0]
   2845              //  while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达10
   2846               //   UART0_D = (uint8)( Speed_set );
   2847                
   2848                //while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达11
   2849                  //UART0_D =( uint8 )(w);
   2850                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达11
   \                     ??SCI0_send_mesage_11: (+1)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000112   0x7800             LDRB     R0,[R0, #+0]
   \   00000114   0x0600             LSLS     R0,R0,#+24
   \   00000116   0xD5FA             BPL.N    ??SCI0_send_mesage_11
   2851                  UART0_D =(uint8)( RealSpeed );
   \   00000118   0x....             LDR.N    R0,??DataTable27_8
   \   0000011A   0x6800             LDR      R0,[R0, #+0]
   \   0000011C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000120   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000124   0x7008             STRB     R0,[R1, #+0]
   2852                  
   2853                //while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达12
   2854                  //UART0_D =(uint8)( speed_ki);
   2855                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达12
   \                     ??SCI0_send_mesage_12: (+1)
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   0000012A   0x7800             LDRB     R0,[R0, #+0]
   \   0000012C   0x0600             LSLS     R0,R0,#+24
   \   0000012E   0xD5FA             BPL.N    ??SCI0_send_mesage_12
   2856                  UART0_D = (uint8)( (uint16)ACCE_STATIC>>8 );
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable29_8
   \   00000134   0x6800             LDR      R0,[R0, #+0]
   \   00000136   0x.... 0x....      BL       __aeabi_f2iz
   \   0000013A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000013C   0x0A00             LSRS     R0,R0,#+8
   \   0000013E   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000142   0x7008             STRB     R0,[R1, #+0]
   2857                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达13
   \                     ??SCI0_send_mesage_13: (+1)
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000148   0x7800             LDRB     R0,[R0, #+0]
   \   0000014A   0x0600             LSLS     R0,R0,#+24
   \   0000014C   0xD5FA             BPL.N    ??SCI0_send_mesage_13
   2858                  UART0_D =(uint8)( (uint16)ACCE_STATIC&0x00ff);  
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable29_8
   \   00000152   0x6800             LDR      R0,[R0, #+0]
   \   00000154   0x.... 0x....      BL       __aeabi_f2iz
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   0000015C   0x7008             STRB     R0,[R1, #+0]
   2859                  
   2860                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达14
   \                     ??SCI0_send_mesage_14: (+1)
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000162   0x7800             LDRB     R0,[R0, #+0]
   \   00000164   0x0600             LSLS     R0,R0,#+24
   \   00000166   0xD5FA             BPL.N    ??SCI0_send_mesage_14
   2861                  UART0_D =(uint8)(V*10);    
   \   00000168   0x....             LDR.N    R0,??DataTable25
   \   0000016A   0x6801             LDR      R1,[R0, #+0]
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable29_7  ;; 0x41200000
   \   00000170   0x.... 0x....      BL       __aeabi_fmul
   \   00000174   0x.... 0x....      BL       __aeabi_f2iz
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   0000017C   0x7008             STRB     R0,[R1, #+0]
   2862                  
   2863                  send_mes = 0;  //发送一次即可，所以要清零
   \   0000017E   0x2000             MOVS     R0,#+0
   \   00000180   0x.... 0x....      LDR.W    R1,??DataTable30_1
   \   00000184   0x7008             STRB     R0,[R1, #+0]
   \   00000186   0xE0DB             B.N      ??SCI0_send_mesage_15
   2864               }
   2865             
   2866              
   2867              else if(send_mes == 2)
   \                     ??SCI0_send_mesage_0: (+1)
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable30_1
   \   0000018C   0x7800             LDRB     R0,[R0, #+0]
   \   0000018E   0x2802             CMP      R0,#+2
   \   00000190   0xD120             BNE.N    ??SCI0_send_mesage_16
   2868              {
   2869                if(!ts)
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable29_9
   \   00000196   0x7800             LDRB     R0,[R0, #+0]
   \   00000198   0x2800             CMP      R0,#+0
   \   0000019A   0xD109             BNE.N    ??SCI0_send_mesage_17
   2870                {
   2871                    while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   \                     ??SCI0_send_mesage_18: (+1)
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000001A0   0x7800             LDRB     R0,[R0, #+0]
   \   000001A2   0x0600             LSLS     R0,R0,#+24
   \   000001A4   0xD5FA             BPL.N    ??SCI0_send_mesage_18
   2872                    UART0_D =10;
   \   000001A6   0x200A             MOVS     R0,#+10
   \   000001A8   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000001AC   0x7008             STRB     R0,[R1, #+0]
   \   000001AE   0xE008             B.N      ??SCI0_send_mesage_19
   2873                }
   2874                
   2875                else
   2876                {
   2877                  
   2878                    while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   \                     ??SCI0_send_mesage_17: (+1)
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000001B4   0x7800             LDRB     R0,[R0, #+0]
   \   000001B6   0x0600             LSLS     R0,R0,#+24
   \   000001B8   0xD5FA             BPL.N    ??SCI0_send_mesage_17
   2879                    UART0_D =20;
   \   000001BA   0x2014             MOVS     R0,#+20
   \   000001BC   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000001C0   0x7008             STRB     R0,[R1, #+0]
   2880                }
   2881                    //Delay_MS(80000);
   2882                ts=!ts;
   \                     ??SCI0_send_mesage_19: (+1)
   \   000001C2   0x.... 0x....      LDR.W    R0,??DataTable29_9
   \   000001C6   0x7800             LDRB     R0,[R0, #+0]
   \   000001C8   0xF090 0x0001      EORS     R0,R0,#0x1
   \   000001CC   0x.... 0x....      LDR.W    R1,??DataTable29_9
   \   000001D0   0x7008             STRB     R0,[R1, #+0]
   \   000001D2   0xE0B5             B.N      ??SCI0_send_mesage_15
   2883                
   2884              }
   2885           
   2886             else if (send_mes == 3)  //便于调试
   \                     ??SCI0_send_mesage_16: (+1)
   \   000001D4   0x.... 0x....      LDR.W    R0,??DataTable30_1
   \   000001D8   0x7800             LDRB     R0,[R0, #+0]
   \   000001DA   0x2803             CMP      R0,#+3
   \   000001DC   0xD12D             BNE.N    ??SCI0_send_mesage_20
   2887              {  
   2888                  if(!sci_temp)
   \   000001DE   0x.... 0x....      LDR.W    R0,??DataTable29_10
   \   000001E2   0x7800             LDRB     R0,[R0, #+0]
   \   000001E4   0x2800             CMP      R0,#+0
   \   000001E6   0xD113             BNE.N    ??SCI0_send_mesage_21
   2889                  {
   2890                   while(!(UART0_S1&UART_S1_TDRE_MASK));
   \                     ??SCI0_send_mesage_22: (+1)
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000001EC   0x7800             LDRB     R0,[R0, #+0]
   \   000001EE   0x0600             LSLS     R0,R0,#+24
   \   000001F0   0xD5FA             BPL.N    ??SCI0_send_mesage_22
   2891                    UART0_D =Speed_set;//speed_feedback
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable29_11
   \   000001F6   0x8800             LDRH     R0,[R0, #+0]
   \   000001F8   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000001FC   0x7008             STRB     R0,[R1, #+0]
   2892                   sci_temp = !sci_temp; 
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable29_10
   \   00000202   0x7800             LDRB     R0,[R0, #+0]
   \   00000204   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable29_10
   \   0000020C   0x7008             STRB     R0,[R1, #+0]
   \   0000020E   0xE097             B.N      ??SCI0_send_mesage_15
   2893                     //Delay_MS(2000000); 
   2894                  }
   2895                  else
   2896                  {
   2897                     while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   \                     ??SCI0_send_mesage_21: (+1)
   \   00000210   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000214   0x7800             LDRB     R0,[R0, #+0]
   \   00000216   0x0600             LSLS     R0,R0,#+24
   \   00000218   0xD5FA             BPL.N    ??SCI0_send_mesage_21
   2898                     UART0_D=(uint8)RealSpeed;
   \   0000021A   0x....             LDR.N    R0,??DataTable27_8
   \   0000021C   0x6800             LDR      R0,[R0, #+0]
   \   0000021E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000222   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000226   0x7008             STRB     R0,[R1, #+0]
   2899                     sci_temp = !sci_temp;
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable29_10
   \   0000022C   0x7800             LDRB     R0,[R0, #+0]
   \   0000022E   0xF090 0x0001      EORS     R0,R0,#0x1
   \   00000232   0x.... 0x....      LDR.W    R1,??DataTable29_10
   \   00000236   0x7008             STRB     R0,[R1, #+0]
   \   00000238   0xE082             B.N      ??SCI0_send_mesage_15
   2900                     //Delay_MS(2000000); 
   2901                  }
   2902                  
   2903                  //       send_mes = 0;不清0是为了连续发送
   2904                }
   2905             
   2906              else if(send_mes ==4)  //图像
   \                     ??SCI0_send_mesage_20: (+1)
   \   0000023A   0x.... 0x....      LDR.W    R0,??DataTable30_1
   \   0000023E   0x7800             LDRB     R0,[R0, #+0]
   \   00000240   0x2804             CMP      R0,#+4
   \   00000242   0xD17D             BNE.N    ??SCI0_send_mesage_15
   2907              {  
   2908                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   \                     ??SCI0_send_mesage_23: (+1)
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000248   0x7800             LDRB     R0,[R0, #+0]
   \   0000024A   0x0600             LSLS     R0,R0,#+24
   \   0000024C   0xD5FA             BPL.N    ??SCI0_send_mesage_23
   2909                  UART0_D = WHITE_BLACK_OT;//由于阀值的不存在，故这里只是随便填写的一个数字
   \   0000024E   0x.... 0x....      LDR.W    R0,??DataTable30_2
   \   00000252   0x7800             LDRB     R0,[R0, #+0]
   \   00000254   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000258   0x7008             STRB     R0,[R1, #+0]
   2910                        while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   \                     ??SCI0_send_mesage_24: (+1)
   \   0000025A   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   0000025E   0x7800             LDRB     R0,[R0, #+0]
   \   00000260   0x0600             LSLS     R0,R0,#+24
   \   00000262   0xD5FA             BPL.N    ??SCI0_send_mesage_24
   2911                  UART0_D = (uint8)ROW;
   \   00000264   0x2032             MOVS     R0,#+50
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   0000026A   0x7008             STRB     R0,[R1, #+0]
   2912                        while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   \                     ??SCI0_send_mesage_25: (+1)
   \   0000026C   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000270   0x7800             LDRB     R0,[R0, #+0]
   \   00000272   0x0600             LSLS     R0,R0,#+24
   \   00000274   0xD5FA             BPL.N    ??SCI0_send_mesage_25
   2913                  UART0_D = (uint8)COLUMN;
   \   00000276   0x209D             MOVS     R0,#+157
   \   00000278   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   0000027C   0x7008             STRB     R0,[R1, #+0]
   2914                  
   2915                 // while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   2916                  //UART0_D = (uint8)bottom_whitebase;
   2917                       // while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   2918                  //UART0_D = (uint8)control_top_whiteline ;
   2919                  
   2920                for(i =ROW-1;i>=0;i--)
   \   0000027E   0x2031             MOVS     R0,#+49
   \   00000280   0x0004             MOVS     R4,R0
   \                     ??SCI0_send_mesage_26: (+1)
   \   00000282   0x2C00             CMP      R4,#+0
   \   00000284   0xD419             BMI.N    ??SCI0_send_mesage_27
   2921                {
   2922                  for(j=0;j<COLUMN;j++)
   \   00000286   0x2000             MOVS     R0,#+0
   \   00000288   0x0005             MOVS     R5,R0
   \                     ??SCI0_send_mesage_28: (+1)
   \   0000028A   0x2D9D             CMP      R5,#+157
   \   0000028C   0xDA13             BGE.N    ??SCI0_send_mesage_29
   2923                  {
   2924                    while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   \                     ??SCI0_send_mesage_30: (+1)
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   00000292   0x7800             LDRB     R0,[R0, #+0]
   \   00000294   0x0600             LSLS     R0,R0,#+24
   \   00000296   0xD5FA             BPL.N    ??SCI0_send_mesage_30
   2925                    UART0_D =  VideoImage2[i][j];///见最后一个函数讲解
   \   00000298   0x.... 0x....      LDR.W    R0,??DataTable30_3
   \   0000029C   0x219D             MOVS     R1,#+157
   \   0000029E   0xFB01 0x0004      MLA      R0,R1,R4,R0
   \   000002A2   0x5C28             LDRB     R0,[R5, R0]
   \   000002A4   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000002A8   0x7008             STRB     R0,[R1, #+0]
   2926                    Delay_MS(80000);
   \   000002AA   0x.... 0x....      LDR.W    R0,??DataTable30_4  ;; 0x13880
   \   000002AE   0x.... 0x....      BL       Delay_MS
   2927                  }
   \   000002B2   0x1C6D             ADDS     R5,R5,#+1
   \   000002B4   0xE7E9             B.N      ??SCI0_send_mesage_28
   2928                }  
   \                     ??SCI0_send_mesage_29: (+1)
   \   000002B6   0x1E64             SUBS     R4,R4,#+1
   \   000002B8   0xE7E3             B.N      ??SCI0_send_mesage_26
   2929                for (i =ROW-1 ;i >=0 ; i--)
   \                     ??SCI0_send_mesage_27: (+1)
   \   000002BA   0x2031             MOVS     R0,#+49
   \   000002BC   0x0004             MOVS     R4,R0
   \                     ??SCI0_send_mesage_31: (+1)
   \   000002BE   0x2C00             CMP      R4,#+0
   \   000002C0   0xD410             BMI.N    ??SCI0_send_mesage_32
   2930                {
   2931                  while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   \                     ??SCI0_send_mesage_33: (+1)
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000002C6   0x7800             LDRB     R0,[R0, #+0]
   \   000002C8   0x0600             LSLS     R0,R0,#+24
   \   000002CA   0xD5FA             BPL.N    ??SCI0_send_mesage_33
   2932                     UART0_D = left_black[i];
   \   000002CC   0x.... 0x....      LDR.W    R0,??DataTable30_5
   \   000002D0   0x5C20             LDRB     R0,[R4, R0]
   \   000002D2   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   000002D6   0x7008             STRB     R0,[R1, #+0]
   2933                  Delay_MS(80000);
   \   000002D8   0x.... 0x....      LDR.W    R0,??DataTable30_4  ;; 0x13880
   \   000002DC   0x.... 0x....      BL       Delay_MS
   2934                }
   \   000002E0   0x1E64             SUBS     R4,R4,#+1
   \   000002E2   0xE7EC             B.N      ??SCI0_send_mesage_31
   2935                for (i =ROW-1 ;i >=0 ; i--)
   \                     ??SCI0_send_mesage_32: (+1)
   \   000002E4   0x2031             MOVS     R0,#+49
   \   000002E6   0x0004             MOVS     R4,R0
   \                     ??SCI0_send_mesage_34: (+1)
   \   000002E8   0x2C00             CMP      R4,#+0
   \   000002EA   0xD410             BMI.N    ??SCI0_send_mesage_35
   2936                {
   2937                   while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   \                     ??SCI0_send_mesage_36: (+1)
   \   000002EC   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   000002F0   0x7800             LDRB     R0,[R0, #+0]
   \   000002F2   0x0600             LSLS     R0,R0,#+24
   \   000002F4   0xD5FA             BPL.N    ??SCI0_send_mesage_36
   2938                   UART0_D = right_black[i];
   \   000002F6   0x.... 0x....      LDR.W    R0,??DataTable30_6
   \   000002FA   0x5C20             LDRB     R0,[R4, R0]
   \   000002FC   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   00000300   0x7008             STRB     R0,[R1, #+0]
   2939                   Delay_MS(80000);
   \   00000302   0x.... 0x....      LDR.W    R0,??DataTable30_4  ;; 0x13880
   \   00000306   0x.... 0x....      BL       Delay_MS
   2940                }
   \   0000030A   0x1E64             SUBS     R4,R4,#+1
   \   0000030C   0xE7EC             B.N      ??SCI0_send_mesage_34
   2941                for (i =ROW-1 ;i >=0 ; i--)
   \                     ??SCI0_send_mesage_35: (+1)
   \   0000030E   0x2031             MOVS     R0,#+49
   \   00000310   0x0004             MOVS     R4,R0
   \                     ??SCI0_send_mesage_37: (+1)
   \   00000312   0x2C00             CMP      R4,#+0
   \   00000314   0xD410             BMI.N    ??SCI0_send_mesage_38
   2942                {
   2943                  while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   \                     ??SCI0_send_mesage_39: (+1)
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable29_3  ;; 0x4006a004
   \   0000031A   0x7800             LDRB     R0,[R0, #+0]
   \   0000031C   0x0600             LSLS     R0,R0,#+24
   \   0000031E   0xD5FA             BPL.N    ??SCI0_send_mesage_39
   2944                  UART0_D = center_white[i];
   \   00000320   0x.... 0x....      LDR.W    R0,??DataTable30_7
   \   00000324   0x5C20             LDRB     R0,[R4, R0]
   \   00000326   0x.... 0x....      LDR.W    R1,??DataTable29_4  ;; 0x4006a007
   \   0000032A   0x7008             STRB     R0,[R1, #+0]
   2945                  Delay_MS(80000);
   \   0000032C   0x.... 0x....      LDR.W    R0,??DataTable30_4  ;; 0x13880
   \   00000330   0x.... 0x....      BL       Delay_MS
   2946                }
   \   00000334   0x1E64             SUBS     R4,R4,#+1
   \   00000336   0xE7EC             B.N      ??SCI0_send_mesage_37
   2947                send_mes = 0;  //发送一次即可，所以要清零
   \                     ??SCI0_send_mesage_38: (+1)
   \   00000338   0x2000             MOVS     R0,#+0
   \   0000033A   0x.... 0x....      LDR.W    R1,??DataTable30_1
   \   0000033E   0x7008             STRB     R0,[R1, #+0]
   2948               }               
   2949             /* if( response )
   2950              {
   2951                while(!(UART0_S1&UART_S1_TDRE_MASK));
   2952                 UART0_D =0x01;
   2953                 response=0;
   2954              }*/
   2955              EnableInterrupts;
   \                     ??SCI0_send_mesage_15: (+1)
   \   00000340   0xB662             CPSIE i
   2956          }
   \   00000342   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .bss, align 1
   \                     ??sci_temp:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     ??ts:
   \   00000000                      DS8 1
   2957          
   2958          /*void SCI0_send_mesage(void)
   2959          {
   2960              int i = 0,j = 0;
   2961              static bool sci_temp = 0;
   2962              DisableInterrupts;  //发送图像数据时，要关闭所有中断，否则会出错    
   2963              if(send_mes==1)  //平哥改进后的上位机的图像
   2964              {  
   2965                while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   2966                   UART0_D =1;
   2967                 while(!(UART0_S1&UART_S1_TDRE_MASK));   
   2968                     UART0_D = (uint8)WHITE_BLACK_OT;
   2969                   while(!(UART0_S1&UART_S1_TDRE_MASK));
   2970                  UART0_D = (uint8)(ROW);
   2971                   while(!(UART0_S1&UART_S1_TDRE_MASK));
   2972                     UART0_D = (uint8)(COLUMN); 
   2973                     
   2974                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2975                  UART0_D = 0;
   2976                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2977                  UART0_D = 0;
   2978                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2979                  UART0_D = 0;
   2980                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2981                  UART0_D = 0;
   2982                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2983                  UART0_D = 0;
   2984                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2985                  UART0_D = 0;
   2986                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2987                  UART0_D = 0;
   2988                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2989                  UART0_D = 0;
   2990                  while(!(UART0_S1&UART_S1_TDRE_MASK));
   2991                  UART0_D = 0;     
   2992                 
   2993                  //上位机显示的第一个点是左上角，所以我发的时候第一个点就发左上角的点
   2994                for(i =0;i<=ROW-1;i++)
   2995                {
   2996                  for(j=COLUMN-1;j>=0;j--)
   2997                  {
   2998                    while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   2999                    UART0_D =  VideoImage2[i][j];///见最后一个函数讲解
   3000                    //Delay_MS(80000);
   3001                  }
   3002                } 
   3003          
   3004                for(i =0;i<=ROW-1;i++)
   3005                {
   3006                  while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3007                     UART0_D = COLUMN - 1 - left_black[i];
   3008                  //Delay_MS(80000);
   3009                }
   3010                     for(i =0;i<=ROW-1;i++)
   3011                {
   3012                   while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3013                   UART0_D = COLUMN - 1 - right_black[i];
   3014                   //Delay_MS(80000);
   3015                } 
   3016                for(i =0;i<=ROW-1;i++)
   3017                {
   3018                  while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3019                  UART0_D = COLUMN - 1 - center_white[i];
   3020                  //Delay_MS(80000);
   3021                }
   3022                for(i =0;i<=ROW-1;i++)
   3023                {
   3024                  while(!(UART0_S1&UART_S1_TDRE_MASK));//发送拟合出来的中线
   3025                  UART0_D = COLUMN - 1 - center_average;
   3026                  //Delay_MS(80000);
   3027                }
   3028                for(i =0;i<=control_top_whiteline;i++)
   3029                {
   3030                  while(!(UART0_S1&UART_S1_TDRE_MASK));//发送拟合出来的中线
   3031                  UART0_D = MID;
   3032                  //Delay_MS(80000);
   3033                }
   3034                
   3035                
   3036                send_mes = 0;  //发送一次即可，所以要清零
   3037               }
   3038             // EnableInterrupts;  //重新开启所有中断
   3039             else if(send_mes == 2) //用立哥上位机画出图像
   3040             {
   3041                     while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   3042                  UART0_D = WHITE_BLACK_OT;//由于阀值的不存在，故这里只是随便填写的一个数字
   3043                        while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   3044                  UART0_D = (uint8)ROW;
   3045                        while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   3046                  UART0_D = (uint8)COLUMN;
   3047                  
   3048                  
   3049                  //上位机显示的第一个点是左上角，所以我发的时候第一个点就发左上角的点
   3050                for(i =ROW-1;i>=0;i--)
   3051                {
   3052                  for(j=0;j<COLUMN;j++)
   3053                  {
   3054                    while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3055                    UART0_D =  VideoImage2[i][j];///见最后一个函数讲解
   3056                    Delay_MS(80000);
   3057                  }
   3058                }  
   3059                for (i =ROW-1 ;i >=0 ; i--)
   3060                {
   3061                  while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3062                     UART0_D = left_black[i];
   3063                  Delay_MS(80000);
   3064                }
   3065                for (i =ROW-1 ;i >=0 ; i--)
   3066                {
   3067                   while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3068                   UART0_D = right_black[i];
   3069                   Delay_MS(80000);
   3070                }
   3071                for (i =ROW-1 ;i >=0 ; i--)
   3072                {
   3073                  while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3074                  UART0_D = center_white[i];
   3075                  Delay_MS(80000);
   3076                }
   3077                
   3078               
   3079                  while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   3080                  UART0_D = (uint8)bottom_whitebase;
   3081                  while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   3082                  UART0_D = (uint8)control_top_whiteline;
   3083                send_mes = 0;  //发送一次即可，所以要清零
   3084             }
   3085             else if (send_mes == 3)  //便于调试
   3086              {  
   3087                  if(!sci_temp)    ////////////////////////////////////////////$$$$$$4$$$$$$$$$$$$$/////////////////////////////////////////////////////////////
   3088                  {
   3089                 while(!(UART0_S1&UART_S1_TDRE_MASK));
   3090                 UART0_D = (uint8)(RealSpeed); //speed_feedback
   3091                 sci_temp = !sci_temp;
   3092                  }
   3093                  else
   3094                  {
   3095                   while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3096                   UART0_D= (uint8)( SpeedPIDout);
   3097                    sci_temp = !sci_temp;
   3098                  }
   3099                  //       send_mes = 0;不清0是为了连续发送
   3100                }
   3101                 else if (send_mes == 4)  //便于调试
   3102              {  
   3103                  if(!sci_temp)
   3104                  {
   3105                 while(!(UART0_S1&UART_S1_TDRE_MASK));
   3106                 UART0_D = (uint8)(f_abs16(0 - angle)/2);//speed_feedback  79---8d
   3107                 sci_temp = !sci_temp;
   3108                  }
   3109                  else
   3110                  {
   3111                   while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3112                   UART0_D= (uint8)(direction);         //  37 -- 39
   3113                    sci_temp = !sci_temp;
   3114                  }
   3115                  //       send_mes = 0;不清0是为了连续发送
   3116                }
   3117                     else if (send_mes == 5)  //便于调试
   3118              {  
   3119                  if(!sci_temp)
   3120                  {
   3121                 while(!(UART0_S1&UART_S1_TDRE_MASK));
   3122                 UART0_D = (uint8)(top_whiteline);//speed_feedback  79---8d
   3123                 sci_temp = !sci_temp;
   3124                  }
   3125                  else
   3126                  {
   3127                   while(!(UART0_S1&UART_S1_TDRE_MASK));//等待数据到达
   3128                   UART0_D= (uint8)(control_top_whiteline);         //  37 -- 39
   3129                    sci_temp = !sci_temp;
   3130                  }
   3131                  //       send_mes = 0;不清0是为了连续发送
   3132                }
   3133              else if (send_mes =='p')  //停车
   3134              {
   3135                 while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   3136                 stopflag = 1;
   3137                 send_mes = 0;
   3138              }
   3139              else if (send_mes == 's')  //启动
   3140              {
   3141                 while(!(UART0_S1&UART_S1_TDRE_MASK));   //等待数据到达
   3142                 stopflag = 0;
   3143                 send_mes = 0;  
   3144              }
   3145              EnableInterrupts;
   3146          }*/
   3147          

   \                                 In section .text, align 2, keep-with-next
   3148          void scan_boma(void)
   3149          {
   3150            uint32 temp4=0;
   \                     scan_boma: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   3151            uint8 temp0=0;
   \   00000002   0x2100             MOVS     R1,#+0
   3152            //uint8 temp1=0;
   3153           
   3154            temp4 = GPIOA_PDIR;   //读PTD6~PTD13 
   \   00000004   0x.... 0x....      LDR.W    R2,??DataTable30_8  ;; 0x400ff010
   \   00000008   0x6812             LDR      R2,[R2, #+0]
   \   0000000A   0x0010             MOVS     R0,R2
   3155            
   3156            temp0 = (uint8)((temp4 >> 24) & 0x00000001);
   \   0000000C   0x0E02             LSRS     R2,R0,#+24
   \   0000000E   0xF012 0x0201      ANDS     R2,R2,#0x1
   \   00000012   0x0011             MOVS     R1,R2
   3157           
   3158             if(temp0 == 1)   //对应的是拨码8
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x2901             CMP      R1,#+1
   \   00000018   0xD103             BNE.N    ??scan_boma_0
   3159             lcd_debug  = 1;  //点亮的状态为按键调节时间，若调节完毕，则拨码检测结束，程序向下运行
   \   0000001A   0x2201             MOVS     R2,#+1
   \   0000001C   0x....             LDR.N    R3,??DataTable28_9
   \   0000001E   0x701A             STRB     R2,[R3, #+0]
   \   00000020   0xE002             B.N      ??scan_boma_1
   3160            else
   3161               lcd_debug = 0;
   \                     ??scan_boma_0: (+1)
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x....             LDR.N    R3,??DataTable28_9
   \   00000026   0x701A             STRB     R2,[R3, #+0]
   3162            
   3163            temp0= (uint8)((temp4 >>27) & 0x00000001);
   \                     ??scan_boma_1: (+1)
   \   00000028   0x0EC2             LSRS     R2,R0,#+27
   \   0000002A   0xF012 0x0201      ANDS     R2,R2,#0x1
   \   0000002E   0x0011             MOVS     R1,R2
   3164            
   3165            if(temp0==1)
   \   00000030   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000032   0x2901             CMP      R1,#+1
   \   00000034   0xD104             BNE.N    ??scan_boma_2
   3166            {
   3167              stop_special_flag=0;
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x.... 0x....      LDR.W    R3,??DataTable30_9
   \   0000003C   0x701A             STRB     R2,[R3, #+0]
   \   0000003E   0xE003             B.N      ??scan_boma_3
   3168            }
   3169            
   3170            else
   3171            {
   3172              stop_special_flag=1; 
   \                     ??scan_boma_2: (+1)
   \   00000040   0x2201             MOVS     R2,#+1
   \   00000042   0x.... 0x....      LDR.W    R3,??DataTable30_9
   \   00000046   0x701A             STRB     R2,[R3, #+0]
   3173              
   3174            }
   3175             temp0= (uint8)((temp4 >>26) & 0x00000001);
   \                     ??scan_boma_3: (+1)
   \   00000048   0x0E82             LSRS     R2,R0,#+26
   \   0000004A   0xF012 0x0201      ANDS     R2,R2,#0x1
   \   0000004E   0x0011             MOVS     R1,R2
   3176            
   3177            if(temp0==1)
   \   00000050   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   0x2901             CMP      R1,#+1
   \   00000054   0xD104             BNE.N    ??scan_boma_4
   3178            {
   3179              bm3=0;
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x.... 0x....      LDR.W    R3,??DataTable30_10
   \   0000005C   0x701A             STRB     R2,[R3, #+0]
   \   0000005E   0xE003             B.N      ??scan_boma_5
   3180            }
   3181            
   3182            else
   3183            {
   3184              bm3=1; 
   \                     ??scan_boma_4: (+1)
   \   00000060   0x2201             MOVS     R2,#+1
   \   00000062   0x.... 0x....      LDR.W    R3,??DataTable30_10
   \   00000066   0x701A             STRB     R2,[R3, #+0]
   3185              
   3186            }
   3187            
   3188            
   3189           /* temp0 = (uint8)((temp4 >> 1) & 0x00000001);//对应的是拨码7
   3190            if(temp0 == 1)
   3191               redraw_control=1;  //拨亮则刷屏
   3192            else
   3193                redraw_control=0; 
   3194            
   3195             //  start_stop_cs 起跑线检测的片选信号*/
   3196              temp0 = (uint8)((temp4 >> 25) & 0x00000001);//0x00000800
   \                     ??scan_boma_5: (+1)
   \   00000068   0x0E42             LSRS     R2,R0,#+25
   \   0000006A   0xF012 0x0201      ANDS     R2,R2,#0x1
   \   0000006E   0x0011             MOVS     R1,R2
   3197             if(temp0 == 1)
   \   00000070   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000072   0x2901             CMP      R1,#+1
   \   00000074   0xD104             BNE.N    ??scan_boma_6
   3198              feng = 0;
   \   00000076   0x2200             MOVS     R2,#+0
   \   00000078   0x.... 0x....      LDR.W    R3,??DataTable31
   \   0000007C   0x701A             STRB     R2,[R3, #+0]
   \   0000007E   0xE003             B.N      ??scan_boma_7
   3199             else
   3200              feng = 1;
   \                     ??scan_boma_6: (+1)
   \   00000080   0x2201             MOVS     R2,#+1
   \   00000082   0x.... 0x....      LDR.W    R3,??DataTable31
   \   00000086   0x701A             STRB     R2,[R3, #+0]
   3201             
   3202            //  停车选择信号 默认状况下是用摄像头检测，当拨码拨上等亮了之后，则用干簧管检测
   3203           /*  temp = !(uint8)((temp1 >> 3) & 0x00000001);//0x00000800
   3204                if(temp == 1)
   3205               stop_check_cs = 1;  //    用干簧管检测
   3206                else
   3207               stop_check_cs = 0;     //用摄像头检测  灯不亮*/
   3208             
   3209          }
   \                     ??scan_boma_7: (+1)
   \   00000088   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   3210          void   FantingOut()
   3211          {
   3212                    int16 temp4;
   3213                    temp4 = angle-re_angle;
   \                     FantingOut: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable30_11
   \   00000004   0x8809             LDRH     R1,[R1, #+0]
   \   00000006   0x.... 0x....      LDR.W    R2,??DataTable31_1
   \   0000000A   0x8812             LDRH     R2,[R2, #+0]
   \   0000000C   0x1A89             SUBS     R1,R1,R2
   \   0000000E   0x0008             MOVS     R0,R1
   3214                    angleout = (int16)(temp4*(sumbe3 + 1)/16+ re_angle) ;//+  speeddiff*0;
   \   00000010   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable31_2
   \   00000016   0x8809             LDRH     R1,[R1, #+0]
   \   00000018   0x1C49             ADDS     R1,R1,#+1
   \   0000001A   0xFB01 0xF100      MUL      R1,R1,R0
   \   0000001E   0x2210             MOVS     R2,#+16
   \   00000020   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable31_1
   \   00000028   0x8812             LDRH     R2,[R2, #+0]
   \   0000002A   0x1851             ADDS     R1,R2,R1
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable31_3
   \   00000030   0x8011             STRH     R1,[R2, #+0]
   3215                    
   3216          }
   \   00000032   0x4770             BX       LR               ;; return
   3217          
   3218          /*------------------------------------------------------------------------------
   3219                                         主函数               
   3220          ------------------------------------------------------------------------------*/
   3221          

   \                                 In section .data, align 2
   3222          uint16 set_up_time=50;
   \                     set_up_time:
   \   00000000   0x0032             DC16 50

   \                                 In section .data, align 2
   3223          uint16 reset_count=50;
   \                     reset_count:
   \   00000000   0x0032             DC16 50

   \                                 In section .bss, align 2
   3224          uint16 lcd_ref_p1_record =0,lcd_ref_p2_record =0;
   \                     lcd_ref_p1_record:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     lcd_ref_p2_record:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
   3225          float speed_kp_record=0;
   \                     speed_kp_record:
   \   00000000                      DS8 4
   3226          

   \                                 In section .text, align 2, keep-with-next
   3227          void car_set_start()
   3228          {
   \                     car_set_start: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   3229           
   3230            if(set_up_time>0)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable31_4
   \   00000006   0x8800             LDRH     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD01F             BEQ.N    ??car_set_start_0
   3231                        {                                         
   3232                                  
   3233                                  angle_kp_set=560;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable31_5  ;; 0x440c0000
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable31_6
   \   00000014   0x6008             STR      R0,[R1, #+0]
   3234                                  angle_kd_set=10.3;
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable31_7  ;; 0x4124cccd
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable31_8
   \   0000001E   0x6008             STR      R0,[R1, #+0]
   3235                                  speed_kp=speed_kp_record+30;
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable31_9
   \   00000024   0x6801             LDR      R1,[R0, #+0]
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable31_10  ;; 0x41f00000
   \   0000002A   0x.... 0x....      BL       __aeabi_fadd
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable31_11
   \   00000032   0x6008             STR      R0,[R1, #+0]
   3236                                  speed_ki=0.5;
   \   00000034   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   00000038   0x....             LDR.N    R1,??DataTable28_1
   \   0000003A   0x6008             STR      R0,[R1, #+0]
   3237                                  Speed_limit=Speed_limit_record+70;    
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable31_12
   \   00000040   0x8800             LDRH     R0,[R0, #+0]
   \   00000042   0x3046             ADDS     R0,R0,#+70
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable31_13
   \   00000048   0x8008             STRH     R0,[R1, #+0]
   \   0000004A   0xE053             B.N      ??car_set_start_1
   3238                        } 
   3239                        else if(set_up_time==0)  //
   \                     ??car_set_start_0: (+1)
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable31_4
   \   00000050   0x8800             LDRH     R0,[R0, #+0]
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD14E             BNE.N    ??car_set_start_1
   3240                        {
   3241                                  if(reset_count>0) 
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable31_14
   \   0000005A   0x8800             LDRH     R0,[R0, #+0]
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD030             BEQ.N    ??car_set_start_2
   3242                                  {
   3243                                            reset_count--;  //
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable31_14
   \   00000064   0x8800             LDRH     R0,[R0, #+0]
   \   00000066   0x1E40             SUBS     R0,R0,#+1
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable31_14
   \   0000006C   0x8008             STRH     R0,[R1, #+0]
   3244                                            
   3245                                            Speed_limit=10;
   \   0000006E   0x200A             MOVS     R0,#+10
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable31_13
   \   00000074   0x8008             STRH     R0,[R1, #+0]
   3246                                            angle_kp_set=angle_kp;
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable31_15
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable31_6
   \   00000080   0x6008             STR      R0,[R1, #+0]
   3247                                            angle_kd_set=angle_kd;
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable31_16
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable31_8
   \   0000008C   0x6008             STR      R0,[R1, #+0]
   3248                                            speed_kp=speed_kp_record;
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable31_9
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable31_11
   \   00000098   0x6008             STR      R0,[R1, #+0]
   3249                                            speed_ki=0.3;
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable31_17  ;; 0x3e99999a
   \   0000009E   0x....             LDR.N    R1,??DataTable28_1
   \   000000A0   0x6008             STR      R0,[R1, #+0]
   3250                                            lcd_ref_p1 =lcd_ref_p1_record-5;//
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable31_18
   \   000000A6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000AA   0x1F40             SUBS     R0,R0,#+5
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable31_19
   \   000000B0   0x8008             STRH     R0,[R1, #+0]
   3251          
   3252                                            lcd_ref_p2 =lcd_ref_p2_record-8;
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable31_20
   \   000000B6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000BA   0x3808             SUBS     R0,R0,#+8
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable31_21
   \   000000C0   0x8008             STRH     R0,[R1, #+0]
   3253                                  } 
   3254                                   if(reset_count==0)
   \                     ??car_set_start_2: (+1)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable31_14
   \   000000C6   0x8800             LDRH     R0,[R0, #+0]
   \   000000C8   0x2800             CMP      R0,#+0
   \   000000CA   0xD113             BNE.N    ??car_set_start_1
   3255                                  {
   3256                                            Speed_limit=Speed_limit_record;
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable31_12
   \   000000D0   0x8800             LDRH     R0,[R0, #+0]
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable31_13
   \   000000D6   0x8008             STRH     R0,[R1, #+0]
   3257                                            lcd_ref_p1 =lcd_ref_p1_record;
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable31_18
   \   000000DC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000E0   0x.... 0x....      LDR.W    R1,??DataTable31_19
   \   000000E4   0x8008             STRH     R0,[R1, #+0]
   3258                                            lcd_ref_p2 =lcd_ref_p2_record;
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable31_20
   \   000000EA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable31_21
   \   000000F2   0x8008             STRH     R0,[R1, #+0]
   3259                                  }
   3260                    }
   3261          
   3262          }
   \                     ??car_set_start_1: (+1)
   \   000000F4   0xBD01             POP      {R0,PC}          ;; return
   3263          

   \                                 In section .data, align 2
   3264          uint16 stopcount=150;
   \                     stopcount:
   \   00000000   0x0096             DC16 150

   \                                 In section .bss, align 2
   3265          uint16 sumbe4=0,sumbe5=0,sumbe6=0,count_s=0;
   \                     sumbe4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     sumbe5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     sumbe6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     count_s:
   \   00000000                      DS8 2
   3266          

   \                                 In section .text, align 4, keep-with-next
   3267            void  main(void)
   3268          {   
   \                     main: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   3269            volatile uint8 i;
   3270            DisableInterrupts;               //禁止总中断 
   \   00000004   0xB672             CPSID i
   3271            delayms(40);
   \   00000006   0x2028             MOVS     R0,#+40
   \   00000008   0x.... 0x....      BL       delayms
   3272            GIPO_init();
   \   0000000C   0x.... 0x....      BL       GIPO_init
   3273            sensor_init();
   \   00000010   0x.... 0x....      BL       sensor_init
   3274            delayms(1000);
   \   00000014   0xF44F 0x707A      MOV      R0,#+1000
   \   00000018   0x.... 0x....      BL       delayms
   3275            init_gyro();
   \   0000001C   0x.... 0x....      BL       init_gyro
   3276             delayms(10);
   \   00000020   0x200A             MOVS     R0,#+10
   \   00000022   0x.... 0x....      BL       delayms
   3277            pre_show();
   \   00000026   0x.... 0x....      BL       pre_show
   3278           
   3279             FTM_PWM_init( );
   \   0000002A   0x.... 0x....      BL       FTM_PWM_init
   3280             FTM_QUAD_init( ); 
   \   0000002E   0x.... 0x....      BL       FTM_QUAD_init
   3281              
   3282            GPIO_SET(PORTB, 10, 0);
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable31_22
   \   00000036   0x6840             LDR      R0,[R0, #+4]
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF430 0x6080      BICS     R0,R0,#0x400
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable31_22
   \   00000042   0x6849             LDR      R1,[R1, #+4]
   \   00000044   0x6008             STR      R0,[R1, #+0]
   3283            delayms(20);
   \   00000046   0x2014             MOVS     R0,#+20
   \   00000048   0x.... 0x....      BL       delayms
   3284            GPIO_SET(PORTB, 10, 1);
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable31_22
   \   00000050   0x6840             LDR      R0,[R0, #+4]
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable31_22
   \   0000005C   0x6849             LDR      R1,[R1, #+4]
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   3285            
   3286            LCD_Init();
   \   00000060   0x.... 0x....      BL       LCD_Init
   3287            GetPower(); 
   \   00000064   0x.... 0x....      BL       GetPower
   3288            UART0_Init();                 //串口初始化   19200             PTB16 RXD    PTB17 TXD                           李靖康学长    
   \   00000068   0x.... 0x....      BL       UART0_Init
   3289            Initial();
   \   0000006C   0x.... 0x....      BL       Initial
   3290            EXIT_Init();   
   \   00000070   0x.... 0x....      BL       EXIT_Init
   3291              OddEvenStatus = ODD_EVEN_STATUS;
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable31_23  ;; 0x400ff050
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0xF3C0 0x5000      UBFX     R0,R0,#+20,#+1
   \   0000007E   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable31_24
   \   00000086   0x7008             STRB     R0,[R1, #+0]
   3292              VIF = VIF_START;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable31_25
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
   3293           enable_irq(45);           //打开串口中断
   \   00000090   0x202D             MOVS     R0,#+45
   \   00000092   0x.... 0x....      BL       enable_irq
   3294           enable_irq(88);           //打开行中断 
   \   00000096   0x2058             MOVS     R0,#+88
   \   00000098   0x.... 0x....      BL       enable_irq
   3295            
   3296            EnableInterrupts;			              //开总中断
   \   0000009C   0xB662             CPSIE i
   3297            
   3298            redraw();  
   \   0000009E   0x.... 0x....      BL       redraw
   3299            while(1)
   3300              {
   3301                scan_boma();
   \                     ??main_0: (+1)
   \   000000A2   0x.... 0x....      BL       scan_boma
   3302                if(lcd_debug==1)
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable31_26
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xF000 0x8094      BEQ.W    ??main_1
   3303              {  GPIO_SET(PORTB, 10,1);  
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable31_22
   \   000000B6   0x6840             LDR      R0,[R0, #+4]
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable31_22
   \   000000C2   0x6849             LDR      R1,[R1, #+4]
   \   000000C4   0x6008             STR      R0,[R1, #+0]
   3304                if( sumbe2%10==0)
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable31_27
   \   000000CA   0x8800             LDRH     R0,[R0, #+0]
   \   000000CC   0x210A             MOVS     R1,#+10
   \   000000CE   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000D2   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   000000D6   0x2800             CMP      R0,#+0
   \   000000D8   0xD101             BNE.N    ??main_2
   3305                 redraw();
   \   000000DA   0x.... 0x....      BL       redraw
   3306                
   3307                 KeyScan(); 
   \                     ??main_2: (+1)
   \   000000DE   0x.... 0x....      BL       KeyScan
   3308                 angle_kp_across=angle_kp+10;
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable31_15
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable29_7  ;; 0x41200000
   \   000000EC   0x.... 0x....      BL       __aeabi_fadd
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable31_28
   \   000000F4   0x6008             STR      R0,[R1, #+0]
   3309                 angle_kd_across=angle_kd+1;
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable31_16
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0xF05F 0x517E      MOVS     R1,#+1065353216
   \   00000100   0x.... 0x....      BL       __aeabi_fadd
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable31_29
   \   00000108   0x6008             STR      R0,[R1, #+0]
   3310                 Speed_limit_record=Speed_limit;
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable31_13
   \   0000010E   0x8800             LDRH     R0,[R0, #+0]
   \   00000110   0x.... 0x....      LDR.W    R1,??DataTable31_12
   \   00000114   0x8008             STRH     R0,[R1, #+0]
   3311                 lcd_ref_p1_record=lcd_ref_p1;
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable31_19
   \   0000011A   0x8800             LDRH     R0,[R0, #+0]
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable31_18
   \   00000120   0x8008             STRH     R0,[R1, #+0]
   3312                 lcd_ref_p2_record=lcd_ref_p2;
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable31_21
   \   00000126   0x8800             LDRH     R0,[R0, #+0]
   \   00000128   0x.... 0x....      LDR.W    R1,??DataTable31_20
   \   0000012C   0x8008             STRH     R0,[R1, #+0]
   3313                 speed_kp_record=speed_kp;
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable31_11
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable31_9
   \   00000138   0x6008             STR      R0,[R1, #+0]
   3314                 BASE_OT=WHITE_BLACK_OT;
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable30_2
   \   0000013E   0x7800             LDRB     R0,[R0, #+0]
   \   00000140   0x.... 0x....      LDR.W    R1,??DataTable31_30
   \   00000144   0x7008             STRB     R0,[R1, #+0]
   3315                begin=0;
   \   00000146   0x2000             MOVS     R0,#+0
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable31_31
   \   0000014C   0x7008             STRB     R0,[R1, #+0]
   3316                start1=0;
   \   0000014E   0x2000             MOVS     R0,#+0
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable31_32
   \   00000154   0x7008             STRB     R0,[R1, #+0]
   3317               angleout=0;
   \   00000156   0x2000             MOVS     R0,#+0
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable31_3
   \   0000015C   0x8008             STRH     R0,[R1, #+0]
   3318              
   3319               sumbe4=0;
   \   0000015E   0x2000             MOVS     R0,#+0
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable31_33
   \   00000164   0x8008             STRH     R0,[R1, #+0]
   3320               sumbe5=0;
   \   00000166   0x2000             MOVS     R0,#+0
   \   00000168   0x.... 0x....      LDR.W    R1,??DataTable31_34
   \   0000016C   0x8008             STRH     R0,[R1, #+0]
   3321               sumbe6=0;
   \   0000016E   0x2000             MOVS     R0,#+0
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable31_35
   \   00000174   0x8008             STRH     R0,[R1, #+0]
   3322                  if( stop_special_flag==1)
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable30_9
   \   0000017A   0x7800             LDRB     R0,[R0, #+0]
   \   0000017C   0x2800             CMP      R0,#+0
   \   0000017E   0xD007             BEQ.N    ??main_3
   3323                  {
   3324                    Speed=Speed_set;
   \   00000180   0x....             LDR.N    R0,??DataTable29_11
   \   00000182   0x8800             LDRH     R0,[R0, #+0]
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable31_36
   \   00000188   0x8008             STRH     R0,[R1, #+0]
   3325                     stop_special(); 
   \   0000018A   0x.... 0x....      BL       stop_special
   \   0000018E   0xE00F             B.N      ??main_4
   3326                 }
   3327                  else{
   3328                         Speed=0;
   \                     ??main_3: (+1)
   \   00000190   0x2000             MOVS     R0,#+0
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable31_36
   \   00000196   0x8008             STRH     R0,[R1, #+0]
   3329                          ting=0;
   \   00000198   0x2000             MOVS     R0,#+0
   \   0000019A   0x.... 0x....      LDR.W    R1,??DataTable31_37
   \   0000019E   0x7008             STRB     R0,[R1, #+0]
   3330                         ting1=0;
   \   000001A0   0x2000             MOVS     R0,#+0
   \   000001A2   0x.... 0x....      LDR.W    R1,??DataTable31_38
   \   000001A6   0x7008             STRB     R0,[R1, #+0]
   3331                         ting_check_stop=0; 
   \   000001A8   0x2000             MOVS     R0,#+0
   \   000001AA   0x.... 0x....      LDR.W    R1,??DataTable31_39
   \   000001AE   0x7008             STRB     R0,[R1, #+0]
   3332                       } 
   3333               set_up_time=50;
   \                     ??main_4: (+1)
   \   000001B0   0x2032             MOVS     R0,#+50
   \   000001B2   0x.... 0x....      LDR.W    R1,??DataTable31_4
   \   000001B6   0x8008             STRH     R0,[R1, #+0]
   3334               begin2=0;
   \   000001B8   0x2000             MOVS     R0,#+0
   \   000001BA   0x.... 0x....      LDR.W    R1,??DataTable31_40
   \   000001BE   0x7008             STRB     R0,[R1, #+0]
   3335               count_s=0;
   \   000001C0   0x2000             MOVS     R0,#+0
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable31_41
   \   000001C6   0x8008             STRH     R0,[R1, #+0]
   3336               liu=1;
   \   000001C8   0x2001             MOVS     R0,#+1
   \   000001CA   0x.... 0x....      LDR.W    R1,??DataTable31_42
   \   000001CE   0x7008             STRB     R0,[R1, #+0]
   3337              acce_static=ACCE_STATIC; 
   \   000001D0   0x....             LDR.N    R0,??DataTable29_8
   \   000001D2   0x6800             LDR      R0,[R0, #+0]
   \   000001D4   0x.... 0x....      LDR.W    R1,??DataTable31_43
   \   000001D8   0x6008             STR      R0,[R1, #+0]
   3338              }
   3339          
   3340                 if(ImageReady==1&&lcd_debug==0)                                      //图像准备好，再决策
   \                     ??main_1: (+1)
   \   000001DA   0x.... 0x....      LDR.W    R0,??DataTable31_44
   \   000001DE   0x7800             LDRB     R0,[R0, #+0]
   \   000001E0   0x.... 0x....      LDR.W    R1,??DataTable31_26
   \   000001E4   0x7809             LDRB     R1,[R1, #+0]
   \   000001E6   0xF091 0x0101      EORS     R1,R1,#0x1
   \   000001EA   0x4208             TST      R0,R1
   \   000001EC   0xF43F 0xAF59      BEQ.W    ??main_0
   3341                 { TEST_TIME1(1);
   \   000001F0   0x2201             MOVS     R2,#+1
   \   000001F2   0x2106             MOVS     R1,#+6
   \   000001F4   0x2001             MOVS     R0,#+1
   \   000001F6   0x.... 0x....      BL       gpio_set
   3342                 
   3343                   if(start1==0)
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable31_32
   \   000001FE   0x7800             LDRB     R0,[R0, #+0]
   \   00000200   0x2800             CMP      R0,#+0
   \   00000202   0xD11C             BNE.N    ??main_5
   3344                  {
   3345                    Speed=0;
   \   00000204   0x2000             MOVS     R0,#+0
   \   00000206   0x.... 0x....      LDR.W    R1,??DataTable31_36
   \   0000020A   0x8008             STRH     R0,[R1, #+0]
   3346                   sumbe5++;
   \   0000020C   0x.... 0x....      LDR.W    R0,??DataTable31_34
   \   00000210   0x8800             LDRH     R0,[R0, #+0]
   \   00000212   0x1C40             ADDS     R0,R0,#+1
   \   00000214   0x.... 0x....      LDR.W    R1,??DataTable31_34
   \   00000218   0x8008             STRH     R0,[R1, #+0]
   3347                   if(sumbe5>150)
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable31_34
   \   0000021E   0x8800             LDRH     R0,[R0, #+0]
   \   00000220   0x2897             CMP      R0,#+151
   \   00000222   0xDB0C             BLT.N    ??main_5
   3348                   {start1=1;sumbe5=0;Speed=Speed_set;}
   \   00000224   0x2001             MOVS     R0,#+1
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable31_32
   \   0000022A   0x7008             STRB     R0,[R1, #+0]
   \   0000022C   0x2000             MOVS     R0,#+0
   \   0000022E   0x.... 0x....      LDR.W    R1,??DataTable31_34
   \   00000232   0x8008             STRH     R0,[R1, #+0]
   \   00000234   0x....             LDR.N    R0,??DataTable29_11
   \   00000236   0x8800             LDRH     R0,[R0, #+0]
   \   00000238   0x.... 0x....      LDR.W    R1,??DataTable31_36
   \   0000023C   0x8008             STRH     R0,[R1, #+0]
   3349                  }
   3350                  
   3351                  if(start1==1)
   \                     ??main_5: (+1)
   \   0000023E   0x.... 0x....      LDR.W    R0,??DataTable31_32
   \   00000242   0x7800             LDRB     R0,[R0, #+0]
   \   00000244   0x2800             CMP      R0,#+0
   \   00000246   0xF000 0x8125      BEQ.W    ??main_6
   3352                  {
   3353                     if(begin==0)
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable31_31
   \   0000024E   0x7800             LDRB     R0,[R0, #+0]
   \   00000250   0x2800             CMP      R0,#+0
   \   00000252   0xD123             BNE.N    ??main_7
   3354                   {
   3355                 
   3356                   if(sumbe4<100)
   \   00000254   0x.... 0x....      LDR.W    R0,??DataTable31_33
   \   00000258   0x8800             LDRH     R0,[R0, #+0]
   \   0000025A   0x2864             CMP      R0,#+100
   \   0000025C   0xDA10             BGE.N    ??main_8
   3357                        { sumbe4++;begin=0;
   \   0000025E   0x.... 0x....      LDR.W    R0,??DataTable31_33
   \   00000262   0x8800             LDRH     R0,[R0, #+0]
   \   00000264   0x1C40             ADDS     R0,R0,#+1
   \   00000266   0x.... 0x....      LDR.W    R1,??DataTable31_33
   \   0000026A   0x8008             STRH     R0,[R1, #+0]
   \   0000026C   0x2000             MOVS     R0,#+0
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable31_31
   \   00000272   0x7008             STRB     R0,[R1, #+0]
   3358                          gpio_set (PORTB, 10,LOW );
   \   00000274   0x2200             MOVS     R2,#+0
   \   00000276   0x210A             MOVS     R1,#+10
   \   00000278   0x2001             MOVS     R0,#+1
   \   0000027A   0x.... 0x....      BL       gpio_set
   \   0000027E   0xE00D             B.N      ??main_7
   3359                        }
   3360                   else if(sumbe4>99)
   \                     ??main_8: (+1)
   \   00000280   0x.... 0x....      LDR.W    R0,??DataTable31_33
   \   00000284   0x8800             LDRH     R0,[R0, #+0]
   \   00000286   0x2864             CMP      R0,#+100
   \   00000288   0xDB08             BLT.N    ??main_7
   3361                     {
   3362                     begin=1;gpio_set (PORTB, 10,HIGH);
   \   0000028A   0x2001             MOVS     R0,#+1
   \   0000028C   0x.... 0x....      LDR.W    R1,??DataTable31_31
   \   00000290   0x7008             STRB     R0,[R1, #+0]
   \   00000292   0x2201             MOVS     R2,#+1
   \   00000294   0x210A             MOVS     R1,#+10
   \   00000296   0x2001             MOVS     R0,#+1
   \   00000298   0x.... 0x....      BL       gpio_set
   3363                     }
   3364                   } 
   3365                     if(feng==1)
   \                     ??main_7: (+1)
   \   0000029C   0x.... 0x....      LDR.W    R0,??DataTable31
   \   000002A0   0x7800             LDRB     R0,[R0, #+0]
   \   000002A2   0x2800             CMP      R0,#+0
   \   000002A4   0xD00D             BEQ.N    ??main_9
   3366                     {
   3367                      if(set_up_time>0)   set_up_time--;
   \   000002A6   0x.... 0x....      LDR.W    R0,??DataTable31_4
   \   000002AA   0x8800             LDRH     R0,[R0, #+0]
   \   000002AC   0x2800             CMP      R0,#+0
   \   000002AE   0xD006             BEQ.N    ??main_10
   \   000002B0   0x.... 0x....      LDR.W    R0,??DataTable31_4
   \   000002B4   0x8800             LDRH     R0,[R0, #+0]
   \   000002B6   0x1E40             SUBS     R0,R0,#+1
   \   000002B8   0x.... 0x....      LDR.W    R1,??DataTable31_4
   \   000002BC   0x8008             STRH     R0,[R1, #+0]
   3368                        car_set_start();
   \                     ??main_10: (+1)
   \   000002BE   0x.... 0x....      BL       car_set_start
   3369                     }
   3370                  
   3371                   if(begin2==0)
   \                     ??main_9: (+1)
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable31_40
   \   000002C6   0x7800             LDRB     R0,[R0, #+0]
   \   000002C8   0x2800             CMP      R0,#+0
   \   000002CA   0xD116             BNE.N    ??main_11
   3372                   {
   3373                    count_s++;
   \   000002CC   0x.... 0x....      LDR.W    R0,??DataTable31_41
   \   000002D0   0x8800             LDRH     R0,[R0, #+0]
   \   000002D2   0x1C40             ADDS     R0,R0,#+1
   \   000002D4   0x.... 0x....      LDR.W    R1,??DataTable31_41
   \   000002D8   0x8008             STRH     R0,[R1, #+0]
   3374                    if(count_s>stopcount)
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable31_45
   \   000002DE   0x8800             LDRH     R0,[R0, #+0]
   \   000002E0   0x.... 0x....      LDR.W    R1,??DataTable31_41
   \   000002E4   0x8809             LDRH     R1,[R1, #+0]
   \   000002E6   0x4288             CMP      R0,R1
   \   000002E8   0xD207             BCS.N    ??main_11
   3375                            {begin2=1;count_s=0;}
   \   000002EA   0x2001             MOVS     R0,#+1
   \   000002EC   0x.... 0x....      LDR.W    R1,??DataTable31_40
   \   000002F0   0x7008             STRB     R0,[R1, #+0]
   \   000002F2   0x2000             MOVS     R0,#+0
   \   000002F4   0x.... 0x....      LDR.W    R1,??DataTable31_41
   \   000002F8   0x8008             STRH     R0,[R1, #+0]
   3376                   
   3377                   }
   3378                    
   3379                    
   3380                 for(i = 0;i< ROW ; i++)
   \                     ??main_11: (+1)
   \   000002FA   0x2000             MOVS     R0,#+0
   \   000002FC   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \                     ??main_12: (+1)
   \   00000300   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000304   0x2832             CMP      R0,#+50
   \   00000306   0xDA66             BGE.N    ??main_13
   3381                     for(j= 0;j<COLUMN;j++)
   \   00000308   0x2000             MOVS     R0,#+0
   \   0000030A   0x.... 0x....      LDR.W    R1,??DataTable31_46
   \   0000030E   0x7008             STRB     R0,[R1, #+0]
   \                     ??main_14: (+1)
   \   00000310   0x.... 0x....      LDR.W    R0,??DataTable31_46
   \   00000314   0x7800             LDRB     R0,[R0, #+0]
   \   00000316   0x289D             CMP      R0,#+157
   \   00000318   0xDA57             BGE.N    ??main_15
   3382                     {
   3383                    /* 
   3384                       if(i>40&&VideoImage2[i][j]>30)
   3385                        {  
   3386                         VideoImage2[i][j]=VideoImage2[i][j]-2*(i-40);  
   3387                        }
   3388                     */
   3389                         if(i<10&&VideoImage2[i][j]<180)
   \   0000031A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000031E   0x280A             CMP      R0,#+10
   \   00000320   0xDA24             BGE.N    ??main_16
   \   00000322   0x.... 0x....      LDR.W    R0,??DataTable30_3
   \   00000326   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   0000032A   0x229D             MOVS     R2,#+157
   \   0000032C   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000330   0x.... 0x....      LDR.W    R1,??DataTable31_46
   \   00000334   0x7809             LDRB     R1,[R1, #+0]
   \   00000336   0x5C08             LDRB     R0,[R1, R0]
   \   00000338   0x28B4             CMP      R0,#+180
   \   0000033A   0xDA17             BGE.N    ??main_16
   3390                        {  
   3391                         VideoImage2[i][j]=VideoImage2[i][j]+15;  
   \   0000033C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000340   0x.... 0x....      LDR.W    R1,??DataTable30_3
   \   00000344   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000346   0x229D             MOVS     R2,#+157
   \   00000348   0xFB02 0x1000      MLA      R0,R2,R0,R1
   \   0000034C   0x.... 0x....      LDR.W    R1,??DataTable31_46
   \   00000350   0x7809             LDRB     R1,[R1, #+0]
   \   00000352   0x.... 0x....      LDR.W    R2,??DataTable30_3
   \   00000356   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   0000035A   0x249D             MOVS     R4,#+157
   \   0000035C   0xFB04 0x2203      MLA      R2,R4,R3,R2
   \   00000360   0x.... 0x....      LDR.W    R3,??DataTable31_46
   \   00000364   0x781B             LDRB     R3,[R3, #+0]
   \   00000366   0x5C9A             LDRB     R2,[R3, R2]
   \   00000368   0x320F             ADDS     R2,R2,#+15
   \   0000036A   0x540A             STRB     R2,[R1, R0]
   3392                        }
   3393              
   3394                       if(VideoImage2[i][j] > WHITE_BLACK_OT)
   \                     ??main_16: (+1)
   \   0000036C   0x....             LDR.N    R0,??DataTable30_2
   \   0000036E   0x7800             LDRB     R0,[R0, #+0]
   \   00000370   0x....             LDR.N    R1,??DataTable30_3
   \   00000372   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000376   0x239D             MOVS     R3,#+157
   \   00000378   0xFB03 0x1102      MLA      R1,R3,R2,R1
   \   0000037C   0x.... 0x....      LDR.W    R2,??DataTable31_46
   \   00000380   0x7812             LDRB     R2,[R2, #+0]
   \   00000382   0x5C51             LDRB     R1,[R2, R1]
   \   00000384   0x4288             CMP      R0,R1
   \   00000386   0xD20C             BCS.N    ??main_17
   3395                       {
   3396                           VideoImage1[i][j] = WHITE;
   \   00000388   0x.... 0x....      LDR.W    R0,??DataTable31_47
   \   0000038C   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000390   0x229D             MOVS     R2,#+157
   \   00000392   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000396   0x.... 0x....      LDR.W    R1,??DataTable31_46
   \   0000039A   0x7809             LDRB     R1,[R1, #+0]
   \   0000039C   0x22FF             MOVS     R2,#+255
   \   0000039E   0x540A             STRB     R2,[R1, R0]
   \   000003A0   0xE00B             B.N      ??main_18
   3397                       }
   3398                       else
   3399                       {
   3400                          VideoImage1[i][j] =BLACK;
   \                     ??main_17: (+1)
   \   000003A2   0x.... 0x....      LDR.W    R0,??DataTable31_47
   \   000003A6   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   000003AA   0x229D             MOVS     R2,#+157
   \   000003AC   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   000003B0   0x.... 0x....      LDR.W    R1,??DataTable31_46
   \   000003B4   0x7809             LDRB     R1,[R1, #+0]
   \   000003B6   0x220A             MOVS     R2,#+10
   \   000003B8   0x540A             STRB     R2,[R1, R0]
   3401                       }
   3402                     } 
   \                     ??main_18: (+1)
   \   000003BA   0x.... 0x....      LDR.W    R0,??DataTable31_46
   \   000003BE   0x7800             LDRB     R0,[R0, #+0]
   \   000003C0   0x1C40             ADDS     R0,R0,#+1
   \   000003C2   0x.... 0x....      LDR.W    R1,??DataTable31_46
   \   000003C6   0x7008             STRB     R0,[R1, #+0]
   \   000003C8   0xE7A2             B.N      ??main_14
   \                     ??main_15: (+1)
   \   000003CA   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000003CE   0x1C40             ADDS     R0,R0,#+1
   \   000003D0   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   000003D4   0xE794             B.N      ??main_12
   3403                  
   3404              
   3405                  Search_WhiteBase();
   \                     ??main_13: (+1)
   \   000003D6   0x.... 0x....      BL       Search_WhiteBase
   3406                   
   3407                  if(find_whitebase_flag == 1)  
   \   000003DA   0x.... 0x....      LDR.W    R0,??DataTable31_48
   \   000003DE   0x7800             LDRB     R0,[R0, #+0]
   \   000003E0   0x2800             CMP      R0,#+0
   \   000003E2   0xD005             BEQ.N    ??main_19
   3408                  {
   3409                    Search_BlackEdge();
   \   000003E4   0x.... 0x....      BL       Search_BlackEdge
   3410                    Deal_BlackEdge();
   \   000003E8   0x.... 0x....      BL       Deal_BlackEdge
   3411                    get_line_information();
   \   000003EC   0x.... 0x....      BL       get_line_information
   3412                  }   
   3413                  
   3414              //  if(feng==1)   gpio_set (PORTB, 10,LOW );       
   3415               if(bm3==1)
   \                     ??main_19: (+1)
   \   000003F0   0x....             LDR.N    R0,??DataTable30_10
   \   000003F2   0x7800             LDRB     R0,[R0, #+0]
   \   000003F4   0x2800             CMP      R0,#+0
   \   000003F6   0xD00B             BEQ.N    ??main_20
   3416               {
   3417                barrier();
   \   000003F8   0x.... 0x....      BL       barrier
   3418                across_smile();
   \   000003FC   0x.... 0x....      BL       across_smile
   3419                if(begin2==1)
   \   00000400   0x.... 0x....      LDR.W    R0,??DataTable31_40
   \   00000404   0x7800             LDRB     R0,[R0, #+0]
   \   00000406   0x2800             CMP      R0,#+0
   \   00000408   0xD006             BEQ.N    ??main_21
   3420                  check_start_stop_line();
   \   0000040A   0x.... 0x....      BL       check_start_stop_line
   \   0000040E   0xE003             B.N      ??main_21
   3421               }
   3422               
   3423               else
   3424               {
   3425                  ting_check_stop=0;
   \                     ??main_20: (+1)
   \   00000410   0x2000             MOVS     R0,#+0
   \   00000412   0x.... 0x....      LDR.W    R1,??DataTable31_39
   \   00000416   0x7008             STRB     R0,[R1, #+0]
   3426               }
   3427               if(ting_check_stop==1)   gpio_set (PORTB, 10,LOW );
   \                     ??main_21: (+1)
   \   00000418   0x.... 0x....      LDR.W    R0,??DataTable31_39
   \   0000041C   0x7800             LDRB     R0,[R0, #+0]
   \   0000041E   0x2800             CMP      R0,#+0
   \   00000420   0xD004             BEQ.N    ??main_22
   \   00000422   0x2200             MOVS     R2,#+0
   \   00000424   0x210A             MOVS     R1,#+10
   \   00000426   0x2001             MOVS     R0,#+1
   \   00000428   0x.... 0x....      BL       gpio_set
   3428               
   3429               Control();
   \                     ??main_22: (+1)
   \   0000042C   0x.... 0x....      BL       Control
   3430               
   3431               if( stop_special_flag==1&&ting==0&&begin==1&&barrier_l==0&&barrier_r==0)
   \   00000430   0x....             LDR.N    R0,??DataTable30_9
   \   00000432   0x7800             LDRB     R0,[R0, #+0]
   \   00000434   0x.... 0x....      LDR.W    R1,??DataTable31_37
   \   00000438   0x7809             LDRB     R1,[R1, #+0]
   \   0000043A   0xF091 0x0101      EORS     R1,R1,#0x1
   \   0000043E   0x4008             ANDS     R0,R1,R0
   \   00000440   0x.... 0x....      LDR.W    R1,??DataTable31_31
   \   00000444   0x7809             LDRB     R1,[R1, #+0]
   \   00000446   0x4008             ANDS     R0,R1,R0
   \   00000448   0x.... 0x....      LDR.W    R1,??DataTable31_49
   \   0000044C   0x7809             LDRB     R1,[R1, #+0]
   \   0000044E   0xF091 0x0101      EORS     R1,R1,#0x1
   \   00000452   0x4008             ANDS     R0,R1,R0
   \   00000454   0x.... 0x....      LDR.W    R1,??DataTable31_50
   \   00000458   0x7809             LDRB     R1,[R1, #+0]
   \   0000045A   0xF091 0x0101      EORS     R1,R1,#0x1
   \   0000045E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000460   0x4208             TST      R0,R1
   \   00000462   0xD002             BEQ.N    ??main_23
   3432               {
   3433                  stop_special(); 
   \   00000464   0x.... 0x....      BL       stop_special
   \   00000468   0xE00D             B.N      ??main_24
   3434               }
   3435               else if(stop_special_flag==0)
   \                     ??main_23: (+1)
   \   0000046A   0x....             LDR.N    R0,??DataTable30_9
   \   0000046C   0x7800             LDRB     R0,[R0, #+0]
   \   0000046E   0x2800             CMP      R0,#+0
   \   00000470   0xD109             BNE.N    ??main_24
   3436               {
   3437                   LCD_PrintImage((uint8 *)VideoImage1, 50, 157);     
   \   00000472   0x229D             MOVS     R2,#+157
   \   00000474   0x2132             MOVS     R1,#+50
   \   00000476   0x.... 0x....      LDR.W    R0,??DataTable31_47
   \   0000047A   0x.... 0x....      BL       LCD_PrintImage
   3438                   ting=0;
   \   0000047E   0x2000             MOVS     R0,#+0
   \   00000480   0x.... 0x....      LDR.W    R1,??DataTable31_37
   \   00000484   0x7008             STRB     R0,[R1, #+0]
   3439                }
   3440          
   3441                  SCI0_send_mesage();  
   \                     ??main_24: (+1)
   \   00000486   0x.... 0x....      BL       SCI0_send_mesage
   3442                TEST_TIME1(0);         
   \   0000048A   0x2200             MOVS     R2,#+0
   \   0000048C   0x2106             MOVS     R1,#+6
   \   0000048E   0x2001             MOVS     R0,#+1
   \   00000490   0x.... 0x....      BL       gpio_set
   3443                  }  
   3444                 while(ImageReady);   
   \                     ??main_6: (+1)
   \   00000494   0x.... 0x....      LDR.W    R0,??DataTable31_44
   \   00000498   0x7800             LDRB     R0,[R0, #+0]
   \   0000049A   0x2800             CMP      R0,#+0
   \   0000049C   0xD1FA             BNE.N    ??main_6
   \   0000049E   0xE600             B.N      ??main_0
   3445               
   3446                 }
   3447            
   3448            } 
   3449          
   3450          }
   3451          

   \                                 In section .text, align 4, keep-with-next
   3452          void uart0_isr(void)          //串口中断
   3453          {    
   \                     uart0_isr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   3454              DisableInterrupts;   // 关总中断也可以，但在有更高级中断存在里不推荐
   \   00000002   0xB672             CPSID i
   3455                uint8 ch;
   3456               while(!(UART0_S1&UART_S1_RDRF_MASK));
   \                     ??uart0_isr_0: (+1)
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable31_51  ;; 0x4006a004
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x0680             LSLS     R0,R0,#+26
   \   0000000C   0xD5FA             BPL.N    ??uart0_isr_0
   3457                ch = UART0_D;   
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable31_52  ;; 0x4006a007
   \   00000012   0x7800             LDRB     R0,[R0, #+0]
   \   00000014   0x0004             MOVS     R4,R0
   3458               if(deal_r_flag==1)
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable31_53
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xF000 0x808D      BEQ.W    ??uart0_isr_1
   3459               {
   3460                r_count++; 
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable31_54
   \   00000026   0x8800             LDRH     R0,[R0, #+0]
   \   00000028   0x1C40             ADDS     R0,R0,#+1
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable31_54
   \   0000002E   0x8008             STRH     R0,[R1, #+0]
   3461                if(ch!=0)
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x2C00             CMP      R4,#+0
   \   00000034   0xD075             BEQ.N    ??uart0_isr_2
   3462                {
   3463                  switch(r_count)
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable31_54
   \   0000003A   0x8800             LDRH     R0,[R0, #+0]
   \   0000003C   0x2801             CMP      R0,#+1
   \   0000003E   0xD014             BEQ.N    ??uart0_isr_3
   \   00000040   0x2802             CMP      R0,#+2
   \   00000042   0xD016             BEQ.N    ??uart0_isr_4
   \   00000044   0x2803             CMP      R0,#+3
   \   00000046   0xD020             BEQ.N    ??uart0_isr_5
   \   00000048   0x2804             CMP      R0,#+4
   \   0000004A   0xD026             BEQ.N    ??uart0_isr_6
   \   0000004C   0x2805             CMP      R0,#+5
   \   0000004E   0xD028             BEQ.N    ??uart0_isr_7
   \   00000050   0x2806             CMP      R0,#+6
   \   00000052   0xD030             BEQ.N    ??uart0_isr_8
   \   00000054   0x2807             CMP      R0,#+7
   \   00000056   0xD032             BEQ.N    ??uart0_isr_9
   \   00000058   0x2808             CMP      R0,#+8
   \   0000005A   0xD03A             BEQ.N    ??uart0_isr_10
   \   0000005C   0x2809             CMP      R0,#+9
   \   0000005E   0xD03F             BEQ.N    ??uart0_isr_11
   \   00000060   0x280B             CMP      R0,#+11
   \   00000062   0xD04E             BEQ.N    ??uart0_isr_12
   \   00000064   0x280C             CMP      R0,#+12
   \   00000066   0xD050             BEQ.N    ??uart0_isr_13
   \   00000068   0xE05B             B.N      ??uart0_isr_14
   3464                  {
   3465                  case 1:
   3466                        se1=ch;
   \                     ??uart0_isr_3: (+1)
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable31_55
   \   0000006E   0x7004             STRB     R4,[R0, #+0]
   3467                        break;
   \   00000070   0xE057             B.N      ??uart0_isr_2
   3468                  case 2:
   3469                        angle_kp=( float)( (se1<<8)|ch );
   \                     ??uart0_isr_4: (+1)
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable31_55
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0xEA54 0x2000      ORRS     R0,R4,R0, LSL #+8
   \   0000007E   0x.... 0x....      BL       __aeabi_i2f
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable31_15
   \   00000086   0x6008             STR      R0,[R1, #+0]
   3470                        break;
   \   00000088   0xE04B             B.N      ??uart0_isr_2
   3471                  case 3:
   3472                        angle_kd=(float )( ch);
   \                     ??uart0_isr_5: (+1)
   \   0000008A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008C   0x0020             MOVS     R0,R4
   \   0000008E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable31_16
   \   00000096   0x6008             STR      R0,[R1, #+0]
   3473                        break;      
   \   00000098   0xE043             B.N      ??uart0_isr_2
   3474                  case 4:
   3475                        se2=ch;
   \                     ??uart0_isr_6: (+1)
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable31_56
   \   0000009E   0x7004             STRB     R4,[R0, #+0]
   3476                        break;
   \   000000A0   0xE03F             B.N      ??uart0_isr_2
   3477                  case 5:
   3478                       error_servo_ref_d =( uint16)( (se2<<8)|ch );
   \                     ??uart0_isr_7: (+1)
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable31_56
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000AA   0xEA54 0x2000      ORRS     R0,R4,R0, LSL #+8
   \   000000AE   0x.... 0x....      LDR.W    R1,??DataTable31_57
   \   000000B2   0x8008             STRH     R0,[R1, #+0]
   3479                        break;
   \   000000B4   0xE035             B.N      ??uart0_isr_2
   3480                  case 6:
   3481                        se2=(uint8)( ch);
   \                     ??uart0_isr_8: (+1)
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable31_56
   \   000000BA   0x7004             STRB     R4,[R0, #+0]
   3482                        break;
   \   000000BC   0xE031             B.N      ??uart0_isr_2
   3483                        
   3484                  case 7:
   3485                        error_servo_ref_p=( uint16)( (se2<<8)|ch );
   \                     ??uart0_isr_9: (+1)
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable31_56
   \   000000C2   0x7800             LDRB     R0,[R0, #+0]
   \   000000C4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C6   0xEA54 0x2000      ORRS     R0,R4,R0, LSL #+8
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable31_58
   \   000000CE   0x8008             STRH     R0,[R1, #+0]
   3486                        break;
   \   000000D0   0xE027             B.N      ??uart0_isr_2
   3487                  case 8:
   3488                        speed_kp=(float )( ch);
   \                     ??uart0_isr_10: (+1)
   \   000000D2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D4   0x0020             MOVS     R0,R4
   \   000000D6   0x.... 0x....      BL       __aeabi_ui2f
   \   000000DA   0x....             LDR.N    R1,??DataTable31_11
   \   000000DC   0x6008             STR      R0,[R1, #+0]
   3489                        break;
   \   000000DE   0xE020             B.N      ??uart0_isr_2
   3490                  case 9:
   3491                       speed_ki=(float)( ch )/10.0;
   \                     ??uart0_isr_11: (+1)
   \   000000E0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E2   0x0020             MOVS     R0,R4
   \   000000E4   0x.... 0x....      BL       __aeabi_ui2f
   \   000000E8   0x.... 0x....      BL       __aeabi_f2d
   \   000000EC   0x2200             MOVS     R2,#+0
   \   000000EE   0x.... 0x....      LDR.W    R3,??DataTable31_59  ;; 0x40240000
   \   000000F2   0x.... 0x....      BL       __aeabi_ddiv
   \   000000F6   0x.... 0x....      BL       __aeabi_d2f
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable31_60
   \   000000FE   0x6008             STR      R0,[R1, #+0]
   3492                        break;
   \   00000100   0xE00F             B.N      ??uart0_isr_2
   3493                //  case 10:
   3494                   //    Speed_set=(uint16 )( ch);
   3495                   //     break;
   3496                  case 11:
   3497                        se3=ch;
   \                     ??uart0_isr_12: (+1)
   \   00000102   0x.... 0x....      LDR.W    R0,??DataTable31_61
   \   00000106   0x7004             STRB     R4,[R0, #+0]
   3498                        break;
   \   00000108   0xE00B             B.N      ??uart0_isr_2
   3499                  case 12:
   3500                        ACCE_STATIC=(float)( (se3<<8)|ch );
   \                     ??uart0_isr_13: (+1)
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable31_61
   \   0000010E   0x7800             LDRB     R0,[R0, #+0]
   \   00000110   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000112   0xEA54 0x2000      ORRS     R0,R4,R0, LSL #+8
   \   00000116   0x.... 0x....      BL       __aeabi_i2f
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable31_62
   \   0000011E   0x6008             STR      R0,[R1, #+0]
   3501                        break;
   \   00000120   0xE7FF             B.N      ??uart0_isr_2
   3502                  /*case 12:
   3503                        se7=ch;
   3504                        break;   */   
   3505                  default:break;
   3506                  }
   3507                }
   3508                
   3509                if(r_count==13)
   \                     ??uart0_isr_14: (+1)
   \                     ??uart0_isr_2: (+1)
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable31_54
   \   00000126   0x8800             LDRH     R0,[R0, #+0]
   \   00000128   0x280D             CMP      R0,#+13
   \   0000012A   0xD107             BNE.N    ??uart0_isr_1
   3510                {
   3511                  //response=1;
   3512                  deal_r_flag=0;
   \   0000012C   0x2000             MOVS     R0,#+0
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable31_53
   \   00000132   0x7008             STRB     R0,[R1, #+0]
   3513                  r_count=0;
   \   00000134   0x2000             MOVS     R0,#+0
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable31_54
   \   0000013A   0x8008             STRH     R0,[R1, #+0]
   3514                }
   3515              }
   3516             
   3517                if(ch==0x40) //图像
   \                     ??uart0_isr_1: (+1)
   \   0000013C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000013E   0x2C40             CMP      R4,#+64
   \   00000140   0xD103             BNE.N    ??uart0_isr_15
   3518                {
   3519                   send_mes=4;
   \   00000142   0x2004             MOVS     R0,#+4
   \   00000144   0x....             LDR.N    R1,??DataTable30_1
   \   00000146   0x7008             STRB     R0,[R1, #+0]
   \   00000148   0xE040             B.N      ??uart0_isr_16
   3520                }
   3521               
   3522                else if(ch==0x41)//fuwei
   \                     ??uart0_isr_15: (+1)
   \   0000014A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000014C   0x2C41             CMP      R4,#+65
   \   0000014E   0xD103             BNE.N    ??uart0_isr_17
   3523                {
   3524                   send_mes=0;
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x....             LDR.N    R1,??DataTable30_1
   \   00000154   0x7008             STRB     R0,[R1, #+0]
   \   00000156   0xE039             B.N      ??uart0_isr_16
   3525                }
   3526                
   3527                else if(ch==0x01)//停
   \                     ??uart0_isr_17: (+1)
   \   00000158   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000015A   0x2C01             CMP      R4,#+1
   \   0000015C   0xD103             BNE.N    ??uart0_isr_18
   3528                {
   3529                  ting=1;
   \   0000015E   0x2001             MOVS     R0,#+1
   \   00000160   0x....             LDR.N    R1,??DataTable31_37
   \   00000162   0x7008             STRB     R0,[R1, #+0]
   \   00000164   0xE032             B.N      ??uart0_isr_16
   3530                }
   3531                else if(ch==0x42)//参数获取
   \                     ??uart0_isr_18: (+1)
   \   00000166   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000168   0x2C42             CMP      R4,#+66
   \   0000016A   0xD103             BNE.N    ??uart0_isr_19
   3532                {
   3533                  send_mes=1;
   \   0000016C   0x2001             MOVS     R0,#+1
   \   0000016E   0x....             LDR.N    R1,??DataTable30_1
   \   00000170   0x7008             STRB     R0,[R1, #+0]
   \   00000172   0xE02B             B.N      ??uart0_isr_16
   3534                  //SCI0_send_mesage(); 
   3535                }
   3536               
   3537               else if( ch==0x43&&deal_r_flag==0 )//参数读取
   \                     ??uart0_isr_19: (+1)
   \   00000174   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000176   0x2C43             CMP      R4,#+67
   \   00000178   0xD10A             BNE.N    ??uart0_isr_20
   \   0000017A   0x....             LDR.N    R0,??DataTable31_53
   \   0000017C   0x7800             LDRB     R0,[R0, #+0]
   \   0000017E   0x2800             CMP      R0,#+0
   \   00000180   0xD106             BNE.N    ??uart0_isr_20
   3538               {
   3539                  deal_r_flag=1;
   \   00000182   0x2001             MOVS     R0,#+1
   \   00000184   0x....             LDR.N    R1,??DataTable31_53
   \   00000186   0x7008             STRB     R0,[R1, #+0]
   3540                  send_mes=0;
   \   00000188   0x2000             MOVS     R0,#+0
   \   0000018A   0x....             LDR.N    R1,??DataTable30_1
   \   0000018C   0x7008             STRB     R0,[R1, #+0]
   \   0000018E   0xE01D             B.N      ??uart0_isr_16
   3541               }
   3542               
   3543                else if(ch==0x44) //直立波形
   \                     ??uart0_isr_20: (+1)
   \   00000190   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000192   0x2C44             CMP      R4,#+68
   \   00000194   0xD103             BNE.N    ??uart0_isr_21
   3544                {
   3545                  send_mes=2;
   \   00000196   0x2002             MOVS     R0,#+2
   \   00000198   0x....             LDR.N    R1,??DataTable30_1
   \   0000019A   0x7008             STRB     R0,[R1, #+0]
   \   0000019C   0xE016             B.N      ??uart0_isr_16
   3546                  //SCI0_send_mesage(); 
   3547                }
   3548               
   3549                else if(ch==0x45)//速度波形
   \                     ??uart0_isr_21: (+1)
   \   0000019E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001A0   0x2C45             CMP      R4,#+69
   \   000001A2   0xD103             BNE.N    ??uart0_isr_22
   3550                {
   3551                  send_mes=3;
   \   000001A4   0x2003             MOVS     R0,#+3
   \   000001A6   0x....             LDR.N    R1,??DataTable30_1
   \   000001A8   0x7008             STRB     R0,[R1, #+0]
   \   000001AA   0xE00F             B.N      ??uart0_isr_16
   3552                  //SCI0_send_mesage(); 
   3553                }
   3554               
   3555               else if(ch==0x46) //待定
   \                     ??uart0_isr_22: (+1)
   \   000001AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001AE   0x2C46             CMP      R4,#+70
   \   000001B0   0xD103             BNE.N    ??uart0_isr_23
   3556                {
   3557                  send_mes=0;
   \   000001B2   0x2000             MOVS     R0,#+0
   \   000001B4   0x....             LDR.N    R1,??DataTable30_1
   \   000001B6   0x7008             STRB     R0,[R1, #+0]
   \   000001B8   0xE008             B.N      ??uart0_isr_16
   3558                  //SCI0_send_mesage(); 
   3559                }
   3560               
   3561               else if(ch==0x88)//低速发车
   \                     ??uart0_isr_23: (+1)
   \   000001BA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001BC   0x2C88             CMP      R4,#+136
   \   000001BE   0xD105             BNE.N    ??uart0_isr_16
   3562               {
   3563                  lcd_debug = 0;
   \   000001C0   0x2000             MOVS     R0,#+0
   \   000001C2   0x....             LDR.N    R1,??DataTable31_26
   \   000001C4   0x7008             STRB     R0,[R1, #+0]
   3564                  stop_special_flag=1; 
   \   000001C6   0x2001             MOVS     R0,#+1
   \   000001C8   0x....             LDR.N    R1,??DataTable30_9
   \   000001CA   0x7008             STRB     R0,[R1, #+0]
   3565            //      Speed_set=20;
   3566                  
   3567               }
   3568             
   3569              EnableInterrupts;
   \                     ??uart0_isr_16: (+1)
   \   000001CC   0xB662             CPSIE i
   3570          }
   \   000001CE   0xBD10             POP      {R4,PC}          ;; return
   3571           
   3572          

   \                                 In section .text, align 4, keep-with-next
   3573          void PTB_isr(void)//对于场中断20ms和行中断63us都是摄像头的固有的频率，不需要用软件去定时
   3574          {        
   \                     PTB_isr: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   3575              uint16 i; 
   3576             DisableInterrupts; 
   \   00000002   0xB672             CPSID i
   3577             PORTB_PCR22|=PORT_PCR_ISF_MASK;  //清除中断标志位/////////////////////////////////////////////////////////////////////////////////////////////////////  
   \   00000004   0x....             LDR.N    R0,??DataTable31_63  ;; 0x4004a058
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   0000000C   0x....             LDR.N    R1,??DataTable31_63  ;; 0x4004a058
   \   0000000E   0x6008             STR      R0,[R1, #+0]
   3578             sumbel++;
   \   00000010   0x....             LDR.N    R0,??DataTable31_64
   \   00000012   0x8800             LDRH     R0,[R0, #+0]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x....             LDR.N    R1,??DataTable31_64
   \   00000018   0x8008             STRH     R0,[R1, #+0]
   3579              if(tingting==0)
   \   0000001A   0x....             LDR.N    R0,??DataTable31_65
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xF040 0x8095      BNE.W    ??PTB_isr_0
   3580            {
   3581               if (VIF == VIF_START)                              //开始采样标志
   \   00000024   0x....             LDR.N    R0,??DataTable31_25
   \   00000026   0x7800             LDRB     R0,[R0, #+0]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD12D             BNE.N    ??PTB_isr_1
   3582                { 
   3583                  LineCount++;
   \   0000002C   0x....             LDR.N    R0,??DataTable31_66
   \   0000002E   0x8800             LDRH     R0,[R0, #+0]
   \   00000030   0x1C40             ADDS     R0,R0,#+1
   \   00000032   0x....             LDR.N    R1,??DataTable31_66
   \   00000034   0x8008             STRH     R0,[R1, #+0]
   3584                  if(OddEvenStatus != ODD_EVEN_STATUS)         ///////////////////////////////////////////////////////////////////////////////////////////////
   \   00000036   0x....             LDR.N    R0,??DataTable31_24
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x....             LDR.N    R1,??DataTable31_23  ;; 0x400ff050
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x0D09             LSRS     R1,R1,#+20
   \   00000040   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   00000044   0x4288             CMP      R0,R1
   \   00000046   0xD013             BEQ.N    ??PTB_isr_2
   3585                  {
   3586                    OddEvenStatus = ODD_EVEN_STATUS;	//奇偶场标志
   \   00000048   0x....             LDR.N    R0,??DataTable31_23  ;; 0x400ff050
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF3C0 0x5000      UBFX     R0,R0,#+20,#+1
   \   00000050   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000054   0x....             LDR.N    R1,??DataTable31_24
   \   00000056   0x7008             STRB     R0,[R1, #+0]
   3587                    VIF = VIF_WAITSAMPLE;   		//下一个状态为等待采样
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x....             LDR.N    R1,??DataTable31_25
   \   0000005C   0x7008             STRB     R0,[R1, #+0]
   3588                    VideoImageLine = 0;
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x....             LDR.N    R1,??DataTable31_67
   \   00000062   0x7008             STRB     R0,[R1, #+0]
   3589                    LineCount = 0;
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x....             LDR.N    R1,??DataTable31_66
   \   00000068   0x8008             STRH     R0,[R1, #+0]
   3590                    ImageReady = 0;   
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x....             LDR.N    R1,??DataTable31_44
   \   0000006E   0x7008             STRB     R0,[R1, #+0]
   3591                   }
   3592                    if( sumbel>= 16)    
   \                     ??PTB_isr_2: (+1)
   \   00000070   0x....             LDR.N    R0,??DataTable31_64
   \   00000072   0x8800             LDRH     R0,[R0, #+0]
   \   00000074   0x2810             CMP      R0,#+16
   \   00000076   0xF2C0 0x808D      BLT.W    ??PTB_isr_3
   3593                 { 
   3594                  sumbel=0;
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x....             LDR.N    R1,??DataTable31_64
   \   0000007E   0x8008             STRH     R0,[R1, #+0]
   3595                   tingting=1;
   \   00000080   0x2001             MOVS     R0,#+1
   \   00000082   0x....             LDR.N    R1,??DataTable31_65
   \   00000084   0x7008             STRB     R0,[R1, #+0]
   \   00000086   0xE085             B.N      ??PTB_isr_3
   3596                 }  
   3597                 }
   3598              else if (VIF == VIF_WAITSAMPLE)                 //等待采样,此时略去VIDEO_START_LINE行
   \                     ??PTB_isr_1: (+1)
   \   00000088   0x....             LDR.N    R0,??DataTable31_25
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x2801             CMP      R0,#+1
   \   0000008E   0xD116             BNE.N    ??PTB_isr_4
   3599                { 
   3600                    LineCount++;
   \   00000090   0x....             LDR.N    R0,??DataTable31_66
   \   00000092   0x8800             LDRH     R0,[R0, #+0]
   \   00000094   0x1C40             ADDS     R0,R0,#+1
   \   00000096   0x....             LDR.N    R1,??DataTable31_66
   \   00000098   0x8008             STRH     R0,[R1, #+0]
   3601                    if (LineCount >= VIDEO_START_LINE)
   \   0000009A   0x....             LDR.N    R0,??DataTable31_66
   \   0000009C   0x8800             LDRH     R0,[R0, #+0]
   \   0000009E   0x2850             CMP      R0,#+80
   \   000000A0   0xDB02             BLT.N    ??PTB_isr_5
   3602                    {
   3603                        VIF = VIF_SAMPLELINE;                 //下一个状态为采样状态
   \   000000A2   0x2002             MOVS     R0,#+2
   \   000000A4   0x....             LDR.N    R1,??DataTable31_25
   \   000000A6   0x7008             STRB     R0,[R1, #+0]
   3604                    } 
   3605                      if( sumbel>= 16)    
   \                     ??PTB_isr_5: (+1)
   \   000000A8   0x....             LDR.N    R0,??DataTable31_64
   \   000000AA   0x8800             LDRH     R0,[R0, #+0]
   \   000000AC   0x2810             CMP      R0,#+16
   \   000000AE   0xDB71             BLT.N    ??PTB_isr_3
   3606                 { 
   3607                  sumbel=0;
   \   000000B0   0x2000             MOVS     R0,#+0
   \   000000B2   0x....             LDR.N    R1,??DataTable31_64
   \   000000B4   0x8008             STRH     R0,[R1, #+0]
   3608                   tingting=1;
   \   000000B6   0x2001             MOVS     R0,#+1
   \   000000B8   0x....             LDR.N    R1,??DataTable31_65
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
   \   000000BC   0xE06A             B.N      ??PTB_isr_3
   3609                 }  
   3610                }
   3611              else if (VIF == VIF_SAMPLELINE)              //开始采样
   \                     ??PTB_isr_4: (+1)
   \   000000BE   0x....             LDR.N    R0,??DataTable31_25
   \   000000C0   0x7800             LDRB     R0,[R0, #+0]
   \   000000C2   0x2802             CMP      R0,#+2
   \   000000C4   0xD166             BNE.N    ??PTB_isr_3
   3612                {
   3613                    LineCount++;
   \   000000C6   0x....             LDR.N    R0,??DataTable31_66
   \   000000C8   0x8800             LDRH     R0,[R0, #+0]
   \   000000CA   0x1C40             ADDS     R0,R0,#+1
   \   000000CC   0x....             LDR.N    R1,??DataTable31_66
   \   000000CE   0x8008             STRH     R0,[R1, #+0]
   3614                    if (LineCount % 4== 0)                //每隔一行采一行
   \   000000D0   0x....             LDR.N    R0,??DataTable31_66
   \   000000D2   0x8800             LDRH     R0,[R0, #+0]
   \   000000D4   0x2104             MOVS     R1,#+4
   \   000000D6   0xFB90 0xF2F1      SDIV     R2,R0,R1
   \   000000DA   0xFB02 0x0211      MLS      R2,R2,R1,R0
   \   000000DE   0x2A00             CMP      R2,#+0
   \   000000E0   0xD12A             BNE.N    ??PTB_isr_6
   3615                    {
   3616                        for (i = 0; i < COLUMN+PIANYI ; i++)        //每行扫描COLUMN+PIANYI个点(其中PIANYI个点需要被剔除掉，因为是行消隐点)
   \   000000E2   0x2000             MOVS     R0,#+0
   \   000000E4   0x0004             MOVS     R4,R0
   \                     ??PTB_isr_7: (+1)
   \   000000E6   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000E8   0xF5B4 0x7FA3      CMP      R4,#+326
   \   000000EC   0xDC15             BGT.N    ??PTB_isr_8
   3617                       {
   3618                            if (i >=PIANYI )///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \   000000EE   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000F0   0x2CAA             CMP      R4,#+170
   \   000000F2   0xDB10             BLT.N    ??PTB_isr_9
   3619                             {//采集的第一个点的坐标在真实的世界里是右下角，所以在数组中存储在第一行的最后一个位置
   3620                               VideoImage2[VideoImageLine][COLUMN-1-i+PIANYI] = (uint8)(0x000000ff & GPIOE_PDIR);//将采集到的点直接放入到VideoImage2[][]中在init array（）中放到VideoImage1[][]中做处理
   \   000000F4   0x....             LDR.N    R0,??DataTable31_68
   \   000000F6   0x....             LDR.N    R1,??DataTable31_67
   \   000000F8   0x7809             LDRB     R1,[R1, #+0]
   \   000000FA   0x229D             MOVS     R2,#+157
   \   000000FC   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000100   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000102   0x1B00             SUBS     R0,R0,R4
   \   00000104   0x....             LDR.N    R1,??DataTable31_69  ;; 0x400ff110
   \   00000106   0x6809             LDR      R1,[R1, #+0]
   \   00000108   0xF880 0x1146      STRB     R1,[R0, #+326]
   3621                                   Delay_MS(3);
   \   0000010C   0x2003             MOVS     R0,#+3
   \   0000010E   0x.... 0x....      BL       Delay_MS
   3622                                  asm("nop");
   \   00000112   0xBF00             nop
   3623                                  asm("nop");//汇编延时 
   \   00000114   0xBF00             nop
   3624                            }
   3625                        }
   \                     ??PTB_isr_9: (+1)
   \   00000116   0x1C64             ADDS     R4,R4,#+1
   \   00000118   0xE7E5             B.N      ??PTB_isr_7
   3626                       VideoImageLine++;
   \                     ??PTB_isr_8: (+1)
   \   0000011A   0x....             LDR.N    R0,??DataTable31_67
   \   0000011C   0x7800             LDRB     R0,[R0, #+0]
   \   0000011E   0x1C40             ADDS     R0,R0,#+1
   \   00000120   0x....             LDR.N    R1,??DataTable31_67
   \   00000122   0x7008             STRB     R0,[R1, #+0]
   3627                   if( sumbel>= 16)    
   \   00000124   0x....             LDR.N    R0,??DataTable31_64
   \   00000126   0x8800             LDRH     R0,[R0, #+0]
   \   00000128   0x2810             CMP      R0,#+16
   \   0000012A   0xDB05             BLT.N    ??PTB_isr_6
   3628                 { 
   3629                  sumbel=0;
   \   0000012C   0x2000             MOVS     R0,#+0
   \   0000012E   0x....             LDR.N    R1,??DataTable31_64
   \   00000130   0x8008             STRH     R0,[R1, #+0]
   3630                   tingting=1;
   \   00000132   0x2001             MOVS     R0,#+1
   \   00000134   0x....             LDR.N    R1,??DataTable31_65
   \   00000136   0x7008             STRB     R0,[R1, #+0]
   3631                 }  
   3632                    }
   3633                    
   3634           
   3635                    if (VideoImageLine == ROW)      //采集行数大于设定的行数
   \                     ??PTB_isr_6: (+1)
   \   00000138   0x....             LDR.N    R0,??DataTable31_67
   \   0000013A   0x7800             LDRB     R0,[R0, #+0]
   \   0000013C   0x2832             CMP      R0,#+50
   \   0000013E   0xD129             BNE.N    ??PTB_isr_3
   3636                    {
   3637                        ImageReady = 1;           //图像准备好
   \   00000140   0x2001             MOVS     R0,#+1
   \   00000142   0x....             LDR.N    R1,??DataTable31_44
   \   00000144   0x7008             STRB     R0,[R1, #+0]
   3638                        VIF = VIF_START;
   \   00000146   0x2000             MOVS     R0,#+0
   \   00000148   0x....             LDR.N    R1,??DataTable31_25
   \   0000014A   0x7008             STRB     R0,[R1, #+0]
   \   0000014C   0xE022             B.N      ??PTB_isr_3
   3639                    }
   3640               }
   3641            }
   3642            
   3643            else{ 
   3644               sumbe2++;
   \                     ??PTB_isr_0: (+1)
   \   0000014E   0x....             LDR.N    R0,??DataTable31_27
   \   00000150   0x8800             LDRH     R0,[R0, #+0]
   \   00000152   0x1C40             ADDS     R0,R0,#+1
   \   00000154   0x....             LDR.N    R1,??DataTable31_27
   \   00000156   0x8008             STRH     R0,[R1, #+0]
   3645                sumbe3++;
   \   00000158   0x....             LDR.N    R0,??DataTable31_2
   \   0000015A   0x8800             LDRH     R0,[R0, #+0]
   \   0000015C   0x1C40             ADDS     R0,R0,#+1
   \   0000015E   0x....             LDR.N    R1,??DataTable31_2
   \   00000160   0x8008             STRH     R0,[R1, #+0]
   3646               GetADValue();              
   \   00000162   0x.... 0x....      BL       GetADValue
   3647               GetAngle();                          
   \   00000166   0x.... 0x....      BL       GetAngle
   3648               CarAngleAdjust();            
   \   0000016A   0x.... 0x....      BL       CarAngleAdjust
   3649                 
   3650                LineCount++;
   \   0000016E   0x....             LDR.N    R0,??DataTable31_66
   \   00000170   0x8800             LDRH     R0,[R0, #+0]
   \   00000172   0x1C40             ADDS     R0,R0,#+1
   \   00000174   0x....             LDR.N    R1,??DataTable31_66
   \   00000176   0x8008             STRH     R0,[R1, #+0]
   3651                 LineCount++;
   \   00000178   0x....             LDR.N    R0,??DataTable31_66
   \   0000017A   0x8800             LDRH     R0,[R0, #+0]
   \   0000017C   0x1C40             ADDS     R0,R0,#+1
   \   0000017E   0x....             LDR.N    R1,??DataTable31_66
   \   00000180   0x8008             STRH     R0,[R1, #+0]
   3652               SpeedControlOut();
   \   00000182   0x.... 0x....      BL       SpeedControlOut
   3653               FantingOut();
   \   00000186   0x.... 0x....      BL       FantingOut
   3654               CarControlOut();    
   \   0000018A   0x.... 0x....      BL       CarControlOut
   3655              tingting=0; 
   \   0000018E   0x2000             MOVS     R0,#+0
   \   00000190   0x....             LDR.N    R1,??DataTable31_65
   \   00000192   0x7008             STRB     R0,[R1, #+0]
   3656              
   3657                }  
   3658             if( sumbe2>=50)
   \                     ??PTB_isr_3: (+1)
   \   00000194   0x....             LDR.N    R0,??DataTable31_27
   \   00000196   0x8800             LDRH     R0,[R0, #+0]
   \   00000198   0x2832             CMP      R0,#+50
   \   0000019A   0xDB04             BLT.N    ??PTB_isr_10
   3659             {  
   3660                sumbe2=0;
   \   0000019C   0x2000             MOVS     R0,#+0
   \   0000019E   0x....             LDR.N    R1,??DataTable31_27
   \   000001A0   0x8008             STRH     R0,[R1, #+0]
   3661                //SpeedControlCount = 0;
   3662                SpeedControl();     
   \   000001A2   0x.... 0x....      BL       SpeedControl
   3663             }  
   3664            
   3665           
   3666           EnableInterrupts;   
   \                     ??PTB_isr_10: (+1)
   \   000001A6   0xB662             CPSIE i
   3667            
   3668            
   3669          }
   \   000001A8   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x4004A058         DC32     0x4004a058

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x400FF054         DC32     0x400ff054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     left_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     right_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     center_white

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     Row_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     start_stop_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     ramp_dis_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     ramp_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x4004D000         DC32     0x4004d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x4004D004         DC32     0x4004d004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x4004D008         DC32     0x4004d008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x4004D00C         DC32     0x4004d00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x4004D010         DC32     0x4004d010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x4004D014         DC32     0x4004d014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x4004D018         DC32     0x4004d018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x4004D01C         DC32     0x4004d01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \   00000000   0x400FF114         DC32     0x400ff114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_19:
   \   00000000   0x4004A050         DC32     0x4004a050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_20:
   \   00000000   0xFFEFFF00         DC32     0xffefff00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_21:
   \   00000000   0x4009C800         DC32     0x4009c800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_22:
   \   00000000   0x........         DC32     GYRO_STATIC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_23:
   \   00000000   0x40240000         DC32     0x40240000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_24:
   \   00000000   0x........         DC32     jump_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_25:
   \   00000000   0x........         DC32     WHITE_BLACK_OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_26:
   \   00000000   0x........         DC32     VideoImage2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_27:
   \   00000000   0x........         DC32     counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_28:
   \   00000000   0x........         DC32     ting

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_29:
   \   00000000   0x........         DC32     da

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_30:
   \   00000000   0x........         DC32     g_nCarAngle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_31:
   \   00000000   0x........         DC32     fuxiao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_32:
   \   00000000   0x........         DC32     current_deal_line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_33:
   \   00000000   0x........         DC32     bottom_whitebase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_34:
   \   00000000   0x........         DC32     find_whitebase_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_35:
   \   00000000   0x........         DC32     VideoImage1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_36:
   \   00000000   0x........         DC32     OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_37:
   \   00000000   0x........         DC32     BASE_OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_38:
   \   00000000   0x........         DC32     re_white_refer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_39:
   \   00000000   0x........         DC32     whitebase_searchstart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_40:
   \   00000000   0x........         DC32     left_whitebase_searchstart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_41:
   \   00000000   0x........         DC32     right_whitebase_searchstart

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_42:
   \   00000000   0x........         DC32     whitepoint_start

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_43:
   \   00000000   0x........         DC32     re_whitepoint_start

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_44:
   \   00000000   0x........         DC32     whitepoint_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_45:
   \   00000000   0x........         DC32     re_whitepoint_end

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_46:
   \   00000000   0x........         DC32     white_refer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     bottom_whitebase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     deal_start_line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     white_refer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     hang_search_start

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     Row_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     left_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     VideoImage1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     right_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     center_white

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     VideoImage2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     bottom_whitebase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     left_top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     right_top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     Row_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     left_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     right_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x........         DC32     center_lost_hang

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     left_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x........         DC32     bottom_whitebase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x........         DC32     top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x........         DC32     center_white

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     danger_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     danger_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x........         DC32     control_top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x........         DC32     deal_start_line

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x........         DC32     refer_road_width

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x........         DC32     S_right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x........         DC32     S_left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x........         DC32     S_straight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x........         DC32     direction

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x........         DC32     ramp_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \   00000000   0x........         DC32     re_direction

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     ramp_dis_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     ramp_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     ramp_delay_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     ramp_dis_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x43960000         DC32     0x43960000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x404B8000         DC32     0x404b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x3F733334         DC32     0x3f733334

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0xBF733333         DC32     0xbf733333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     bottom_whitebase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x........         DC32     VideoImage2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x........         DC32     center_white

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x........         DC32     OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x........         DC32     BASE_OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x........         DC32     left_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     right_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     ting1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     zhou

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     ting_check_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     center_average_a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     center_average_b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     refer_error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     sumbe3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     re_angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     center_average

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     error_servo_ref_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     error_servo_ref_d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     control_top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     zhongjian

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     lcd_ref_p1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     lcd_ref_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x........         DC32     lcd_ref_d1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     lcd_ref_d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x........         DC32     lcd_ref_p2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \   00000000   0x........         DC32     lcd_ref_d2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_21:
   \   00000000   0x........         DC32     barrier_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_22:
   \   00000000   0x........         DC32     barrier_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_23:
   \   00000000   0x........         DC32     direction

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_24:
   \   00000000   0x........         DC32     turn_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_25:
   \   00000000   0x........         DC32     turn_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_26:
   \   00000000   0x........         DC32     re_refer_error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_27:
   \   00000000   0x........         DC32     ft1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_28:
   \   00000000   0xFFFFF9C0         DC32     0xfffff9c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_29:
   \   00000000   0x........         DC32     record_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_30:
   \   00000000   0x........         DC32     big

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     bottom_whitebase

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     left_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0x........         DC32     GPIOx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x........         DC32     center_white

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x........         DC32     control_top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \   00000000   0x........         DC32     turn_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \   00000000   0x........         DC32     turn_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \   00000000   0x........         DC32     Row_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \   00000000   0x........         DC32     right_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_6:
   \   00000000   0x........         DC32     WHITE_BLACK_OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_7:
   \   00000000   0x........         DC32     VideoImage2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   0x........         DC32     jianshu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_1:
   \   00000000   0x........         DC32     qing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x........         DC32     huanjie

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24:
   \   00000000   0xF5C28F5C         DC32     0xf5c28f5c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_1:
   \   00000000   0x4022DC28         DC32     0x4022dc28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_2:
   \   00000000   0x40900000         DC32     0x40900000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_3:
   \   00000000   0x........         DC32     AD_AngleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_4:
   \   00000000   0x4009C800         DC32     0x4009c800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_5:
   \   00000000   0x........         DC32     acce

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_6:
   \   00000000   0x........         DC32     acce_static

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_7:
   \   00000000   0x........         DC32     acce_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_8:
   \   00000000   0x44480000         DC32     0x44480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_9:
   \   00000000   0x........         DC32     acce_G

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_10:
   \   00000000   0x3F800001         DC32     0x3f800001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_11:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_12:
   \   00000000   0xB6774C14         DC32     0xb6774c14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_13:
   \   00000000   0x404CA5D7         DC32     0x404ca5d7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_14:
   \   00000000   0x........         DC32     acce_angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_15:
   \   00000000   0x........         DC32     AcceData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_16:
   \   00000000   0x........         DC32     gyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_17:
   \   00000000   0x........         DC32     pre_Lastgyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_18:
   \   00000000   0x........         DC32     Lastgyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_19:
   \   00000000   0x........         DC32     GYRO_STATIC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_20:
   \   00000000   0x........         DC32     gyro_offset

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_21:
   \   00000000   0x189374BC         DC32     0x189374bc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_22:
   \   00000000   0x400B5604         DC32     0x400b5604

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_23:
   \   00000000   0x........         DC32     w

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable24_24:
   \   00000000   0x........         DC32     ft

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25:
   \   00000000   0x........         DC32     V

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_1:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_2:
   \   00000000   0x3F547AE1         DC32     0x3f547ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_3:
   \   00000000   0x........         DC32     last_anglePD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_4:
   \   00000000   0x........         DC32     angle_kp_across

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_5:
   \   00000000   0x........         DC32     angle_kp_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_6:
   \   00000000   0x........         DC32     angle_kd_across

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_7:
   \   00000000   0x........         DC32     angle_kd_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable25_8:
   \   00000000   0x........         DC32     angle_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26:
   \   00000000   0x........         DC32     g_nCarAngle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable26_1:
   \   00000000   0x........         DC32     angle_kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27:
   \   00000000   0x40039004         DC32     0x40039004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_1:
   \   00000000   0x........         DC32     g_nRightCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_2:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_3:
   \   00000000   0x........         DC32     g_nLeftCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_4:
   \   00000000   0xEB851EB8         DC32     0xeb851eb8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_5:
   \   00000000   0x3FAEB851         DC32     0x3faeb851

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_6:
   \   00000000   0x........         DC32     LeftRealSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_7:
   \   00000000   0x........         DC32     RightRealSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_8:
   \   00000000   0x........         DC32     RealSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_9:
   \   00000000   0x........         DC32     Speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_10:
   \   00000000   0x........         DC32     Speed_error

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_11:
   \   00000000   0x........         DC32     Speed_limit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_12:
   \   00000000   0x........         DC32     speed_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_13:
   \   00000000   0x........         DC32     motor_P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_14:
   \   00000000   0x........         DC32     motor_I

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_15:
   \   00000000   0x43FA0001         DC32     0x43fa0001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable27_16:
   \   00000000   0xC3FA0000         DC32     0xc3fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28:
   \   00000000   0x........         DC32     anglePD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_1:
   \   00000000   0x........         DC32     speed_ki

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_2:
   \   00000000   0x........         DC32     SpeedPID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_3:
   \   00000000   0x........         DC32     SpeedPIDold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_4:
   \   00000000   0x........         DC32     sumbe2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_5:
   \   00000000   0x42480000         DC32     0x42480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_6:
   \   00000000   0x........         DC32     SpeedPIDout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_7:
   \   00000000   0x3DCCCCCD         DC32     0x3dcccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_8:
   \   00000000   0x........         DC32     close

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_9:
   \   00000000   0x........         DC32     lcd_debug

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_10:
   \   00000000   0x........         DC32     start1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_11:
   \   00000000   0x........         DC32     angleout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_12:
   \   00000000   0x........         DC32     RightSpeedPwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_13:
   \   00000000   0x........         DC32     summ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_14:
   \   00000000   0x........         DC32     LeftSpeedPwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_15:
   \   00000000   0x........         DC32     ting

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_16:
   \   00000000   0x........         DC32     ting_check_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_17:
   \   00000000   0xFFFFF63C         DC32     0xfffff63c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_18:
   \   00000000   0x40038048         DC32     0x40038048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_19:
   \   00000000   0x40038040         DC32     0x40038040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_20:
   \   00000000   0x40038038         DC32     0x40038038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_21:
   \   00000000   0x........         DC32     put_date

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_22:
   \   00000000   0x........         DC32     UARTx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_23:
   \   00000000   0x........         DC32     send_date

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_24:
   \   00000000   0x40240000         DC32     0x40240000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_25:
   \   00000000   0x0002BF20         DC32     0x2bf20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_26:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_27:
   \   00000000   0x4004A040         DC32     0x4004a040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_28:
   \   00000000   0x4004A044         DC32     0x4004a044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_29:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_30:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_31:
   \   00000000   0x4006A001         DC32     0x4006a001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_32:
   \   00000000   0x4006A00A         DC32     0x4006a00a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable28_33:
   \   00000000   0x4006A002         DC32     0x4006a002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x40038030         DC32     0x40038030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_1:
   \   00000000   0x........         DC32     OutData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_2:
   \   00000000   0x........         DC32     put_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_3:
   \   00000000   0x4006A004         DC32     0x4006a004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_4:
   \   00000000   0x4006A007         DC32     0x4006a007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_5:
   \   00000000   0x........         DC32     error_servo_ref_d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_6:
   \   00000000   0x........         DC32     error_servo_ref_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_7:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_8:
   \   00000000   0x........         DC32     ACCE_STATIC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_9:
   \   00000000   0x........         DC32     ??ts

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_10:
   \   00000000   0x........         DC32     ??sci_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_11:
   \   00000000   0x........         DC32     Speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x4006A003         DC32     0x4006a003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_1:
   \   00000000   0x........         DC32     send_mes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_2:
   \   00000000   0x........         DC32     WHITE_BLACK_OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_3:
   \   00000000   0x........         DC32     VideoImage2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_4:
   \   00000000   0x00013880         DC32     0x13880

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_5:
   \   00000000   0x........         DC32     left_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_6:
   \   00000000   0x........         DC32     right_black

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_7:
   \   00000000   0x........         DC32     center_white

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_8:
   \   00000000   0x400FF010         DC32     0x400ff010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_9:
   \   00000000   0x........         DC32     stop_special_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_10:
   \   00000000   0x........         DC32     bm3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_11:
   \   00000000   0x........         DC32     angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \   00000000   0x........         DC32     feng

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_1:
   \   00000000   0x........         DC32     re_angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_2:
   \   00000000   0x........         DC32     sumbe3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_3:
   \   00000000   0x........         DC32     angleout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_4:
   \   00000000   0x........         DC32     set_up_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_5:
   \   00000000   0x440C0000         DC32     0x440c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_6:
   \   00000000   0x........         DC32     angle_kp_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_7:
   \   00000000   0x4124CCCD         DC32     0x4124cccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_8:
   \   00000000   0x........         DC32     angle_kd_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_9:
   \   00000000   0x........         DC32     speed_kp_record

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_10:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_11:
   \   00000000   0x........         DC32     speed_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_12:
   \   00000000   0x........         DC32     Speed_limit_record

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_13:
   \   00000000   0x........         DC32     Speed_limit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_14:
   \   00000000   0x........         DC32     reset_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_15:
   \   00000000   0x........         DC32     angle_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_16:
   \   00000000   0x........         DC32     angle_kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_17:
   \   00000000   0x3E99999A         DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_18:
   \   00000000   0x........         DC32     lcd_ref_p1_record

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_19:
   \   00000000   0x........         DC32     lcd_ref_p1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_20:
   \   00000000   0x........         DC32     lcd_ref_p2_record

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_21:
   \   00000000   0x........         DC32     lcd_ref_p2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_22:
   \   00000000   0x........         DC32     GPIOx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_23:
   \   00000000   0x400FF050         DC32     0x400ff050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_24:
   \   00000000   0x........         DC32     OddEvenStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_25:
   \   00000000   0x........         DC32     Videoclo_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_26:
   \   00000000   0x........         DC32     lcd_debug

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_27:
   \   00000000   0x........         DC32     sumbe2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_28:
   \   00000000   0x........         DC32     angle_kp_across

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_29:
   \   00000000   0x........         DC32     angle_kd_across

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_30:
   \   00000000   0x........         DC32     BASE_OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_31:
   \   00000000   0x........         DC32     begin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_32:
   \   00000000   0x........         DC32     start1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_33:
   \   00000000   0x........         DC32     sumbe4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_34:
   \   00000000   0x........         DC32     sumbe5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_35:
   \   00000000   0x........         DC32     sumbe6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_36:
   \   00000000   0x........         DC32     Speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_37:
   \   00000000   0x........         DC32     ting

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_38:
   \   00000000   0x........         DC32     ting1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_39:
   \   00000000   0x........         DC32     ting_check_stop

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_40:
   \   00000000   0x........         DC32     begin2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_41:
   \   00000000   0x........         DC32     count_s

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_42:
   \   00000000   0x........         DC32     liu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_43:
   \   00000000   0x........         DC32     acce_static

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_44:
   \   00000000   0x........         DC32     ImageReady

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_45:
   \   00000000   0x........         DC32     stopcount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_46:
   \   00000000   0x........         DC32     j

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_47:
   \   00000000   0x........         DC32     VideoImage1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_48:
   \   00000000   0x........         DC32     find_whitebase_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_49:
   \   00000000   0x........         DC32     barrier_l

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_50:
   \   00000000   0x........         DC32     barrier_r

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_51:
   \   00000000   0x4006A004         DC32     0x4006a004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_52:
   \   00000000   0x4006A007         DC32     0x4006a007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_53:
   \   00000000   0x........         DC32     deal_r_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_54:
   \   00000000   0x........         DC32     r_count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_55:
   \   00000000   0x........         DC32     se1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_56:
   \   00000000   0x........         DC32     se2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_57:
   \   00000000   0x........         DC32     error_servo_ref_d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_58:
   \   00000000   0x........         DC32     error_servo_ref_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_59:
   \   00000000   0x40240000         DC32     0x40240000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_60:
   \   00000000   0x........         DC32     speed_ki

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_61:
   \   00000000   0x........         DC32     se3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_62:
   \   00000000   0x........         DC32     ACCE_STATIC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_63:
   \   00000000   0x4004A058         DC32     0x4004a058

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_64:
   \   00000000   0x........         DC32     sumbel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_65:
   \   00000000   0x........         DC32     tingting

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_66:
   \   00000000   0x........         DC32     LineCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_67:
   \   00000000   0x........         DC32     VideoImageLine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_68:
   \   00000000   0x........         DC32     VideoImage2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31_69:
   \   00000000   0x400FF110         DC32     0x400ff110

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   3670          
   3671          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CRC_CHECK
       8   CarAngleAdjust
         8   -> __aeabi_f2iz
         8   -> __aeabi_fadd
         8   -> __aeabi_fmul
       8   CarControlOut
         8   -> __aeabi_f2iz
         8   -> __aeabi_fadd
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_i2f
      16   Control
        16   -> abs
        16   -> f_abs16
      16   Deal_BlackEdge
       0   Delay_MS
       0   EXIT_Init
       0   FantingOut
       8   GIPO_init
         8   -> gpio_init
       8   GetADValue
         8   -> ad_ave
         8   -> adc_start
         8   -> adc_stop
      40   GetAngle
        40   -> __aeabi_d2f
        40   -> __aeabi_dadd
        40   -> __aeabi_ddiv
        40   -> __aeabi_dmul
        40   -> __aeabi_f2d
        40   -> __aeabi_fadd
        40   -> __aeabi_fdiv
        40   -> __aeabi_fmul
        40   -> __aeabi_fsub
        40   -> asin
        40 __aeabi_cfcmple
        40 __aeabi_cfrcmple
       8   GetPower
         8   -> __aeabi_d2f
         8   -> __aeabi_ddiv
         8   -> __aeabi_dmul
         8   -> __aeabi_f2d
         8   -> ad_ave
         8   -> adc_start
         8   -> adc_stop
       0   Initial
       0   MIN_INT
      56   OutPut_Data
        56   -> CRC_CHECK
        56   -> __aeabi_f2iz
        56   -> __aeabi_memclr4
        56   -> uart_putchar
       8   PTB_isr
         8   -> CarAngleAdjust
         8   -> CarControlOut
         8   -> Delay_MS
         8   -> FantingOut
         8   -> GetADValue
         8   -> GetAngle
         8   -> SpeedControl
         8   -> SpeedControlOut
       8   PutDate
         8   -> __aeabi_f2iz
      16   SCI0_send_mesage
        16   -> Delay_MS
        16   -> __aeabi_f2iz
        16   -> __aeabi_fmul
      32   Search_BlackEdge
        32   -> f_abs16
      24   Search_WhiteBase
        24   -> f_abs16
       8   SendDate
         8   -> __aeabi_d2f
         8   -> __aeabi_ddiv
         8   -> __aeabi_ui2d
         8   -> __aeabi_ui2f
       8   SpeedControl
         8   -> __aeabi_d2f
         8   -> __aeabi_dmul
         8   -> __aeabi_fadd
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_i2d
         8   -> __aeabi_i2f
         8   -> __aeabi_ui2f
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
       8   SpeedControlOut
         8   -> __aeabi_f2iz
         8   -> __aeabi_fadd
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_fsub
         8   -> __aeabi_i2f
       8   UART0_Init
       0   abs
      32   across_smile
      24   barrier
        24   -> f_abs16
       8   car_set_start
         8   -> __aeabi_fadd
      32   check_start_stop_line
        32   -> f_abs16
        32   -> gpio_set
       0   f_abs16
       8   f_absf
         8 __aeabi_cfrcmple
      24   get_line_information
        24   -> f_abs16
        24   -> gpio_set
      64   get_linear_factor
        64   -> __aeabi_d2f
        64   -> __aeabi_ddiv
        64   -> __aeabi_dmul
        64   -> __aeabi_f2d
        64   -> __aeabi_fadd
        64   -> __aeabi_fmul
        64   -> __aeabi_i2d
        64   -> __aeabi_i2f
        64   -> f_abs16
        64   -> sqrt
        64 __aeabi_cfcmple
        64 __aeabi_cfrcmple
      16   init_gyro
        16   -> Delay_MS
        16   -> __aeabi_d2f
        16   -> __aeabi_dadd
        16   -> __aeabi_ddiv
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> ad_ave
        16   -> adc_start
        16   -> adc_stop
      16   main
        16   -> Control
        16   -> Deal_BlackEdge
        16   -> EXIT_Init
        16   -> FTM_PWM_init
        16   -> FTM_QUAD_init
        16   -> GIPO_init
        16   -> GetPower
        16   -> Initial
        16   -> KeyScan
        16   -> LCD_Init
        16   -> LCD_PrintImage
        16   -> SCI0_send_mesage
        16   -> Search_BlackEdge
        16   -> Search_WhiteBase
        16   -> UART0_Init
        16   -> __aeabi_fadd
        16   -> across_smile
        16   -> barrier
        16   -> car_set_start
        16   -> check_start_stop_line
        16   -> delayms
        16   -> enable_irq
        16   -> get_line_information
        16   -> gpio_set
        16   -> init_gyro
        16   -> pre_show
        16   -> redraw
        16   -> scan_boma
        16   -> sensor_init
        16   -> stop_special
       0   scan_boma
       8   sensor_init
         8   -> adc_init
      16   stop_special
        16   -> __aeabi_i2f
        16   -> __aeabi_ui2f
        16 __aeabi_cfcmple
       8   uart0_isr
         8   -> __aeabi_d2f
         8   -> __aeabi_ddiv
         8   -> __aeabi_f2d
         8   -> __aeabi_i2f
         8   -> __aeabi_ui2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_21
       4  ??DataTable12_22
       4  ??DataTable12_23
       4  ??DataTable12_24
       4  ??DataTable12_25
       4  ??DataTable12_26
       4  ??DataTable12_27
       4  ??DataTable12_28
       4  ??DataTable12_29
       4  ??DataTable12_3
       4  ??DataTable12_30
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ??DataTable14
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_2
       4  ??DataTable17_3
       4  ??DataTable17_4
       4  ??DataTable17_5
       4  ??DataTable17_6
       4  ??DataTable17_7
       4  ??DataTable20
       4  ??DataTable20_1
       4  ??DataTable21
       4  ??DataTable24
       4  ??DataTable24_1
       4  ??DataTable24_10
       4  ??DataTable24_11
       4  ??DataTable24_12
       4  ??DataTable24_13
       4  ??DataTable24_14
       4  ??DataTable24_15
       4  ??DataTable24_16
       4  ??DataTable24_17
       4  ??DataTable24_18
       4  ??DataTable24_19
       4  ??DataTable24_2
       4  ??DataTable24_20
       4  ??DataTable24_21
       4  ??DataTable24_22
       4  ??DataTable24_23
       4  ??DataTable24_24
       4  ??DataTable24_3
       4  ??DataTable24_4
       4  ??DataTable24_5
       4  ??DataTable24_6
       4  ??DataTable24_7
       4  ??DataTable24_8
       4  ??DataTable24_9
       4  ??DataTable25
       4  ??DataTable25_1
       4  ??DataTable25_2
       4  ??DataTable25_3
       4  ??DataTable25_4
       4  ??DataTable25_5
       4  ??DataTable25_6
       4  ??DataTable25_7
       4  ??DataTable25_8
       4  ??DataTable26
       4  ??DataTable26_1
       4  ??DataTable27
       4  ??DataTable27_1
       4  ??DataTable27_10
       4  ??DataTable27_11
       4  ??DataTable27_12
       4  ??DataTable27_13
       4  ??DataTable27_14
       4  ??DataTable27_15
       4  ??DataTable27_16
       4  ??DataTable27_2
       4  ??DataTable27_3
       4  ??DataTable27_4
       4  ??DataTable27_5
       4  ??DataTable27_6
       4  ??DataTable27_7
       4  ??DataTable27_8
       4  ??DataTable27_9
       4  ??DataTable28
       4  ??DataTable28_1
       4  ??DataTable28_10
       4  ??DataTable28_11
       4  ??DataTable28_12
       4  ??DataTable28_13
       4  ??DataTable28_14
       4  ??DataTable28_15
       4  ??DataTable28_16
       4  ??DataTable28_17
       4  ??DataTable28_18
       4  ??DataTable28_19
       4  ??DataTable28_2
       4  ??DataTable28_20
       4  ??DataTable28_21
       4  ??DataTable28_22
       4  ??DataTable28_23
       4  ??DataTable28_24
       4  ??DataTable28_25
       4  ??DataTable28_26
       4  ??DataTable28_27
       4  ??DataTable28_28
       4  ??DataTable28_29
       4  ??DataTable28_3
       4  ??DataTable28_30
       4  ??DataTable28_31
       4  ??DataTable28_32
       4  ??DataTable28_33
       4  ??DataTable28_4
       4  ??DataTable28_5
       4  ??DataTable28_6
       4  ??DataTable28_7
       4  ??DataTable28_8
       4  ??DataTable28_9
       4  ??DataTable29
       4  ??DataTable29_1
       4  ??DataTable29_10
       4  ??DataTable29_11
       4  ??DataTable29_2
       4  ??DataTable29_3
       4  ??DataTable29_4
       4  ??DataTable29_5
       4  ??DataTable29_6
       4  ??DataTable29_7
       4  ??DataTable29_8
       4  ??DataTable29_9
       4  ??DataTable30
       4  ??DataTable30_1
       4  ??DataTable30_10
       4  ??DataTable30_11
       4  ??DataTable30_2
       4  ??DataTable30_3
       4  ??DataTable30_4
       4  ??DataTable30_5
       4  ??DataTable30_6
       4  ??DataTable30_7
       4  ??DataTable30_8
       4  ??DataTable30_9
       4  ??DataTable31
       4  ??DataTable31_1
       4  ??DataTable31_10
       4  ??DataTable31_11
       4  ??DataTable31_12
       4  ??DataTable31_13
       4  ??DataTable31_14
       4  ??DataTable31_15
       4  ??DataTable31_16
       4  ??DataTable31_17
       4  ??DataTable31_18
       4  ??DataTable31_19
       4  ??DataTable31_2
       4  ??DataTable31_20
       4  ??DataTable31_21
       4  ??DataTable31_22
       4  ??DataTable31_23
       4  ??DataTable31_24
       4  ??DataTable31_25
       4  ??DataTable31_26
       4  ??DataTable31_27
       4  ??DataTable31_28
       4  ??DataTable31_29
       4  ??DataTable31_3
       4  ??DataTable31_30
       4  ??DataTable31_31
       4  ??DataTable31_32
       4  ??DataTable31_33
       4  ??DataTable31_34
       4  ??DataTable31_35
       4  ??DataTable31_36
       4  ??DataTable31_37
       4  ??DataTable31_38
       4  ??DataTable31_39
       4  ??DataTable31_4
       4  ??DataTable31_40
       4  ??DataTable31_41
       4  ??DataTable31_42
       4  ??DataTable31_43
       4  ??DataTable31_44
       4  ??DataTable31_45
       4  ??DataTable31_46
       4  ??DataTable31_47
       4  ??DataTable31_48
       4  ??DataTable31_49
       4  ??DataTable31_5
       4  ??DataTable31_50
       4  ??DataTable31_51
       4  ??DataTable31_52
       4  ??DataTable31_53
       4  ??DataTable31_54
       4  ??DataTable31_55
       4  ??DataTable31_56
       4  ??DataTable31_57
       4  ??DataTable31_58
       4  ??DataTable31_59
       4  ??DataTable31_6
       4  ??DataTable31_60
       4  ??DataTable31_61
       4  ??DataTable31_62
       4  ??DataTable31_63
       4  ??DataTable31_64
       4  ??DataTable31_65
       4  ??DataTable31_66
       4  ??DataTable31_67
       4  ??DataTable31_68
       4  ??DataTable31_69
       4  ??DataTable31_7
       4  ??DataTable31_8
       4  ??DataTable31_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_19
       4  ??DataTable5_2
       4  ??DataTable5_20
       4  ??DataTable5_21
       4  ??DataTable5_22
       4  ??DataTable5_23
       4  ??DataTable5_24
       4  ??DataTable5_25
       4  ??DataTable5_26
       4  ??DataTable5_27
       4  ??DataTable5_28
       4  ??DataTable5_29
       4  ??DataTable5_3
       4  ??DataTable5_30
       4  ??DataTable5_31
       4  ??DataTable5_32
       4  ??DataTable5_33
       4  ??DataTable5_34
       4  ??DataTable5_35
       4  ??DataTable5_36
       4  ??DataTable5_37
       4  ??DataTable5_38
       4  ??DataTable5_39
       4  ??DataTable5_4
       4  ??DataTable5_40
       4  ??DataTable5_41
       4  ??DataTable5_42
       4  ??DataTable5_43
       4  ??DataTable5_44
       4  ??DataTable5_45
       4  ??DataTable5_46
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable8
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
      16  ?_0
      16  ?_1
      12  ?_2
       4  ACCE_STATIC
       8  AD_AngleData
      12  AcceData
      20  Angle
       1  BASE_OT
      74  CRC_CHECK
     132  CarAngleAdjust
     504  CarControlOut
    1538  Control
    1924  Deal_BlackEdge
      10  Delay_MS
       1  DirectionControlCount
      76  EXIT_Init
      52  FantingOut
     198  GIPO_init
       4  GYRO_STATIC
      90  GetADValue
     618  GetAngle
      68  GetPower
       1  ImageReady
      80  Initial
       1  IntegrationTime
       4  Lastgyro
       4  LeftRealSpeed
       2  LeftSpeedPwm
       2  LineCount
      14  MIN_INT
       1  OT
       1  OddEvenStatus
      16  OutData
     220  OutPut_Data
     426  PTB_isr
     144  PutDate
       4  RealSpeed
       4  Rgr
       4  RightRealSpeed
       2  RightSpeedPwm
      52  Row_state
     836  SCI0_send_mesage
       1  S_left
       1  S_right
       1  S_straight
    3210  Search_BlackEdge
    1768  Search_WhiteBase
      50  SendDate
       2  Speed
     374  SpeedControl
       2  SpeedControlCount
      68  SpeedControlOut
       4  SpeedPID
       4  SpeedPIDold
       2  SpeedPIDout
       4  Speed_error
       2  Speed_limit
       2  Speed_limit_record
       2  Speed_set
       2  Time
       1  TimerCnt20ms
     186  UART0_Init
       4  V
    7852  VideoImage1
    7852  VideoImage2
       1  VideoImageLine
       1  Videoclo_Flag
       1  WHITE_BLACK_OT
      10  abs
       4  acce
       4  acce_G
       4  acce_angle
       4  acce_offset
       4  acce_static
    2234  across_smile
       2  angle
       2  anglePD
       2  anglePDout
       4  angle_error
       4  angle_kd
       4  angle_kd_across
       4  angle_kd_set
       4  angle_kp
       4  angle_kp_across
       4  angle_kp_set
       2  angleout
     990  barrier
       1  barrier_l
       1  barrier_r
       1  begin
       1  begin2
       2  big
       2  big1
       1  bm3
       1  bottom_whitebase
     246  car_set_start
       2  car_test_run
       4  center_average
       2  center_average_a
       2  center_average_b
       4  center_linear_average
       1  center_lost_hang
      52  center_white
    1022  check_start_stop_line
       4  close
       2  control_top_whiteline
       2  count_s
       2  counter
       1  current_deal_line
       1  da
       2  danger_count
       1  danger_flag
       1  deal_r_flag
       1  deal_start_line
       1  direction
       1  disable_key_flag
       1  disable_lcd_flag
       2  error_servo_ref_d
       2  error_servo_ref_p
      18  f_abs16
      16  f_absf
       1  fanting
       1  feng
       1  find_whitebase_flag
       4  ft
       2  ft1
       1  fuxiao
       4  g_nCarAngle
       1  g_nCarSpeedCount
       2  g_nLeftCount
       2  g_nRightCount
    1986  get_line_information
     486  get_linear_factor
       4  gyro
       4  gyroIntegral
       4  gyro_angle
       4  gyro_offset
       1  hang_search_start
       1  huanjie
     128  init_gyro
       1  j
       1  jianshu
       1  jump_stop
       4  last_acce_angle
       2  last_anglePD
       1  lcd_debug
       2  lcd_ref_d
       2  lcd_ref_d1
       2  lcd_ref_d2
       2  lcd_ref_p
       2  lcd_ref_p1
       2  lcd_ref_p1_record
       2  lcd_ref_p2
       2  lcd_ref_p2_record
      52  left_black
       1  left_top_whiteline
       1  left_whitebase_searchstart
       4  linear_factor
       1  liu
    1184  main
       4  motor_I
       4  motor_P
       4  pre_Lastgyro
       1  put_cnt
      12  put_date
       1  qing
       2  r_count
       2  ramp_delay_time
       1  ramp_dis_flag
       2  ramp_dis_time
       1  ramp_flag
       2  ramp_speed
       2  ramp_time
       2  re_angle
       1  re_direction
       2  re_refer_error
       1  re_white_refer
       1  re_whitepoint_end
       1  re_whitepoint_start
       1  record_flag
       2  refer_error
      52  refer_road_width
       2  reset_count
       1  response
      52  right_black
       1  right_top_whiteline
       1  right_whitebase_searchstart
     138  scan_boma
       1  sci_temp
       1  se1
       1  se2
       1  se3
       1  send_cnt
       1  send_data_cnt
      12  send_date
       1  send_mes
      28  sensor_init
       2  set_up_time
       4  speed_center_average
       4  speed_ki
       4  speed_kp
       4  speed_kp_record
       1  start1
       4  start_stop_count
       1  start_stop_cs
       1  start_stop_en
       2  steerpwmout
       4  stop_pit_count
     180  stop_special
       1  stop_special_flag
       2  stopcount
       1  stopflag
       2  sumbe2
       2  sumbe3
       2  sumbe4
       2  sumbe5
       2  sumbe6
       2  sumbel
       1  summ
      12  temp1
      12  temp2
       1  test_run
       1  ting
       1  ting1
       1  ting_check_stop
       1  tingting
       2  tingting_d
       2  tingting_p
       4  tmp
       1  top_whiteline
       1  ts
       1  turn_l
       1  turn_r
     464  uart0_isr
       4  w
       1  white_refer
       1  whitebase_searchstart
       1  whitepoint_end
       1  whitepoint_start
       2  zhongjian
       1  zhou

 
 16 291 bytes in section .bss
    154 bytes in section .data
     44 bytes in section .rodata
 23 090 bytes in section .text
 
 23 090 bytes of CODE  memory
     44 bytes of CONST memory
 16 445 bytes of DATA  memory

Errors: none
Warnings: 1
