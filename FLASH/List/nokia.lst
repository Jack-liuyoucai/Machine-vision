###############################################################################
#                                                                             #
#                                                       19/Apr/2013  20:51:20 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Administrator\Desktop\4.16Íí\src\Sources\Driver #
#                    s\nokia\nokia.c                                          #
#    Command line =  C:\Users\Administrator\Desktop\4.16Íí\src\Sources\Driver #
#                    s\nokia\nokia.c -D IAR -D TWR_K60N512 -D DEBUG -lCN      #
#                    C:\Users\Administrator\Desktop\4.16Íí\FLASH\List\ -lB    #
#                    C:\Users\Administrator\Desktop\4.16Íí\FLASH\List\ -o     #
#                    C:\Users\Administrator\Desktop\4.16Íí\FLASH\Obj\         #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config "D:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.0 Evaluation\arm\INC\c\DLib_Config_Normal.h" #
#                     -I C:\Users\Administrator\Desktop\4.16Íí\src\Sources\Cp #
#                    u\ -I C:\Users\Administrator\Desktop\4.16Íí\src\Sources\ #
#                    App\ -I C:\Users\Administrator\Desktop\4.16Íí\src\Source #
#                    s\Drivers\adc\ -I C:\Users\Administrator\Desktop\4.16Íí\ #
#                    src\Sources\Drivers\delay\ -I                            #
#                    C:\Users\Administrator\Desktop\4.16Íí\src\Sources\Driver #
#                    s\FTM\ -I C:\Users\Administrator\Desktop\4.16Íí\src\Sour #
#                    ces\Drivers\gpio\ -I C:\Users\Administrator\Desktop\4.16 #
#                    Íí\src\Sources\Drivers\lptmr\ -I                         #
#                    C:\Users\Administrator\Desktop\4.16Íí\src\Sources\Driver #
#                    s\mcg\ -I C:\Users\Administrator\Desktop\4.16Íí\src\Sour #
#                    ces\Drivers\PIT\ -I C:\Users\Administrator\Desktop\4.16Í #
#                    í\src\Sources\Drivers\uart\ -I                           #
#                    C:\Users\Administrator\Desktop\4.16Íí\src\Sources\Driver #
#                    s\nokia\ -I C:\Users\Administrator\Desktop\4.16Íí\src\So #
#                    urces\Drivers\spi\ -On --use_c++_inline                  #
#    List file    =  C:\Users\Administrator\Desktop\4.16Íí\FLASH\List\nokia.l #
#                    st                                                       #
#    Object file  =  C:\Users\Administrator\Desktop\4.16Íí\FLASH\Obj\nokia.o  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\4.16Íí\src\Sources\Drivers\nokia\nokia.c
      1          #include "common.h"
      2          #include "nokia.h"
      3          #include "gpio.h"
      4          #include "ASC_FONT.h"

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const fontCode8_16[95][16]
   \                     fontCode8_16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 248, 248
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x70 0xF8    
   \              0xF8         
   \   00000015   0x70 0x00          DC8 112, 0, 0, 0, 0, 0, 13, 13, 0, 0, 0, 0, 56, 56, 0, 0, 56, 56, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0D 0x0D    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x38 0x38    
   \              0x00 0x00    
   \              0x38 0x38    
   \              0x00 0x00    
   \   00000029   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 32, 248, 248, 32, 248, 248, 32, 0, 2, 15
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0xF8    
   \              0xF8 0x20    
   \              0xF8 0xF8    
   \              0x20 0x00    
   \              0x02 0x0F    
   \   0000003B   0x0F 0x02          DC8 15, 2, 15, 15, 2, 0, 48, 120, 206, 142, 24, 16, 0, 0, 4, 12, 56, 57
   \              0x0F 0x0F    
   \              0x02 0x00    
   \              0x30 0x78    
   \              0xCE 0x8E    
   \              0x18 0x10    
   \              0x00 0x00    
   \              0x04 0x0C    
   \              0x38 0x39    
   \   0000004D   0x0F 0x06          DC8 15, 6, 0, 24, 60, 36, 188, 216, 96, 48, 0, 0, 6, 3, 13, 30, 18, 30
   \              0x00 0x18    
   \              0x3C 0x24    
   \              0xBC 0xD8    
   \              0x60 0x30    
   \              0x00 0x00    
   \              0x06 0x03    
   \              0x0D 0x1E    
   \              0x12 0x1E    
   \   0000005F   0x0C 0x00          DC8 12, 0, 176, 248, 72, 120, 48, 0, 0, 0, 7, 15, 8, 9, 7, 15, 9, 0, 0
   \              0xB0 0xF8    
   \              0x48 0x78    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x07 0x0F    
   \              0x08 0x09    
   \              0x07 0x0F    
   \              0x09 0x00    
   \              0x00         
   \   00000072   0x00 0x38          DC8 0, 56, 56, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 240, 56, 8
   \              0x38 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xC0 0xF0    
   \              0x38 0x08    
   \   00000086   0x00 0x00          DC8 0, 0, 0, 0, 7, 31, 56, 32, 0, 0, 0, 0, 8, 56, 240, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x07 0x1F    
   \              0x38 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x38    
   \              0xF0 0xC0    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000009A   0x20 0x38          DC8 32, 56, 31, 7, 0, 0, 0, 128, 160, 224, 192, 224, 160, 128, 0, 0, 2
   \              0x1F 0x07    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xA0 0xE0    
   \              0xC0 0xE0    
   \              0xA0 0x80    
   \              0x00 0x00    
   \              0x02         
   \   000000AB   0x03 0x01          DC8 3, 1, 3, 2, 0, 0, 128, 128, 224, 224, 128, 128, 0, 0, 0, 0, 3, 3, 0
   \              0x03 0x02    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xE0 0xE0    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x03    
   \              0x00         
   \   000000BE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 60, 28, 0, 0, 0, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2C    
   \              0x3C 0x1C    
   \              0x00 0x00    
   \              0x00 0x80    
   \   000000D2   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000E5   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 12, 12, 12, 0, 0, 0, 0, 0, 128, 224, 120, 24, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0C 0x0C    
   \              0x0C 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0xE0    
   \              0x78 0x18    
   \              0x00         
   \   000000F8   0x00 0x18          DC8 0, 24, 30, 7, 1, 0, 0, 0, 0, 0, 240, 248, 8, 104, 248, 240, 0, 0, 7
   \              0x1E 0x07    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xF0 0xF8    
   \              0x08 0x68    
   \              0xF8 0xF0    
   \              0x00 0x00    
   \              0x07         
   \   0000010B   0x0F 0x0B          DC8 15, 11, 8, 15, 7, 0, 32, 32, 48, 248, 248, 0, 0, 0, 0, 0, 0, 15, 15
   \              0x08 0x0F    
   \              0x07 0x00    
   \              0x20 0x20    
   \              0x30 0xF8    
   \              0xF8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x0F         
   \   0000011E   0x00 0x00          DC8 0, 0, 0, 48, 56, 8, 136, 248, 112, 0, 0, 12, 14, 11, 9, 8, 8, 0, 0
   \              0x00 0x30    
   \              0x38 0x08    
   \              0x88 0xF8    
   \              0x70 0x00    
   \              0x00 0x0C    
   \              0x0E 0x0B    
   \              0x09 0x08    
   \              0x08 0x00    
   \              0x00         
   \   00000131   0x30 0x38          DC8 48, 56, 136, 136, 248, 112, 0, 0, 6, 14, 8, 8, 15, 7, 0, 0, 0, 248
   \              0x88 0x88    
   \              0xF8 0x70    
   \              0x00 0x00    
   \              0x06 0x0E    
   \              0x08 0x08    
   \              0x0F 0x07    
   \              0x00 0x00    
   \              0x00 0xF8    
   \   00000143   0xF8 0x00          DC8 248, 0, 224, 224, 0, 0, 3, 3, 2, 2, 15, 15, 2, 0, 248, 248, 136
   \              0xE0 0xE0    
   \              0x00 0x00    
   \              0x03 0x03    
   \              0x02 0x02    
   \              0x0F 0x0F    
   \              0x02 0x00    
   \              0xF8 0xF8    
   \              0x88         
   \   00000154   0x88 0x88          DC8 136, 136, 8, 0, 0, 8, 8, 8, 12, 7, 3, 0, 0, 192, 224, 120, 88, 200
   \              0x08 0x00    
   \              0x00 0x08    
   \              0x08 0x08    
   \              0x0C 0x07    
   \              0x03 0x00    
   \              0x00 0xC0    
   \              0xE0 0x78    
   \              0x58 0xC8    
   \   00000166   0x80 0x00          DC8 128, 0, 0, 7, 15, 8, 8, 15, 7, 0, 0, 8, 8, 136, 232, 120, 24, 0, 0
   \              0x00 0x07    
   \              0x0F 0x08    
   \              0x08 0x0F    
   \              0x07 0x00    
   \              0x00 0x08    
   \              0x08 0x88    
   \              0xE8 0x78    
   \              0x18 0x00    
   \              0x00         
   \   00000179   0x00 0x0E          DC8 0, 14, 15, 1, 0, 0, 0, 0, 112, 248, 200, 136, 248, 112, 0, 0, 7, 15
   \              0x0F 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x70 0xF8    
   \              0xC8 0x88    
   \              0xF8 0x70    
   \              0x00 0x00    
   \              0x07 0x0F    
   \   0000018B   0x08 0x09          DC8 8, 9, 15, 7, 0, 0, 240, 248, 8, 8, 248, 240, 0, 0, 0, 9, 13, 15, 3
   \              0x0F 0x07    
   \              0x00 0x00    
   \              0xF0 0xF8    
   \              0x08 0x08    
   \              0xF8 0xF0    
   \              0x00 0x00    
   \              0x00 0x09    
   \              0x0D 0x0F    
   \              0x03         
   \   0000019E   0x01 0x00          DC8 1, 0, 0, 0, 0, 96, 96, 96, 0, 0, 0, 0, 0, 12, 12, 12, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x60    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x0C    
   \              0x0C 0x0C    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001B3   0x60 0x60          DC8 96, 96, 96, 0, 0, 0, 0, 0, 44, 60, 28, 0, 0, 0, 128, 192, 96, 48
   \              0x60 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x2C 0x3C    
   \              0x1C 0x00    
   \              0x00 0x00    
   \              0x80 0xC0    
   \              0x60 0x30    
   \   000001C5   0x18 0x08          DC8 24, 8, 0, 0, 0, 1, 3, 6, 12, 8, 0, 0, 64, 64, 64, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x03 0x06    
   \              0x0C 0x08    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000001D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 0, 0, 8, 24, 48, 96, 192, 128, 0, 0, 8, 12, 6, 3
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x00 0x00    
   \              0x08 0x18    
   \              0x30 0x60    
   \              0xC0 0x80    
   \              0x00 0x00    
   \              0x08 0x0C    
   \              0x06 0x03    
   \   000001ED   0x01 0x00          DC8 1, 0, 0, 0, 48, 56, 136, 200, 120, 48, 0, 0, 0, 0, 13, 13, 0, 0, 0
   \              0x00 0x00    
   \              0x30 0x38    
   \              0x88 0xC8    
   \              0x78 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0D 0x0D    
   \              0x00 0x00    
   \              0x00         
   \   00000200   0xF0 0xF8          DC8 240, 248, 8, 136, 200, 72, 248, 240, 7, 15, 8, 9, 11, 10, 11, 11, 0
   \              0x08 0x88    
   \              0xC8 0x48    
   \              0xF8 0xF0    
   \              0x07 0x0F    
   \              0x08 0x09    
   \              0x0B 0x0A    
   \              0x0B 0x0B    
   \              0x00         
   \   00000211   0xE0 0xF0          DC8 224, 240, 24, 24, 240, 224, 0, 0, 15, 15, 1, 1, 15, 15, 0, 0, 248
   \              0x18 0x18    
   \              0xF0 0xE0    
   \              0x00 0x00    
   \              0x0F 0x0F    
   \              0x01 0x01    
   \              0x0F 0x0F    
   \              0x00 0x00    
   \              0xF8         
   \   00000222   0xF8 0x88          DC8 248, 136, 136, 248, 112, 0, 0, 15, 15, 8, 8, 15, 7, 0, 0, 240, 248
   \              0x88 0xF8    
   \              0x70 0x00    
   \              0x00 0x0F    
   \              0x0F 0x08    
   \              0x08 0x0F    
   \              0x07 0x00    
   \              0x00 0xF0    
   \              0xF8         
   \   00000233   0x08 0x08          DC8 8, 8, 56, 48, 0, 0, 7, 15, 8, 8, 14, 6, 0, 0, 248, 248, 8, 24, 240
   \              0x38 0x30    
   \              0x00 0x00    
   \              0x07 0x0F    
   \              0x08 0x08    
   \              0x0E 0x06    
   \              0x00 0x00    
   \              0xF8 0xF8    
   \              0x08 0x18    
   \              0xF0         
   \   00000246   0xE0 0x00          DC8 224, 0, 0, 15, 15, 8, 12, 7, 3, 0, 0, 248, 248, 136, 136, 136, 8, 0
   \              0x00 0x0F    
   \              0x0F 0x08    
   \              0x0C 0x07    
   \              0x03 0x00    
   \              0x00 0xF8    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x08 0x00    
   \   00000258   0x00 0x0F          DC8 0, 15, 15, 8, 8, 8, 8, 0, 0, 248, 248, 136, 136, 136, 8, 0, 0, 15
   \              0x0F 0x08    
   \              0x08 0x08    
   \              0x08 0x00    
   \              0x00 0xF8    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x08 0x00    
   \              0x00 0x0F    
   \   0000026A   0x0F 0x00          DC8 15, 0, 0, 0, 0, 0, 0, 240, 248, 8, 8, 56, 48, 0, 0, 7, 15, 8, 9, 15
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0xF8 0x08    
   \              0x08 0x38    
   \              0x30 0x00    
   \              0x00 0x07    
   \              0x0F 0x08    
   \              0x09 0x0F    
   \   0000027E   0x0F 0x00          DC8 15, 0, 0, 248, 248, 128, 128, 248, 248, 0, 0, 15, 15, 0, 0, 15, 15
   \              0x00 0xF8    
   \              0xF8 0x80    
   \              0x80 0xF8    
   \              0xF8 0x00    
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0x00 0x0F    
   \              0x0F         
   \   0000028F   0x00 0x00          DC8 0, 0, 0, 8, 248, 248, 8, 0, 0, 0, 0, 8, 15, 15, 8, 0, 0, 0, 0, 0, 0
   \              0x00 0x08    
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x0F 0x0F    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002A4   0x00 0xF8          DC8 0, 248, 248, 0, 0, 6, 14, 8, 8, 15, 7, 0, 0, 248, 248, 128, 224
   \              0xF8 0x00    
   \              0x00 0x06    
   \              0x0E 0x08    
   \              0x08 0x0F    
   \              0x07 0x00    
   \              0x00 0xF8    
   \              0xF8 0x80    
   \              0xE0         
   \   000002B5   0x78 0x18          DC8 120, 24, 0, 0, 15, 15, 0, 3, 15, 12, 0, 0, 248, 248, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x0F 0x0F    
   \              0x00 0x03    
   \              0x0F 0x0C    
   \              0x00 0x00    
   \              0xF8 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002C8   0x00 0x0F          DC8 0, 15, 15, 8, 8, 8, 8, 0, 0, 248, 248, 32, 192, 32, 248, 248, 0, 15
   \              0x0F 0x08    
   \              0x08 0x08    
   \              0x08 0x00    
   \              0x00 0xF8    
   \              0xF8 0x20    
   \              0xC0 0x20    
   \              0xF8 0xF8    
   \              0x00 0x0F    
   \   000002DA   0x0F 0x00          DC8 15, 0, 1, 0, 15, 15, 0, 248, 248, 96, 192, 128, 248, 248, 0, 15, 15
   \              0x01 0x00    
   \              0x0F 0x0F    
   \              0x00 0xF8    
   \              0xF8 0x60    
   \              0xC0 0x80    
   \              0xF8 0xF8    
   \              0x00 0x0F    
   \              0x0F         
   \   000002EB   0x00 0x00          DC8 0, 0, 1, 15, 15, 0, 240, 248, 8, 8, 248, 240, 0, 0, 7, 15, 8, 8, 15
   \              0x01 0x0F    
   \              0x0F 0x00    
   \              0xF0 0xF8    
   \              0x08 0x08    
   \              0xF8 0xF0    
   \              0x00 0x00    
   \              0x07 0x0F    
   \              0x08 0x08    
   \              0x0F         
   \   000002FE   0x07 0x00          DC8 7, 0, 0, 248, 248, 136, 136, 248, 112, 0, 0, 15, 15, 0, 0, 0, 0, 0
   \              0x00 0xF8    
   \              0xF8 0x88    
   \              0x88 0xF8    
   \              0x70 0x00    
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000310   0x00 0xF0          DC8 0, 240, 248, 8, 8, 248, 240, 0, 0, 7, 15, 8, 24, 63, 39, 0, 0, 248
   \              0xF8 0x08    
   \              0x08 0xF8    
   \              0xF0 0x00    
   \              0x00 0x07    
   \              0x0F 0x08    
   \              0x18 0x3F    
   \              0x27 0x00    
   \              0x00 0xF8    
   \   00000322   0xF8 0x88          DC8 248, 136, 136, 248, 112, 0, 0, 15, 15, 0, 1, 15, 14, 0, 0, 48, 120
   \              0x88 0xF8    
   \              0x70 0x00    
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0x01 0x0F    
   \              0x0E 0x00    
   \              0x00 0x30    
   \              0x78         
   \   00000333   0xC8 0x88          DC8 200, 136, 24, 16, 0, 0, 4, 12, 8, 9, 15, 6, 0, 0, 8, 8, 248, 248, 8
   \              0x18 0x10    
   \              0x00 0x00    
   \              0x04 0x0C    
   \              0x08 0x09    
   \              0x0F 0x06    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0xF8    
   \              0x08         
   \   00000346   0x08 0x00          DC8 8, 0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 248, 248, 0, 0, 248, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0xF8 0x00    
   \              0x00 0xF8    
   \              0xF8 0x00    
   \              0x00         
   \   00000359   0x07 0x0F          DC8 7, 15, 8, 8, 15, 7, 0, 0, 248, 248, 0, 0, 248, 248, 0, 0, 3, 7, 12
   \              0x08 0x08    
   \              0x0F 0x07    
   \              0x00 0x00    
   \              0xF8 0xF8    
   \              0x00 0x00    
   \              0xF8 0xF8    
   \              0x00 0x00    
   \              0x03 0x07    
   \              0x0C         
   \   0000036C   0x0C 0x07          DC8 12, 7, 3, 0, 0, 248, 248, 0, 192, 0, 248, 248, 0, 1, 15, 14, 1, 14
   \              0x03 0x00    
   \              0x00 0xF8    
   \              0xF8 0x00    
   \              0xC0 0x00    
   \              0xF8 0xF8    
   \              0x00 0x01    
   \              0x0F 0x0E    
   \              0x01 0x0E    
   \   0000037E   0x0F 0x01          DC8 15, 1, 0, 24, 56, 224, 192, 56, 24, 0, 0, 14, 15, 0, 1, 15, 14, 0
   \              0x00 0x18    
   \              0x38 0xE0    
   \              0xC0 0x38    
   \              0x18 0x00    
   \              0x00 0x0E    
   \              0x0F 0x00    
   \              0x01 0x0F    
   \              0x0E 0x00    
   \   00000390   0x00 0x78          DC8 0, 120, 248, 128, 128, 248, 120, 0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 8
   \              0xF8 0x80    
   \              0x80 0xF8    
   \              0x78 0x00    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x08    
   \   000003A2   0x08 0x88          DC8 8, 136, 200, 120, 56, 0, 0, 14, 15, 9, 8, 8, 8, 0, 0, 0, 248, 248
   \              0xC8 0x78    
   \              0x38 0x00    
   \              0x00 0x0E    
   \              0x0F 0x09    
   \              0x08 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0xF8 0xF8    
   \   000003B4   0x08 0x08          DC8 8, 8, 0, 0, 0, 0, 127, 127, 64, 64, 0, 0, 0, 24, 120, 224, 128, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x7F    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x00 0x18    
   \              0x78 0xE0    
   \              0x80 0x00    
   \   000003C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 1, 7, 30, 24, 0, 0, 0, 8, 8, 248, 248, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x07 0x1E    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003DA   0x40 0x40          DC8 64, 64, 127, 127, 0, 0, 0, 8, 12, 6, 6, 12, 8, 0, 0, 0, 0, 0, 0, 0
   \              0x7F 0x7F    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x0C 0x06    
   \              0x06 0x0C    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000003EE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   00000402   0x02 0x06          DC8 2, 6, 14, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 32, 32, 224
   \              0x0E 0x08    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x20 0xE0    
   \   00000416   0xC0 0x00          DC8 192, 0, 0, 6, 15, 9, 9, 15, 15, 0, 0, 248, 248, 32, 32, 224, 192, 0
   \              0x00 0x06    
   \              0x0F 0x09    
   \              0x09 0x0F    
   \              0x0F 0x00    
   \              0x00 0xF8    
   \              0xF8 0x20    
   \              0x20 0xE0    
   \              0xC0 0x00    
   \   00000428   0x00 0x0F          DC8 0, 15, 15, 8, 8, 15, 7, 0, 0, 192, 224, 32, 32, 96, 64, 0, 0, 7, 15
   \              0x0F 0x08    
   \              0x08 0x0F    
   \              0x07 0x00    
   \              0x00 0xC0    
   \              0xE0 0x20    
   \              0x20 0x60    
   \              0x40 0x00    
   \              0x00 0x07    
   \              0x0F         
   \   0000043B   0x08 0x08          DC8 8, 8, 12, 4, 0, 0, 192, 224, 32, 32, 248, 248, 0, 0, 7, 15, 8, 8
   \              0x0C 0x04    
   \              0x00 0x00    
   \              0xC0 0xE0    
   \              0x20 0x20    
   \              0xF8 0xF8    
   \              0x00 0x00    
   \              0x07 0x0F    
   \              0x08 0x08    
   \   0000044D   0x0F 0x0F          DC8 15, 15, 0, 0, 192, 224, 32, 32, 224, 192, 0, 0, 7, 15, 9, 9, 9, 1
   \              0x00 0x00    
   \              0xC0 0xE0    
   \              0x20 0x20    
   \              0xE0 0xC0    
   \              0x00 0x00    
   \              0x07 0x0F    
   \              0x09 0x09    
   \              0x09 0x01    
   \   0000045F   0x00 0x00          DC8 0, 0, 128, 240, 248, 136, 136, 136, 0, 0, 0, 15, 15, 0, 0, 0, 0, 0
   \              0x80 0xF0    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000471   0xC0 0xE0          DC8 192, 224, 32, 32, 224, 224, 0, 0, 71, 79, 72, 72, 127, 63, 0, 0
   \              0x20 0x20    
   \              0xE0 0xE0    
   \              0x00 0x00    
   \              0x47 0x4F    
   \              0x48 0x48    
   \              0x7F 0x3F    
   \              0x00 0x00    
   \   00000481   0xF8 0xF8          DC8 248, 248, 32, 32, 224, 192, 0, 0, 15, 15, 0, 0, 15, 15, 0, 0, 32
   \              0x20 0x20    
   \              0xE0 0xC0    
   \              0x00 0x00    
   \              0x0F 0x0F    
   \              0x00 0x00    
   \              0x0F 0x0F    
   \              0x00 0x00    
   \              0x20         
   \   00000492   0x20 0xEC          DC8 32, 236, 236, 0, 0, 0, 0, 8, 8, 15, 15, 8, 8, 0, 0, 0, 32, 32, 236
   \              0xEC 0x00    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x08 0x0F    
   \              0x0F 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0xEC         
   \   000004A5   0xEC 0x00          DC8 236, 0, 0, 0, 64, 64, 64, 127, 63, 0, 0, 0, 248, 248, 0, 128, 224
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0xF8 0xF8    
   \              0x00 0x80    
   \              0xE0         
   \   000004B6   0x60 0x00          DC8 96, 0, 0, 15, 15, 1, 3, 14, 12, 0, 0, 8, 8, 248, 248, 0, 0, 0, 0, 8
   \              0x00 0x0F    
   \              0x0F 0x01    
   \              0x03 0x0E    
   \              0x0C 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0xF8 0x00    
   \              0x00 0x00    
   \              0x00 0x08    
   \   000004CA   0x08 0x0F          DC8 8, 15, 15, 8, 8, 0, 0, 224, 224, 32, 224, 32, 224, 192, 0, 15, 15
   \              0x0F 0x08    
   \              0x08 0x00    
   \              0x00 0xE0    
   \              0xE0 0x20    
   \              0xE0 0x20    
   \              0xE0 0xC0    
   \              0x00 0x0F    
   \              0x0F         
   \   000004DB   0x00 0x07          DC8 0, 7, 0, 15, 15, 0, 224, 224, 32, 32, 224, 192, 0, 0, 15, 15, 0, 0
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0xE0 0xE0    
   \              0x20 0x20    
   \              0xE0 0xC0    
   \              0x00 0x00    
   \              0x0F 0x0F    
   \              0x00 0x00    
   \   000004ED   0x0F 0x0F          DC8 15, 15, 0, 0, 192, 224, 32, 32, 224, 192, 0, 0, 7, 15, 8, 8, 15, 7
   \              0x00 0x00    
   \              0xC0 0xE0    
   \              0x20 0x20    
   \              0xE0 0xC0    
   \              0x00 0x00    
   \              0x07 0x0F    
   \              0x08 0x08    
   \              0x0F 0x07    
   \   000004FF   0x00 0x00          DC8 0, 0, 224, 224, 32, 32, 224, 192, 0, 0, 127, 127, 8, 8, 15, 7, 0, 0
   \              0xE0 0xE0    
   \              0x20 0x20    
   \              0xE0 0xC0    
   \              0x00 0x00    
   \              0x7F 0x7F    
   \              0x08 0x08    
   \              0x0F 0x07    
   \              0x00 0x00    
   \   00000511   0xC0 0xE0          DC8 192, 224, 32, 32, 224, 224, 0, 0, 7, 15, 8, 8, 127, 127, 0, 0, 224
   \              0x20 0x20    
   \              0xE0 0xE0    
   \              0x00 0x00    
   \              0x07 0x0F    
   \              0x08 0x08    
   \              0x7F 0x7F    
   \              0x00 0x00    
   \              0xE0         
   \   00000522   0xE0 0x80          DC8 224, 128, 64, 96, 96, 0, 0, 15, 15, 0, 0, 0, 0, 0, 0, 192, 224, 32
   \              0x40 0x60    
   \              0x60 0x00    
   \              0x00 0x0F    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xE0 0x20    
   \   00000534   0x20 0x20          DC8 32, 32, 32, 0, 0, 8, 9, 9, 9, 15, 6, 0, 0, 32, 248, 248, 32, 32, 32
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x09 0x09    
   \              0x09 0x0F    
   \              0x06 0x00    
   \              0x00 0x20    
   \              0xF8 0xF8    
   \              0x20 0x20    
   \              0x20         
   \   00000547   0x00 0x00          DC8 0, 0, 0, 7, 15, 8, 8, 8, 0, 0, 224, 224, 0, 0, 224, 224, 0, 0, 7
   \              0x00 0x07    
   \              0x0F 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0xE0 0xE0    
   \              0x00 0x00    
   \              0xE0 0xE0    
   \              0x00 0x00    
   \              0x07         
   \   0000055A   0x0F 0x08          DC8 15, 8, 8, 15, 15, 0, 0, 224, 224, 0, 0, 224, 224, 0, 0, 3, 7, 12
   \              0x08 0x0F    
   \              0x0F 0x00    
   \              0x00 0xE0    
   \              0xE0 0x00    
   \              0x00 0xE0    
   \              0xE0 0x00    
   \              0x00 0x03    
   \              0x07 0x0C    
   \   0000056C   0x0C 0x07          DC8 12, 7, 3, 0, 0, 224, 224, 0, 192, 0, 224, 224, 0, 3, 15, 12, 3, 12
   \              0x03 0x00    
   \              0x00 0xE0    
   \              0xE0 0x00    
   \              0xC0 0x00    
   \              0xE0 0xE0    
   \              0x00 0x03    
   \              0x0F 0x0C    
   \              0x03 0x0C    
   \   0000057E   0x0F 0x03          DC8 15, 3, 0, 96, 224, 128, 128, 224, 96, 0, 0, 12, 14, 3, 3, 14, 12, 0
   \              0x00 0x60    
   \              0xE0 0x80    
   \              0x80 0xE0    
   \              0x60 0x00    
   \              0x00 0x0C    
   \              0x0E 0x03    
   \              0x03 0x0E    
   \              0x0C 0x00    
   \   00000590   0x00 0xE0          DC8 0, 224, 224, 0, 0, 224, 224, 0, 64, 71, 79, 104, 56, 31, 7, 0, 0
   \              0xE0 0x00    
   \              0x00 0xE0    
   \              0xE0 0x00    
   \              0x40 0x47    
   \              0x4F 0x68    
   \              0x38 0x1F    
   \              0x07 0x00    
   \              0x00         
   \   000005A1   0x20 0x20          DC8 32, 32, 32, 160, 224, 96, 0, 0, 12, 14, 11, 9, 8, 8, 0, 0, 0, 128
   \              0x20 0xA0    
   \              0xE0 0x60    
   \              0x00 0x00    
   \              0x0C 0x0E    
   \              0x0B 0x09    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0x80    
   \   000005B3   0xF0 0x78          DC8 240, 120, 8, 0, 0, 0, 1, 3, 30, 60, 32, 0, 0, 0, 0, 0, 248, 248, 0
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x01 0x03    
   \              0x1E 0x3C    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xF8 0xF8    
   \              0x00         
   \   000005C6   0x00 0x00          DC8 0, 0, 0, 0, 0, 127, 127, 0, 0, 0, 0, 0, 8, 120, 240, 128, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x7F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x78    
   \              0xF0 0x80    
   \              0x00 0x00    
   \              0x00         
   \   000005D9   0x00 0x20          DC8 0, 32, 60, 30, 3, 1, 0, 48, 24, 8, 24, 48, 32, 48, 24, 0, 0, 0, 0
   \              0x3C 0x1E    
   \              0x03 0x01    
   \              0x00 0x30    
   \              0x18 0x08    
   \              0x18 0x30    
   \              0x20 0x30    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000005EC   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const fontCode6_8[95][6]
   \                     fontCode6_8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x4F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 35, 19, 8, 100, 98, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x23 0x13    
   \              0x08 0x64    
   \              0x62 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 80, 48, 0, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x50 0x30    
   \              0x00 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 121, 65, 62, 0, 126, 17, 17, 17, 126, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x79 0x41    
   \              0x3E 0x00    
   \              0x7E 0x11    
   \              0x11 0x11    
   \              0x7E 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x3E          DC8 73, 62, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 4, 2, 127, 0, 127, 4
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x04 0x02    
   \              0x7F 0x00    
   \              0x7F 0x04    
   \   00000117   0x08 0x10          DC8 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x7F 0x00    
   \              0x3E 0x41    
   \              0x41 0x41    
   \              0x3E 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x06 0x00    
   \              0x3E 0x41    
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 3, 4, 120, 4, 3, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x03 0x04    
   \              0x78 0x04    
   \              0x03 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 21, 22, 124, 22, 21, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x15    
   \              0x16 0x7C    
   \              0x16 0x15    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 12, 82, 82, 82, 62, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125, 64
   \              0x0C 0x52    
   \              0x52 0x52    
   \              0x3E 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D 0x40    
   \   000001BB   0x00 0x00          DC8 0, 0, 32, 64, 68, 61, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65, 127, 64
   \              0x20 0x40    
   \              0x44 0x3D    
   \              0x00 0x00    
   \              0x7F 0x10    
   \              0x28 0x44    
   \              0x00 0x00    
   \              0x00 0x41    
   \              0x7F 0x40    
   \   000001CD   0x00 0x00          DC8 0, 0, 126, 2, 12, 2, 124, 0, 126, 4, 2, 2, 124, 0, 56, 68, 68, 68
   \              0x7E 0x02    
   \              0x0C 0x02    
   \              0x7C 0x00    
   \              0x7E 0x04    
   \              0x02 0x02    
   \              0x7C 0x00    
   \              0x38 0x44    
   \              0x44 0x44    
   \   000001DF   0x38 0x00          DC8 56, 0, 124, 20, 20, 20, 8, 0, 8, 20, 20, 24, 124, 0, 124, 8, 4, 4
   \              0x7C 0x14    
   \              0x14 0x14    
   \              0x08 0x00    
   \              0x08 0x14    
   \              0x14 0x18    
   \              0x7C 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \   000001F1   0x08 0x00          DC8 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64, 64, 32
   \              0x48 0x54    
   \              0x54 0x54    
   \              0x20 0x00    
   \              0x04 0x3F    
   \              0x44 0x40    
   \              0x20 0x00    
   \              0x3C 0x40    
   \              0x40 0x20    
   \   00000203   0x7C 0x00          DC8 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68, 40, 16
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44 0x28    
   \              0x10         
   \   00000214   0x28 0x44          DC8 40, 68, 0, 12, 80, 80, 80, 60, 0, 68, 100, 84, 76, 68, 0, 0, 8, 54
   \              0x00 0x0C    
   \              0x50 0x50    
   \              0x50 0x3C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \              0x00 0x00    
   \              0x08 0x36    
   \   00000226   0x41 0x00          DC8 65, 0, 0, 0, 0, 127, 0, 0, 0, 0, 65, 54, 8, 0, 0, 8, 4, 8, 16, 8
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x41 0x36    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0x04 0x08    
   \              0x10 0x08    
   \   0000023A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   __absolute unsigned char const chinese[4][24]
   \                     chinese:
   \   00000000   0x04 0x04          DC8 4, 4, 244, 85, 94, 84, 86, 85, 244, 6, 4, 0, 0, 0, 7, 5, 5, 5, 5, 5
   \              0xF4 0x55    
   \              0x5E 0x54    
   \              0x56 0x55    
   \              0xF4 0x06    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x07 0x05    
   \              0x05 0x05    
   \              0x05 0x05    
   \   00000014   0x07 0x00          DC8 7, 0, 0, 0, 40, 38, 34, 226, 186, 35, 34, 226, 34, 42, 38, 0, 4, 4
   \              0x00 0x00    
   \              0x28 0x26    
   \              0x22 0xE2    
   \              0xBA 0x23    
   \              0x22 0xE2    
   \              0x22 0x2A    
   \              0x26 0x00    
   \              0x04 0x04    
   \   00000026   0x04 0x04          DC8 4, 4, 2, 3, 1, 2, 2, 4, 4, 0, 0, 17, 17, 145, 127, 17, 17, 17, 241
   \              0x02 0x03    
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x11    
   \              0x11 0x91    
   \              0x7F 0x11    
   \              0x11 0x11    
   \              0xF1         
   \   00000039   0x01 0x00          DC8 1, 0, 0, 4, 4, 4, 7, 4, 4, 4, 4, 7, 4, 4, 0, 255, 1, 25, 231, 0, 0
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x07 0x04    
   \              0x04 0x04    
   \              0x04 0x07    
   \              0x04 0x04    
   \              0x00 0xFF    
   \              0x01 0x19    
   \              0xE7 0x00    
   \              0x00         
   \   0000004E   0xC0 0x3F          DC8 192, 63, 192, 0, 0, 0, 7, 1, 1, 5, 2, 1, 0, 0, 0, 3, 4, 0
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x07 0x01    
   \              0x01 0x05    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x04 0x00    
      5          
      6          
      7          /*ÐÞ¸Ä²ÎÊýÈ«¾Ö±äÁ¿*/
      8          extern uint8 WHITE_CENTER;
      9          extern float angle_kp;
     10          extern float angle_kd;
     11          extern float RealSpeed;
     12          extern float acce_angle;
     13          extern float speed_kp;
     14          extern float speed_ki;
     15          extern int16 g_nLeftCount;
     16          extern int16 g_nRightCount;
     17          
     18          extern uint8 Left_cnt;
     19          extern uint8 Right_cnt;
     20          
     21          extern float steer_kp;
     22          extern float steer_kd;
     23          
     24          extern float g_nCarAngle;
     25          extern float acce,w;
     26          extern float GYRO_STATIC,ACCE_STATIC;           //ÁãµãÆ«ÒÆÁ¿
     27          
     28          
     29          extern uint16 latch;
     30          extern float p_distance;
     31          extern int8 IntegrationTime;
     32          extern int16 LeftSpeedPwm;
     33          extern int16 RightSpeedPwm;
     34          extern int16 anglePD;
     35          extern int16 SpeedPID;
     36          extern int16 steerpwm;
     37          
     38          
     39          extern  uint16 Pixel[128];              //
     40          extern  uint8 CCD_value[128];
     41          
     42          
     43          extern uint8 Speed_set;
     44          extern char delaytime;
     45          

   \                                 In section .bss, align 1
     46          unsigned char page_num=0;     //Ò³ÐòºÅ
   \                     page_num:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     47          unsigned char line_num=0;     //ÐÐÐòºÅ
   \                     line_num:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     48          unsigned char re_display=1;   //Ô¤ÏÔÊ¾±êÖ¾Î» 
   \                     re_display:
   \   00000000   0x01               DC8 1
     49          /*************************************************************/
     50          /*                        ÑÓÊ±º¯Êý                           */
     51          /*************************************************************/

   \                                 In section .text, align 2, keep-with-next
     52          void LCD_delay(void) 
     53          {
     54           unsigned int i;
     55           for(i=0;i<16;i++);
   \                     LCD_delay:
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x0008             MOVS     R0,R1
   \                     ??LCD_delay_0:
   \   00000004   0x2810             CMP      R0,#+16
   \   00000006   0xD201             BCS.N    ??LCD_delay_1
   \   00000008   0x1C40             ADDS     R0,R0,#+1
   \   0000000A   0xE7FB             B.N      ??LCD_delay_0
     56          }
   \                     ??LCD_delay_1:
   \   0000000C   0x4770             BX       LR               ;; return
     57          

   \                                 In section .text, align 2, keep-with-next
     58          void longdelay(void) 
     59          {
     60           unsigned int i;
     61           for(i=0;i<4000;i++);
   \                     longdelay:
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x0008             MOVS     R0,R1
   \                     ??longdelay_0:
   \   00000004   0xF5B0 0x6F7A      CMP      R0,#+4000
   \   00000008   0xD201             BCS.N    ??longdelay_1
   \   0000000A   0x1C40             ADDS     R0,R0,#+1
   \   0000000C   0xE7FA             B.N      ??longdelay_0
     62          }
   \                     ??longdelay_1:
   \   0000000E   0x4770             BX       LR               ;; return
     63          

   \                                 In section .text, align 4, keep-with-next
     64          void  DelayMs(uint32  ms)
     65          {
     66          
     67              uint32  i, j;
     68              for(i = 0; i < ms; i++)
   \                     DelayMs:
   \   00000000   0x2300             MOVS     R3,#+0
   \   00000002   0x0019             MOVS     R1,R3
   \                     ??DelayMs_0:
   \   00000004   0x4281             CMP      R1,R0
   \   00000006   0xD209             BCS.N    ??DelayMs_1
     69              {
     70                  for(j = 100000; j > 0; j--)
   \   00000008   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x186a0
   \   0000000C   0x001A             MOVS     R2,R3
   \                     ??DelayMs_2:
   \   0000000E   0x2A00             CMP      R2,#+0
   \   00000010   0xD002             BEQ.N    ??DelayMs_3
     71                  {
     72                      asm("nop");
   \   00000012   0xBF00             nop              
     73                  }
   \   00000014   0x1E52             SUBS     R2,R2,#+1
   \   00000016   0xE7FA             B.N      ??DelayMs_2
     74              }
   \                     ??DelayMs_3:
   \   00000018   0x1C49             ADDS     R1,R1,#+1
   \   0000001A   0xE7F3             B.N      ??DelayMs_0
     75          }
   \                     ??DelayMs_1:
   \   0000001C   0x4770             BX       LR               ;; return
     76          
     77          /************************************************************
     78                            ³õÊ¼»¯¶Ë¿Ú
     79          ***********************************************************/

   \                                 In section .text, align 2, keep-with-next
     80           void Init_port(void) 
     81           
     82           {
   \                     Init_port:
   \   00000000   0xB580             PUSH     {R7,LR}
     83             gpio_init  (PORTC, 6, GPO_HDS, LOW); 
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0x2241             MOVS     R2,#+65
   \   00000006   0x2106             MOVS     R1,#+6
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x.... 0x....      BL       gpio_init
     84           
     85             gpio_init  (PORTC, 7, GPO_HDS, LOW);
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2241             MOVS     R2,#+65
   \   00000012   0x2107             MOVS     R1,#+7
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x.... 0x....      BL       gpio_init
     86                   
     87             gpio_init  (PORTC, 8, GPO_HDS, LOW);
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0x2241             MOVS     R2,#+65
   \   0000001E   0x2108             MOVS     R1,#+8
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0x.... 0x....      BL       gpio_init
     88             
     89             gpio_init  (PORTC, 9, GPO_HDS, LOW);
   \   00000026   0x2300             MOVS     R3,#+0
   \   00000028   0x2241             MOVS     R2,#+65
   \   0000002A   0x2109             MOVS     R1,#+9
   \   0000002C   0x2002             MOVS     R0,#+2
   \   0000002E   0x.... 0x....      BL       gpio_init
     90             
     91             gpio_init  (PORTC, 10, GPO_HDS, LOW);
   \   00000032   0x2300             MOVS     R3,#+0
   \   00000034   0x2241             MOVS     R2,#+65
   \   00000036   0x210A             MOVS     R1,#+10
   \   00000038   0x2002             MOVS     R0,#+2
   \   0000003A   0x.... 0x....      BL       gpio_init
     92             
     93             gpio_init  (PORTD, 14, GPI_UP, HIGH);//°´¼üÉ¨Ãè
   \   0000003E   0x2301             MOVS     R3,#+1
   \   00000040   0x2203             MOVS     R2,#+3
   \   00000042   0x210E             MOVS     R1,#+14
   \   00000044   0x2003             MOVS     R0,#+3
   \   00000046   0x.... 0x....      BL       gpio_init
     94             
     95             gpio_init  (PORTD, 15, GPI_UP, HIGH);//Ë¢ÆÁÊ¹ÄÜ
   \   0000004A   0x2301             MOVS     R3,#+1
   \   0000004C   0x2203             MOVS     R2,#+3
   \   0000004E   0x210F             MOVS     R1,#+15
   \   00000050   0x2003             MOVS     R0,#+3
   \   00000052   0x.... 0x....      BL       gpio_init
     96             
     97             gpio_init  (PORTC, 12, GPI_UP, HIGH); //·­Ò³ 
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0x2203             MOVS     R2,#+3
   \   0000005A   0x210C             MOVS     R1,#+12
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x.... 0x....      BL       gpio_init
     98            
     99             gpio_init  (PORTC, 13, GPI_UP, HIGH);
   \   00000062   0x2301             MOVS     R3,#+1
   \   00000064   0x2203             MOVS     R2,#+3
   \   00000066   0x210D             MOVS     R1,#+13
   \   00000068   0x2002             MOVS     R0,#+2
   \   0000006A   0x.... 0x....      BL       gpio_init
    100            
    101             gpio_init  (PORTC, 14, GPI_UP, HIGH);
   \   0000006E   0x2301             MOVS     R3,#+1
   \   00000070   0x2203             MOVS     R2,#+3
   \   00000072   0x210E             MOVS     R1,#+14
   \   00000074   0x2002             MOVS     R0,#+2
   \   00000076   0x.... 0x....      BL       gpio_init
    102             
    103             gpio_init  (PORTC, 15, GPI_UP, HIGH);
   \   0000007A   0x2301             MOVS     R3,#+1
   \   0000007C   0x2203             MOVS     R2,#+3
   \   0000007E   0x210F             MOVS     R1,#+15
   \   00000080   0x2002             MOVS     R0,#+2
   \   00000082   0x.... 0x....      BL       gpio_init
    104             
    105             gpio_init  (PORTC, 16, GPI_UP, HIGH);
   \   00000086   0x2301             MOVS     R3,#+1
   \   00000088   0x2203             MOVS     R2,#+3
   \   0000008A   0x2110             MOVS     R1,#+16
   \   0000008C   0x2002             MOVS     R0,#+2
   \   0000008E   0x.... 0x....      BL       gpio_init
    106          
    107             gpio_init  (PORTC, 17, GPI_UP, HIGH); 
   \   00000092   0x2301             MOVS     R3,#+1
   \   00000094   0x2203             MOVS     R2,#+3
   \   00000096   0x2111             MOVS     R1,#+17
   \   00000098   0x2002             MOVS     R0,#+2
   \   0000009A   0x.... 0x....      BL       gpio_init
    108             
    109           }
   \   0000009E   0xBD01             POP      {R0,PC}          ;; return
    110           
    111          
    112          //--------------------------LCDÐ´×Ö½ÚÃüÁî---------------------//

   \                                 In section .text, align 2, keep-with-next
    113          void LCD_write_byte(uint8 dat, uint8 command)
    114          {
   \                     LCD_write_byte:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    115               uint16 i;
    116               SCE(0);           
   \   00000006   0x2200             MOVS     R2,#+0
   \   00000008   0x2107             MOVS     R1,#+7
   \   0000000A   0x2002             MOVS     R0,#+2
   \   0000000C   0x.... 0x....      BL       gpio_set
    117          
    118              if (command == 0)
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D00             CMP      R5,#+0
   \   00000014   0xD105             BNE.N    ??LCD_write_byte_0
    119                DC(0);                     
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x2108             MOVS     R1,#+8
   \   0000001A   0x2002             MOVS     R0,#+2
   \   0000001C   0x.... 0x....      BL       gpio_set
   \   00000020   0xE004             B.N      ??LCD_write_byte_1
    120              else
    121                DC(1);               
   \                     ??LCD_write_byte_0:
   \   00000022   0x2201             MOVS     R2,#+1
   \   00000024   0x2108             MOVS     R1,#+8
   \   00000026   0x2002             MOVS     R0,#+2
   \   00000028   0x.... 0x....      BL       gpio_set
    122                for(i=0 ;i < 8; i++)
   \                     ??LCD_write_byte_1:
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x0006             MOVS     R6,R0
   \                     ??LCD_write_byte_2:
   \   00000030   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000032   0x2E08             CMP      R6,#+8
   \   00000034   0xD219             BCS.N    ??LCD_write_byte_3
    123                {
    124                        if(dat&0x80)
   \   00000036   0x0620             LSLS     R0,R4,#+24
   \   00000038   0xD505             BPL.N    ??LCD_write_byte_4
    125                            SDIN(1); 
   \   0000003A   0x2201             MOVS     R2,#+1
   \   0000003C   0x2109             MOVS     R1,#+9
   \   0000003E   0x2002             MOVS     R0,#+2
   \   00000040   0x.... 0x....      BL       gpio_set
   \   00000044   0xE004             B.N      ??LCD_write_byte_5
    126                        else
    127                            SDIN(0); 
   \                     ??LCD_write_byte_4:
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x2109             MOVS     R1,#+9
   \   0000004A   0x2002             MOVS     R0,#+2
   \   0000004C   0x.... 0x....      BL       gpio_set
    128                        SCLK(0);     
   \                     ??LCD_write_byte_5:
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x210A             MOVS     R1,#+10
   \   00000054   0x2002             MOVS     R0,#+2
   \   00000056   0x.... 0x....      BL       gpio_set
    129                        dat = dat << 1;
   \   0000005A   0x0064             LSLS     R4,R4,#+1
    130                        SCLK(1);      
   \   0000005C   0x2201             MOVS     R2,#+1
   \   0000005E   0x210A             MOVS     R1,#+10
   \   00000060   0x2002             MOVS     R0,#+2
   \   00000062   0x.... 0x....      BL       gpio_set
    131                }
   \   00000066   0x1C76             ADDS     R6,R6,#+1
   \   00000068   0xE7E2             B.N      ??LCD_write_byte_2
    132               SCE(1);             
   \                     ??LCD_write_byte_3:
   \   0000006A   0x2201             MOVS     R2,#+1
   \   0000006C   0x2107             MOVS     R1,#+7
   \   0000006E   0x2002             MOVS     R0,#+2
   \   00000070   0x.... 0x....      BL       gpio_set
    133          }
   \   00000074   0xBD70             POP      {R4-R6,PC}       ;; return
    134          /****************************************************
    135                           ÉèÖÃLCD×ø±êº¯Êý
    136          *****************************************************/

   \                                 In section .text, align 2, keep-with-next
    137          void LCD_set_XY(unsigned char X, unsigned char Y)
    138          {
   \                     LCD_set_XY:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    139          	LCD_write_byte(0x40 | Y, 0);// column
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0xF055 0x0040      ORRS     R0,R5,#0x40
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_write_byte
    140          	LCD_write_byte(0x80 | X, 0);// row
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0xF054 0x0080      ORRS     R0,R4,#0x80
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       LCD_write_byte
    141          }
   \   0000001E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    142          /*******************************************************
    143                       LCD_clear: LCDÇåÆÁº¯Êý
    144          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
    145          void LCD_clear(void)
    146          {
   \                     LCD_clear:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    147          	unsigned char t;
    148          	unsigned char k;
    149          	LCD_set_XY(0,0);
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       LCD_set_XY
    150          	for(t=0;t<6;t++)
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x0004             MOVS     R4,R0
   \                     ??LCD_clear_0:
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C06             CMP      R4,#+6
   \   00000012   0xD20C             BCS.N    ??LCD_clear_1
    151          	{ 
    152          		for(k=0;k<84;k++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0005             MOVS     R5,R0
   \                     ??LCD_clear_2:
   \   00000018   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001A   0x2D54             CMP      R5,#+84
   \   0000001C   0xD205             BCS.N    ??LCD_clear_3
    153          		{ 
    154          		LCD_write_byte(0x00,1);
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       LCD_write_byte
    155          				
    156          		} 
   \   00000026   0x1C6D             ADDS     R5,R5,#+1
   \   00000028   0xE7F6             B.N      ??LCD_clear_2
    157          	}
   \                     ??LCD_clear_3:
   \   0000002A   0x1C64             ADDS     R4,R4,#+1
   \   0000002C   0xE7EF             B.N      ??LCD_clear_0
    158          }
   \                     ??LCD_clear_1:
   \   0000002E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    159          
    160          
    161          /*******************************************************
    162                       LCD_clear_L: LCDÇåÐÐº¯Êý
    163          *********************************************************/

   \                                 In section .text, align 2, keep-with-next
    164          void LCD_clear_L(unsigned char x,unsigned char y)
    165          {
   \                     LCD_clear_L:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    166          	unsigned char k;
    167          	x=x*6;
   \   00000006   0x2006             MOVS     R0,#+6
   \   00000008   0x4344             MULS     R4,R0,R4
    168          	LCD_set_XY(x,y);
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       LCD_set_XY
    169          	
    170          	for(k=x;k<84;k++)
   \   00000016   0x0026             MOVS     R6,R4
   \                     ??LCD_clear_L_0:
   \   00000018   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000001A   0x2E54             CMP      R6,#+84
   \   0000001C   0xD205             BCS.N    ??LCD_clear_L_1
    171          		LCD_write_byte(0x00,1);
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       LCD_write_byte
   \   00000026   0x1C76             ADDS     R6,R6,#+1
   \   00000028   0xE7F6             B.N      ??LCD_clear_L_0
    172          					
    173          }
   \                     ??LCD_clear_L_1:
   \   0000002A   0xBD70             POP      {R4-R6,PC}       ;; return
    174          //------------------------------------5110³õÊ¼»¯----------------------------------//

   \                                 In section .text, align 2, keep-with-next
    175          void Init_LCD5110()
    176          {
   \                     Init_LCD5110:
   \   00000000   0xB580             PUSH     {R7,LR}
    177              // ²úÉúÒ»¸öÈÃLCD¸´Î»µÄµÍµçÆ½Âö³å
    178              RES(0);       // BCLR(6,GPIOC_PDOR);         //LCD_RST = 0;
   \   00000002   0x2200             MOVS     R2,#+0
   \   00000004   0x2106             MOVS     R1,#+6
   \   00000006   0x2002             MOVS     R0,#+2
   \   00000008   0x.... 0x....      BL       gpio_set
    179              DelayMs(280);    //7us
   \   0000000C   0xF44F 0x708C      MOV      R0,#+280
   \   00000010   0x.... 0x....      BL       DelayMs
    180              RES(1);             // BSET(6,GPIOC_PDOR);         //LCD_RST = 1;
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0x2106             MOVS     R1,#+6
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0x.... 0x....      BL       gpio_set
    181          
    182              SCE(0);              // BCLR(0,GPIOD_PDOR);      //LCD_CE = 0;
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x2107             MOVS     R1,#+7
   \   00000022   0x2002             MOVS     R0,#+2
   \   00000024   0x.... 0x....      BL       gpio_set
    183              DelayMs(280);    //7us
   \   00000028   0xF44F 0x708C      MOV      R0,#+280
   \   0000002C   0x.... 0x....      BL       DelayMs
    184          
    185              SCE(1);   //BSET(0,GPIOD_PDOR);   //LCD_CE = 1;
   \   00000030   0x2201             MOVS     R2,#+1
   \   00000032   0x2107             MOVS     R1,#+7
   \   00000034   0x2002             MOVS     R0,#+2
   \   00000036   0x.... 0x....      BL       gpio_set
    186              DelayMs(280);   //7us
   \   0000003A   0xF44F 0x708C      MOV      R0,#+280
   \   0000003E   0x.... 0x....      BL       DelayMs
    187          
    188              LCD_write_byte(0x21, 0);	// Ê¹ÓÃÀ©Õ¹ÃüÁîÉèÖÃLCDÄ£Ê½
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x2021             MOVS     R0,#+33
   \   00000046   0x.... 0x....      BL       LCD_write_byte
    189              LCD_write_byte(0xc2, 0);	// ÉèÖÃÆ«ÖÃµçÑ¹
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x20C2             MOVS     R0,#+194
   \   0000004E   0x.... 0x....      BL       LCD_write_byte
    190              LCD_write_byte(0x06, 0);	// ÎÂ¶ÈÐ£Õý
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x2006             MOVS     R0,#+6
   \   00000056   0x.... 0x....      BL       LCD_write_byte
    191              LCD_write_byte(0x13, 0);	// 1:48
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x2013             MOVS     R0,#+19
   \   0000005E   0x.... 0x....      BL       LCD_write_byte
    192              LCD_write_byte(0x20, 0);	// Ê¹ÓÃ»ù±¾ÃüÁî
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x2020             MOVS     R0,#+32
   \   00000066   0x.... 0x....      BL       LCD_write_byte
    193              LCD_clear();	        // ÇåÆÁ
   \   0000006A   0x.... 0x....      BL       LCD_clear
    194              LCD_write_byte(0x0c, 0);	// Éè¶¨ÏÔÊ¾Ä£Ê½£¬Õý³£ÏÔÊ¾
   \   0000006E   0x2100             MOVS     R1,#+0
   \   00000070   0x200C             MOVS     R0,#+12
   \   00000072   0x.... 0x....      BL       LCD_write_byte
    195          
    196              SCE(0);        // BCLR(0,GPIOD_PDOR);          //LCD_CE = 0;
   \   00000076   0x2200             MOVS     R2,#+0
   \   00000078   0x2107             MOVS     R1,#+7
   \   0000007A   0x2002             MOVS     R0,#+2
   \   0000007C   0x.... 0x....      BL       gpio_set
    197          }
   \   00000080   0xBD01             POP      {R0,PC}          ;; return
    198          //------------------------------------LCD³õÊ¼»¯----------------------------------//

   \                                 In section .text, align 2, keep-with-next
    199          void Init_LCD(void) 
    200          {
   \                     Init_LCD:
   \   00000000   0xB580             PUSH     {R7,LR}
    201          
    202            Init_port();
   \   00000002   0x.... 0x....      BL       Init_port
    203            
    204            Init_LCD5110(); 
   \   00000006   0x.... 0x....      BL       Init_LCD5110
    205            
    206          }
   \   0000000A   0xBD01             POP      {R0,PC}          ;; return
    207          /*********************************************************/
    208          /*               Ð´8*16×Ö·ûº¯Êý                          */
    209          /*********************************************************/

   \                                 In section .text, align 2, keep-with-next
    210          void write_8_16_char(unsigned char x,unsigned char y,unsigned char data)     //XÎªÁÐ£¬YÎªÐÐ
    211          {
   \                     write_8_16_char:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000E             MOVS     R6,R1
   \   00000006   0x0014             MOVS     R4,R2
    212            unsigned char i;    
    213            data=data-32;
   \   00000008   0x3C20             SUBS     R4,R4,#+32
    214            x=x<<3;
   \   0000000A   0x00ED             LSLS     R5,R5,#+3
    215            y=y<<1;
   \   0000000C   0x0076             LSLS     R6,R6,#+1
    216            LCD_set_XY(x, y) ;
   \   0000000E   0x0031             MOVS     R1,R6
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       LCD_set_XY
    217            
    218            for(i=0;i<8;i++)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x0007             MOVS     R7,R0
   \                     ??write_8_16_char_0:
   \   0000001E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000020   0x2F08             CMP      R7,#+8
   \   00000022   0xD20B             BCS.N    ??write_8_16_char_1
    219             {    
    220              LCD_write_byte(fontCode8_16[data][i],1);
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   0000002E   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   00000032   0x5C38             LDRB     R0,[R7, R0]
   \   00000034   0x.... 0x....      BL       LCD_write_byte
    221             }
   \   00000038   0x1C7F             ADDS     R7,R7,#+1
   \   0000003A   0xE7F0             B.N      ??write_8_16_char_0
    222             
    223            LCD_set_XY(x, y+1) ;
   \                     ??write_8_16_char_1:
   \   0000003C   0x1C71             ADDS     R1,R6,#+1
   \   0000003E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000040   0x0028             MOVS     R0,R5
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x.... 0x....      BL       LCD_set_XY
    224            
    225            for(i=8;i<16;i++)
   \   00000048   0x2008             MOVS     R0,#+8
   \   0000004A   0x0007             MOVS     R7,R0
   \                     ??write_8_16_char_2:
   \   0000004C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000004E   0x2F10             CMP      R7,#+16
   \   00000050   0xD20B             BCS.N    ??write_8_16_char_3
    226             {    
    227              LCD_write_byte(fontCode8_16[data][i],1);
   \   00000052   0x2101             MOVS     R1,#+1
   \   00000054   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000056   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable9_1
   \   0000005C   0xEB10 0x1004      ADDS     R0,R0,R4, LSL #+4
   \   00000060   0x5C38             LDRB     R0,[R7, R0]
   \   00000062   0x.... 0x....      BL       LCD_write_byte
    228             }        
   \   00000066   0x1C7F             ADDS     R7,R7,#+1
   \   00000068   0xE7F0             B.N      ??write_8_16_char_2
    229              
    230          }
   \                     ??write_8_16_char_3:
   \   0000006A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    231          
    232          /*********************************************************/
    233          /*               Ð´8*16×Ö·û´®º¯Êý                          */
    234          /*********************************************************/

   \                                 In section .text, align 2, keep-with-next
    235          void write_8_16_string(unsigned char x,unsigned char y,unsigned char * data)
    236          {
   \                     write_8_16_string:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0014             MOVS     R4,R2
    237            unsigned char i;    
    238            x=x<<3;
   \   00000008   0x00F6             LSLS     R6,R6,#+3
    239            y=y<<1;
   \   0000000A   0x007F             LSLS     R7,R7,#+1
    240            while(*data!='\0')
   \                     ??write_8_16_string_0:
   \   0000000C   0x7820             LDRB     R0,[R4, #+0]
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD036             BEQ.N    ??write_8_16_string_1
    241            {
    242              LCD_set_XY(x, y);
   \   00000012   0x0039             MOVS     R1,R7
   \   00000014   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000016   0x0030             MOVS     R0,R6
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       LCD_set_XY
    243               for(i=0;i<8;i++)
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x0005             MOVS     R5,R0
   \                     ??write_8_16_string_2:
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D08             CMP      R5,#+8
   \   00000026   0xD20E             BCS.N    ??write_8_16_string_3
    244               {    
    245                LCD_write_byte(fontCode8_16[*data-32][i],1);
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002C   0x7820             LDRB     R0,[R4, #+0]
   \   0000002E   0x.... 0x....      LDR.W    R2,??DataTable9_1
   \   00000032   0xEB12 0x1000      ADDS     R0,R2,R0, LSL #+4
   \   00000036   0x1828             ADDS     R0,R5,R0
   \   00000038   0xF5B0 0x7000      SUBS     R0,R0,#+512
   \   0000003C   0x7800             LDRB     R0,[R0, #+0]
   \   0000003E   0x.... 0x....      BL       LCD_write_byte
    246               }
   \   00000042   0x1C6D             ADDS     R5,R5,#+1
   \   00000044   0xE7ED             B.N      ??write_8_16_string_2
    247               LCD_set_XY(x, y+1) ;
   \                     ??write_8_16_string_3:
   \   00000046   0x1C79             ADDS     R1,R7,#+1
   \   00000048   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004A   0x0030             MOVS     R0,R6
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x.... 0x....      BL       LCD_set_XY
    248               for(i=8;i<16;i++)
   \   00000052   0x2008             MOVS     R0,#+8
   \   00000054   0x0005             MOVS     R5,R0
   \                     ??write_8_16_string_4:
   \   00000056   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000058   0x2D10             CMP      R5,#+16
   \   0000005A   0xD20E             BCS.N    ??write_8_16_string_5
    249               {    
    250                LCD_write_byte(fontCode8_16[*data-32][i],1);
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000060   0x7820             LDRB     R0,[R4, #+0]
   \   00000062   0x.... 0x....      LDR.W    R2,??DataTable9_1
   \   00000066   0xEB12 0x1000      ADDS     R0,R2,R0, LSL #+4
   \   0000006A   0x1828             ADDS     R0,R5,R0
   \   0000006C   0xF5B0 0x7000      SUBS     R0,R0,#+512
   \   00000070   0x7800             LDRB     R0,[R0, #+0]
   \   00000072   0x.... 0x....      BL       LCD_write_byte
    251               } 
   \   00000076   0x1C6D             ADDS     R5,R5,#+1
   \   00000078   0xE7ED             B.N      ??write_8_16_string_4
    252               x=x+8;
   \                     ??write_8_16_string_5:
   \   0000007A   0x3608             ADDS     R6,R6,#+8
    253               data++;      
   \   0000007C   0x1C64             ADDS     R4,R4,#+1
   \   0000007E   0xE7C5             B.N      ??write_8_16_string_0
    254             } 
    255          }
   \                     ??write_8_16_string_1:
   \   00000080   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    256          /******************************************************************
    257                            Ð´6*8×Ö·ûº¯Êý
    258          ******************************************************************/

   \                                 In section .text, align 2, keep-with-next
    259          void write_6_8_char(unsigned char x,unsigned char y,unsigned char data)
    260          {
   \                     write_6_8_char:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0007             MOVS     R7,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0016             MOVS     R6,R2
    261            unsigned char i;    
    262            data=data-32;
   \   00000008   0x3E20             SUBS     R6,R6,#+32
    263            x=x*6;
   \   0000000A   0x2006             MOVS     R0,#+6
   \   0000000C   0x4347             MULS     R7,R0,R7
    264            LCD_set_XY(x, y) ;
   \   0000000E   0x0021             MOVS     R1,R4
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x0038             MOVS     R0,R7
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       LCD_set_XY
    265             for(i=0;i<6;i++)
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x0005             MOVS     R5,R0
   \                     ??write_6_8_char_0:
   \   0000001E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000020   0x2D06             CMP      R5,#+6
   \   00000022   0xD20C             BCS.N    ??write_6_8_char_1
    266             {    
    267              LCD_write_byte(fontCode6_8[data][i],1);
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x2006             MOVS     R0,#+6
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable10
   \   00000030   0xFB00 0x2006      MLA      R0,R0,R6,R2
   \   00000034   0x5C28             LDRB     R0,[R5, R0]
   \   00000036   0x.... 0x....      BL       LCD_write_byte
    268             }
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \   0000003C   0xE7EF             B.N      ??write_6_8_char_0
    269          }
   \                     ??write_6_8_char_1:
   \   0000003E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    270          /****************************************************************
    271                             Ð´6*8×Ö·û´®º¯Êý
    272          ****************************************************************/

   \                                 In section .text, align 2, keep-with-next
    273          void write_6_8_string(unsigned char x,unsigned char y,unsigned char * data)
    274          {
   \                     write_6_8_string:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0007             MOVS     R7,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0015             MOVS     R5,R2
    275            unsigned char i;
    276            x=x*6;
   \   00000008   0x2006             MOVS     R0,#+6
   \   0000000A   0x4347             MULS     R7,R0,R7
    277            LCD_set_XY(x, y) ;
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x0038             MOVS     R0,R7
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       LCD_set_XY
    278            while(*data !='\0')
   \                     ??write_6_8_string_0:
   \   00000018   0x7828             LDRB     R0,[R5, #+0]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD015             BEQ.N    ??write_6_8_string_1
    279            {
    280             for(i=0;i<6;i++)
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x0006             MOVS     R6,R0
   \                     ??write_6_8_string_2:
   \   00000022   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000024   0x2E06             CMP      R6,#+6
   \   00000026   0xD20E             BCS.N    ??write_6_8_string_3
    281             {    
    282              LCD_write_byte(fontCode6_8[*data-32][i],1);
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002C   0x7828             LDRB     R0,[R5, #+0]
   \   0000002E   0x2206             MOVS     R2,#+6
   \   00000030   0x.... 0x....      LDR.W    R3,??DataTable10
   \   00000034   0xFB02 0x3000      MLA      R0,R2,R0,R3
   \   00000038   0x1830             ADDS     R0,R6,R0
   \   0000003A   0xF810 0x0CC0      LDRB     R0,[R0, #-192]
   \   0000003E   0x.... 0x....      BL       LCD_write_byte
    283             } 
   \   00000042   0x1C76             ADDS     R6,R6,#+1
   \   00000044   0xE7ED             B.N      ??write_6_8_string_2
    284             data++;
   \                     ??write_6_8_string_3:
   \   00000046   0x1C6D             ADDS     R5,R5,#+1
   \   00000048   0xE7E6             B.N      ??write_6_8_string_0
    285            }
    286          }
   \                     ??write_6_8_string_1:
   \   0000004A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    287          
    288          /****************************************************************
    289                             Ð´6*8µãÕóÊý×Öº¯Êý
    290          ****************************************************************/

   \                                 In section .text, align 2, keep-with-next
    291          void write_6_8_number(unsigned char x,unsigned char y, float number)
    292          {
   \                     write_6_8_number:
   \   00000000   0xE92D 0x47FF      PUSH     {R0-R10,LR}
   \   00000004   0x4680             MOV      R8,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x4691             MOV      R9,R2
    293            unsigned char i=0;
   \   0000000A   0x2500             MOVS     R5,#+0
    294            unsigned char temp[16];
    295            unsigned char *point=temp;
   \   0000000C   0xAE00             ADD      R6,SP,#+0
    296            float decimal;
    297            int data;
    298            
    299            if(number<0)
   \   0000000E   0x4648             MOV      R0,R9
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000016   0xD20E             BCS.N    ??write_6_8_number_0
    300              {
    301               temp[0]='-';
   \   00000018   0x202D             MOVS     R0,#+45
   \   0000001A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    302               write_6_8_char(x,y,temp[0]);
   \   0000001E   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000022   0x0021             MOVS     R1,R4
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x4640             MOV      R0,R8
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       write_6_8_char
    303               x+=1;
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
    304               number=-number; 
   \   00000032   0xF099 0x4900      EORS     R9,R9,#0x80000000
    305              }
    306              
    307            data=(int)number;
   \                     ??write_6_8_number_0:
   \   00000036   0x4648             MOV      R0,R9
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003C   0x4682             MOV      R10,R0
    308            decimal=number-data;     //µÃµ½Ð¡Êý²¿·Ö
   \   0000003E   0x4650             MOV      R0,R10
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x4648             MOV      R0,R9
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
   \   0000004C   0x0007             MOVS     R7,R0
    309            
    310             
    311            if(data>=1000)           //ÊÇ·ñ¿É±»1000Õû³ý
   \   0000004E   0xF44F 0x707A      MOV      R0,#+1000
   \   00000052   0x4582             CMP      R10,R0
   \   00000054   0xDB0E             BLT.N    ??write_6_8_number_1
    312              {
    313               temp[i]=48+data/1000;
   \   00000056   0xF44F 0x707A      MOV      R0,#+1000
   \   0000005A   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   0000005E   0x3030             ADDS     R0,R0,#+48
   \   00000060   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000062   0xA900             ADD      R1,SP,#+0
   \   00000064   0x5468             STRB     R0,[R5, R1]
    314               data=data%1000;
   \   00000066   0xF44F 0x707A      MOV      R0,#+1000
   \   0000006A   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   0000006E   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    315               i++;
   \   00000072   0x1C6D             ADDS     R5,R5,#+1
    316              }
    317          
    318             
    319            if(data>=100)              //ÊÇ·ñ¿É±»100Õû³ý
   \                     ??write_6_8_number_1:
   \   00000074   0xF1BA 0x0F64      CMP      R10,#+100
   \   00000078   0xDB0D             BLT.N    ??write_6_8_number_2
    320             {
    321              temp[i]=48+data/100;
   \   0000007A   0x2064             MOVS     R0,#+100
   \   0000007C   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   00000080   0x3030             ADDS     R0,R0,#+48
   \   00000082   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000084   0xA900             ADD      R1,SP,#+0
   \   00000086   0x5468             STRB     R0,[R5, R1]
    322              data=data%100;
   \   00000088   0x2064             MOVS     R0,#+100
   \   0000008A   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   0000008E   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    323              i++;
   \   00000092   0x1C6D             ADDS     R5,R5,#+1
   \   00000094   0xE00A             B.N      ??write_6_8_number_3
    324             }
    325            else 
    326              if(data<100&&i!=0)
   \                     ??write_6_8_number_2:
   \   00000096   0xF1BA 0x0F64      CMP      R10,#+100
   \   0000009A   0xDA07             BGE.N    ??write_6_8_number_3
   \   0000009C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000009E   0x2D00             CMP      R5,#+0
   \   000000A0   0xD004             BEQ.N    ??write_6_8_number_3
    327               {
    328               temp[i]=0+48;
   \   000000A2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A4   0xA800             ADD      R0,SP,#+0
   \   000000A6   0x2130             MOVS     R1,#+48
   \   000000A8   0x5429             STRB     R1,[R5, R0]
    329               i++;
   \   000000AA   0x1C6D             ADDS     R5,R5,#+1
    330               }
    331             
    332            if(data>=10)                  //ÊÇ·ñ¿É±»10Õû³ý
   \                     ??write_6_8_number_3:
   \   000000AC   0xF1BA 0x0F0A      CMP      R10,#+10
   \   000000B0   0xDB0D             BLT.N    ??write_6_8_number_4
    333              {
    334               temp[i]=48+data/10;
   \   000000B2   0x200A             MOVS     R0,#+10
   \   000000B4   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   000000B8   0x3030             ADDS     R0,R0,#+48
   \   000000BA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000BC   0xA900             ADD      R1,SP,#+0
   \   000000BE   0x5468             STRB     R0,[R5, R1]
    335               data=data%10;
   \   000000C0   0x200A             MOVS     R0,#+10
   \   000000C2   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   000000C6   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    336               i++;
   \   000000CA   0x1C6D             ADDS     R5,R5,#+1
   \   000000CC   0xE00A             B.N      ??write_6_8_number_5
    337              }
    338            else 
    339              if(data<10&&i!=0)
   \                     ??write_6_8_number_4:
   \   000000CE   0xF1BA 0x0F0A      CMP      R10,#+10
   \   000000D2   0xDA07             BGE.N    ??write_6_8_number_5
   \   000000D4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D6   0x2D00             CMP      R5,#+0
   \   000000D8   0xD004             BEQ.N    ??write_6_8_number_5
    340               {
    341               temp[i]=48;
   \   000000DA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000DC   0xA800             ADD      R0,SP,#+0
   \   000000DE   0x2130             MOVS     R1,#+48
   \   000000E0   0x5429             STRB     R1,[R5, R0]
    342               i++;
   \   000000E2   0x1C6D             ADDS     R5,R5,#+1
    343               }
    344               
    345            temp[i]=48+data;
   \                     ??write_6_8_number_5:
   \   000000E4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000E6   0xA800             ADD      R0,SP,#+0
   \   000000E8   0xF11A 0x0130      ADDS     R1,R10,#+48
   \   000000EC   0x5429             STRB     R1,[R5, R0]
    346             
    347                
    348            if(decimal>=0.0001)           //ÅÐ¶ÏÊÇ·ñÎªÐ¡Êý
   \   000000EE   0x0038             MOVS     R0,R7
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x38d1b718
   \   000000F4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000F8   0xD832             BHI.N    ??write_6_8_number_6
    349             {
    350              i++;
   \   000000FA   0x1C6D             ADDS     R5,R5,#+1
    351              temp[i]='.';                //¼ÓÐ¡Êýµã
   \   000000FC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000FE   0xA800             ADD      R0,SP,#+0
   \   00000100   0x212E             MOVS     R1,#+46
   \   00000102   0x5429             STRB     R1,[R5, R0]
    352              i++;
   \   00000104   0x1C6D             ADDS     R5,R5,#+1
    353              
    354              data=(int)(decimal*1000);
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x447a0000
   \   0000010A   0x0039             MOVS     R1,R7
   \   0000010C   0x.... 0x....      BL       __aeabi_fmul
   \   00000110   0x.... 0x....      BL       __aeabi_f2iz
   \   00000114   0x4682             MOV      R10,R0
    355             
    356              temp[i]=48+data/100;
   \   00000116   0x2064             MOVS     R0,#+100
   \   00000118   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   0000011C   0x3030             ADDS     R0,R0,#+48
   \   0000011E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000120   0xA900             ADD      R1,SP,#+0
   \   00000122   0x5468             STRB     R0,[R5, R1]
    357              
    358              data=data%100;
   \   00000124   0x2064             MOVS     R0,#+100
   \   00000126   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   0000012A   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    359              i++;
   \   0000012E   0x1C6D             ADDS     R5,R5,#+1
    360             
    361              if(data>0)
   \   00000130   0xF1BA 0x0F01      CMP      R10,#+1
   \   00000134   0xDB0B             BLT.N    ??write_6_8_number_7
    362                {
    363                 temp[i]=48+data/10;
   \   00000136   0x200A             MOVS     R0,#+10
   \   00000138   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   0000013C   0x3030             ADDS     R0,R0,#+48
   \   0000013E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000140   0xA900             ADD      R1,SP,#+0
   \   00000142   0x5468             STRB     R0,[R5, R1]
    364                 data=data%10;
   \   00000144   0x200A             MOVS     R0,#+10
   \   00000146   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   0000014A   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    365                 
    366                 
    367                }
    368              if(data>=0)
   \                     ??write_6_8_number_7:
   \   0000014E   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000152   0xD405             BMI.N    ??write_6_8_number_6
    369                {
    370                 i++;
   \   00000154   0x1C6D             ADDS     R5,R5,#+1
    371                 temp[i]=data+48; 
   \   00000156   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000158   0xA800             ADD      R0,SP,#+0
   \   0000015A   0xF11A 0x0130      ADDS     R1,R10,#+48
   \   0000015E   0x5429             STRB     R1,[R5, R0]
    372                }
    373              
    374             }     
    375          
    376            i++;
   \                     ??write_6_8_number_6:
   \   00000160   0x1C6D             ADDS     R5,R5,#+1
    377            temp[i]='\0';
   \   00000162   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000164   0xA800             ADD      R0,SP,#+0
   \   00000166   0x2100             MOVS     R1,#+0
   \   00000168   0x5429             STRB     R1,[R5, R0]
    378              write_6_8_string(x,y,point); 
   \   0000016A   0x0032             MOVS     R2,R6
   \   0000016C   0x0021             MOVS     R1,R4
   \   0000016E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000170   0x4640             MOV      R0,R8
   \   00000172   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000174   0x.... 0x....      BL       write_6_8_string
    379            
    380          }
   \   00000178   0xE8BD 0x87FF      POP      {R0-R10,PC}      ;; return
    381          /****************************************************************
    382                             Ð´8*16µãÕóÊý×Öº¯Êý
    383          ****************************************************************/

   \                                 In section .text, align 2, keep-with-next
    384          void write_8_16_number(unsigned char x,unsigned char y, float number)
    385          {
   \                     write_8_16_number:
   \   00000000   0xE92D 0x47FF      PUSH     {R0-R10,LR}
   \   00000004   0x4680             MOV      R8,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x4691             MOV      R9,R2
    386            unsigned char i=0;
   \   0000000A   0x2500             MOVS     R5,#+0
    387            unsigned char temp[16];
    388            unsigned char *point=temp;
   \   0000000C   0xAE00             ADD      R6,SP,#+0
    389            float decimal;
    390            int data;
    391            
    392            if(number<0)
   \   0000000E   0x4648             MOV      R0,R9
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000016   0xD20E             BCS.N    ??write_8_16_number_0
    393              {
    394               temp[0]='-';
   \   00000018   0x202D             MOVS     R0,#+45
   \   0000001A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    395               write_8_16_char(x,y,temp[0]);
   \   0000001E   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000022   0x0021             MOVS     R1,R4
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x4640             MOV      R0,R8
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       write_8_16_char
    396               x+=1;
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
    397               number=-number; 
   \   00000032   0xF099 0x4900      EORS     R9,R9,#0x80000000
    398              }
    399              
    400            data=(int)number;
   \                     ??write_8_16_number_0:
   \   00000036   0x4648             MOV      R0,R9
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003C   0x4682             MOV      R10,R0
    401            decimal=number-data;     //µÃµ½Ð¡Êý²¿·Ö
   \   0000003E   0x4650             MOV      R0,R10
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x4648             MOV      R0,R9
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
   \   0000004C   0x0007             MOVS     R7,R0
    402            
    403             
    404            if(data>=1000)           //ÊÇ·ñ¿É±»1000Õû³ý
   \   0000004E   0xF44F 0x707A      MOV      R0,#+1000
   \   00000052   0x4582             CMP      R10,R0
   \   00000054   0xDB0E             BLT.N    ??write_8_16_number_1
    405              {
    406               temp[i]=48+data/1000;
   \   00000056   0xF44F 0x707A      MOV      R0,#+1000
   \   0000005A   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   0000005E   0x3030             ADDS     R0,R0,#+48
   \   00000060   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000062   0xA900             ADD      R1,SP,#+0
   \   00000064   0x5468             STRB     R0,[R5, R1]
    407               data=data%1000;
   \   00000066   0xF44F 0x707A      MOV      R0,#+1000
   \   0000006A   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   0000006E   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    408               i++;
   \   00000072   0x1C6D             ADDS     R5,R5,#+1
    409              }
    410          
    411             
    412            if(data>=100)              //ÊÇ·ñ¿É±»100Õû³ý
   \                     ??write_8_16_number_1:
   \   00000074   0xF1BA 0x0F64      CMP      R10,#+100
   \   00000078   0xDB0D             BLT.N    ??write_8_16_number_2
    413             {
    414              temp[i]=48+data/100;
   \   0000007A   0x2064             MOVS     R0,#+100
   \   0000007C   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   00000080   0x3030             ADDS     R0,R0,#+48
   \   00000082   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000084   0xA900             ADD      R1,SP,#+0
   \   00000086   0x5468             STRB     R0,[R5, R1]
    415              data=data%100;
   \   00000088   0x2064             MOVS     R0,#+100
   \   0000008A   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   0000008E   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    416              i++;
   \   00000092   0x1C6D             ADDS     R5,R5,#+1
   \   00000094   0xE00A             B.N      ??write_8_16_number_3
    417             }
    418            else 
    419              if(data<100&&i!=0)
   \                     ??write_8_16_number_2:
   \   00000096   0xF1BA 0x0F64      CMP      R10,#+100
   \   0000009A   0xDA07             BGE.N    ??write_8_16_number_3
   \   0000009C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000009E   0x2D00             CMP      R5,#+0
   \   000000A0   0xD004             BEQ.N    ??write_8_16_number_3
    420               {
    421               temp[i]=0+48;
   \   000000A2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A4   0xA800             ADD      R0,SP,#+0
   \   000000A6   0x2130             MOVS     R1,#+48
   \   000000A8   0x5429             STRB     R1,[R5, R0]
    422               i++;
   \   000000AA   0x1C6D             ADDS     R5,R5,#+1
    423               }
    424             
    425            if(data>=10)                  //ÊÇ·ñ¿É±»10Õû³ý
   \                     ??write_8_16_number_3:
   \   000000AC   0xF1BA 0x0F0A      CMP      R10,#+10
   \   000000B0   0xDB0D             BLT.N    ??write_8_16_number_4
    426              {
    427               temp[i]=48+data/10;
   \   000000B2   0x200A             MOVS     R0,#+10
   \   000000B4   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   000000B8   0x3030             ADDS     R0,R0,#+48
   \   000000BA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000BC   0xA900             ADD      R1,SP,#+0
   \   000000BE   0x5468             STRB     R0,[R5, R1]
    428               data=data%10;
   \   000000C0   0x200A             MOVS     R0,#+10
   \   000000C2   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   000000C6   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    429               i++;
   \   000000CA   0x1C6D             ADDS     R5,R5,#+1
   \   000000CC   0xE00A             B.N      ??write_8_16_number_5
    430              }
    431            else 
    432              if(data<10&&i!=0)
   \                     ??write_8_16_number_4:
   \   000000CE   0xF1BA 0x0F0A      CMP      R10,#+10
   \   000000D2   0xDA07             BGE.N    ??write_8_16_number_5
   \   000000D4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D6   0x2D00             CMP      R5,#+0
   \   000000D8   0xD004             BEQ.N    ??write_8_16_number_5
    433               {
    434               temp[i]=48;
   \   000000DA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000DC   0xA800             ADD      R0,SP,#+0
   \   000000DE   0x2130             MOVS     R1,#+48
   \   000000E0   0x5429             STRB     R1,[R5, R0]
    435               i++;
   \   000000E2   0x1C6D             ADDS     R5,R5,#+1
    436               }
    437               
    438            temp[i]=48+data;
   \                     ??write_8_16_number_5:
   \   000000E4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000E6   0xA800             ADD      R0,SP,#+0
   \   000000E8   0xF11A 0x0130      ADDS     R1,R10,#+48
   \   000000EC   0x5429             STRB     R1,[R5, R0]
    439             
    440                
    441            if(decimal>=0.0001)           //ÅÐ¶ÏÊÇ·ñÎªÐ¡Êý
   \   000000EE   0x0038             MOVS     R0,R7
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x38d1b718
   \   000000F4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000F8   0xD832             BHI.N    ??write_8_16_number_6
    442             {
    443              i++;
   \   000000FA   0x1C6D             ADDS     R5,R5,#+1
    444              temp[i]='.';                //¼ÓÐ¡Êýµã
   \   000000FC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000FE   0xA800             ADD      R0,SP,#+0
   \   00000100   0x212E             MOVS     R1,#+46
   \   00000102   0x5429             STRB     R1,[R5, R0]
    445              i++;
   \   00000104   0x1C6D             ADDS     R5,R5,#+1
    446              
    447              data=(int)(decimal*1000);
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x447a0000
   \   0000010A   0x0039             MOVS     R1,R7
   \   0000010C   0x.... 0x....      BL       __aeabi_fmul
   \   00000110   0x.... 0x....      BL       __aeabi_f2iz
   \   00000114   0x4682             MOV      R10,R0
    448             
    449              temp[i]=48+data/100;
   \   00000116   0x2064             MOVS     R0,#+100
   \   00000118   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   0000011C   0x3030             ADDS     R0,R0,#+48
   \   0000011E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000120   0xA900             ADD      R1,SP,#+0
   \   00000122   0x5468             STRB     R0,[R5, R1]
    450              
    451              data=data%100;
   \   00000124   0x2064             MOVS     R0,#+100
   \   00000126   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   0000012A   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    452              i++;
   \   0000012E   0x1C6D             ADDS     R5,R5,#+1
    453             
    454              if(data>0)
   \   00000130   0xF1BA 0x0F01      CMP      R10,#+1
   \   00000134   0xDB0B             BLT.N    ??write_8_16_number_7
    455                {
    456                 temp[i]=48+data/10;
   \   00000136   0x200A             MOVS     R0,#+10
   \   00000138   0xFB9A 0xF0F0      SDIV     R0,R10,R0
   \   0000013C   0x3030             ADDS     R0,R0,#+48
   \   0000013E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000140   0xA900             ADD      R1,SP,#+0
   \   00000142   0x5468             STRB     R0,[R5, R1]
    457                 data=data%10;
   \   00000144   0x200A             MOVS     R0,#+10
   \   00000146   0xFB9A 0xF1F0      SDIV     R1,R10,R0
   \   0000014A   0xFB00 0xAA11      MLS      R10,R0,R1,R10
    458                 
    459                 
    460                }
    461              if(data>=0)
   \                     ??write_8_16_number_7:
   \   0000014E   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000152   0xD405             BMI.N    ??write_8_16_number_6
    462                {
    463                 i++;
   \   00000154   0x1C6D             ADDS     R5,R5,#+1
    464                 temp[i]=data+48; 
   \   00000156   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000158   0xA800             ADD      R0,SP,#+0
   \   0000015A   0xF11A 0x0130      ADDS     R1,R10,#+48
   \   0000015E   0x5429             STRB     R1,[R5, R0]
    465                }
    466              
    467             }     
    468          
    469            i++;
   \                     ??write_8_16_number_6:
   \   00000160   0x1C6D             ADDS     R5,R5,#+1
    470            temp[i]='\0';
   \   00000162   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000164   0xA800             ADD      R0,SP,#+0
   \   00000166   0x2100             MOVS     R1,#+0
   \   00000168   0x5429             STRB     R1,[R5, R0]
    471              write_8_16_string(x,y,point); 
   \   0000016A   0x0032             MOVS     R2,R6
   \   0000016C   0x0021             MOVS     R1,R4
   \   0000016E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000170   0x4640             MOV      R0,R8
   \   00000172   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000174   0x.... 0x....      BL       write_8_16_string
    472            
    473          }
   \   00000178   0xE8BD 0x87FF      POP      {R0-R10,PC}      ;; return
    474          /****************************************************************
    475                             Ð´12*16ÖÐÎÄº¯Êý
    476          ****************************************************************/

   \                                 In section .text, align 2, keep-with-next
    477          void write_chinese_char(unsigned char x,unsigned char y,unsigned char data_code)
    478          {
   \                     write_chinese_char:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000F             MOVS     R7,R1
   \   00000006   0x0014             MOVS     R4,R2
    479          	unsigned char i;  	
    480          	x=x*12;
   \   00000008   0x200C             MOVS     R0,#+12
   \   0000000A   0x4346             MULS     R6,R0,R6
    481            y=y<<1;
   \   0000000C   0x007F             LSLS     R7,R7,#+1
    482          	LCD_set_XY(x, y);// ÁÐ£¬Ò³ 
   \   0000000E   0x0039             MOVS     R1,R7
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0x0030             MOVS     R0,R6
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       LCD_set_XY
    483          	for(i=0; i<12;i++) 
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x0005             MOVS     R5,R0
   \                     ??write_chinese_char_0:
   \   0000001E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000020   0x2D0C             CMP      R5,#+12
   \   00000022   0xD20C             BCS.N    ??write_chinese_char_1
    484          	{
    485          		LCD_write_byte(chinese[data_code][i],1); 
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x2018             MOVS     R0,#+24
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable11
   \   00000030   0xFB00 0x2004      MLA      R0,R0,R4,R2
   \   00000034   0x5C28             LDRB     R0,[R5, R0]
   \   00000036   0x.... 0x....      BL       LCD_write_byte
    486          	}
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \   0000003C   0xE7EF             B.N      ??write_chinese_char_0
    487          	
    488            LCD_set_XY(x, y+1);// ÁÐ£¬Ò³ 
   \                     ??write_chinese_char_1:
   \   0000003E   0x1C79             ADDS     R1,R7,#+1
   \   00000040   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000042   0x0030             MOVS     R0,R6
   \   00000044   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000046   0x.... 0x....      BL       LCD_set_XY
    489          	for(i=12; i<24;i++) 
   \   0000004A   0x200C             MOVS     R0,#+12
   \   0000004C   0x0005             MOVS     R5,R0
   \                     ??write_chinese_char_2:
   \   0000004E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000050   0x2D18             CMP      R5,#+24
   \   00000052   0xD20C             BCS.N    ??write_chinese_char_3
    490          	{
    491          		LCD_write_byte(chinese[data_code][i],1);
   \   00000054   0x2101             MOVS     R1,#+1
   \   00000056   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000058   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005A   0x2018             MOVS     R0,#+24
   \   0000005C   0x.... 0x....      LDR.W    R2,??DataTable11
   \   00000060   0xFB00 0x2004      MLA      R0,R0,R4,R2
   \   00000064   0x5C28             LDRB     R0,[R5, R0]
   \   00000066   0x.... 0x....      BL       LCD_write_byte
    492          	}	
   \   0000006A   0x1C6D             ADDS     R5,R5,#+1
   \   0000006C   0xE7EF             B.N      ??write_chinese_char_2
    493          }
   \                     ??write_chinese_char_3:
   \   0000006E   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    494          
    495          
    496          /****************************************************************************
    497          LCD_draw_bmp     : Î»Í¼»æÖÆº¯Êý
    498          
    499          ÊäÈë²ÎÊý£ºX¡¢Y    £ºÎ»Í¼»æÖÆµÄÆðÊ¼X¡¢Y×ø±ê£»
    500                    *map    £ºÎ»Í¼µãÕóÊý¾Ý£»
    501                    Pix_x   £ºÎ»Í¼ÏñËØ£¨³¤£©
    502                    Pix_y   £ºÎ»Í¼ÏñËØ£¨¿í£©
    503          
    504          *******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    505          void LCD_draw_bmp(unsigned char x,unsigned char y,unsigned char *map,
    506                            unsigned char Pix_x,unsigned char Pix_y)
    507            {
   \                     LCD_draw_bmp:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C0A             LDR      R4,[SP, #+40]
    508              unsigned int i,n;
    509              unsigned char row;
    510              
    511              if (Pix_y%8==0) row=Pix_y/8;      //¼ÆËãÎ»Í¼ËùÕ¼ÐÐÊý
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2008             MOVS     R0,#+8
   \   00000012   0xFB94 0xF1F0      SDIV     R1,R4,R0
   \   00000016   0xFB01 0x4110      MLS      R1,R1,R0,R4
   \   0000001A   0x2900             CMP      R1,#+0
   \   0000001C   0xD105             BNE.N    ??LCD_draw_bmp_0
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2008             MOVS     R0,#+8
   \   00000022   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000026   0x4683             MOV      R11,R0
   \   00000028   0xE005             B.N      ??LCD_draw_bmp_1
    512                else
    513                  row=Pix_y/8+1;
   \                     ??LCD_draw_bmp_0:
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0x2008             MOVS     R0,#+8
   \   0000002E   0xFB94 0xF0F0      SDIV     R0,R4,R0
   \   00000032   0x1C40             ADDS     R0,R0,#+1
   \   00000034   0x4683             MOV      R11,R0
    514              
    515              for (n=0;n<row;n++)
   \                     ??LCD_draw_bmp_1:
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x4682             MOV      R10,R0
   \                     ??LCD_draw_bmp_2:
   \   0000003A   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   0000003E   0x45DA             CMP      R10,R11
   \   00000040   0xD21A             BCS.N    ??LCD_draw_bmp_3
    516                {
    517                	LCD_set_XY(x,y);
   \   00000042   0x0031             MOVS     R1,R6
   \   00000044   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   0x0028             MOVS     R0,R5
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       LCD_set_XY
    518                  for(i=0; i<Pix_x; i++)
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x4681             MOV      R9,R0
   \                     ??LCD_draw_bmp_4:
   \   00000052   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000056   0x45C1             CMP      R9,R8
   \   00000058   0xD20A             BCS.N    ??LCD_draw_bmp_5
    519                    {
    520                      LCD_write_byte(map[i+n*Pix_x], 1);
   \   0000005A   0x2101             MOVS     R1,#+1
   \   0000005C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000060   0xFB08 0x900A      MLA      R0,R8,R10,R9
   \   00000064   0x5DC0             LDRB     R0,[R0, R7]
   \   00000066   0x.... 0x....      BL       LCD_write_byte
    521                    }
   \   0000006A   0xF119 0x0901      ADDS     R9,R9,#+1
   \   0000006E   0xE7F0             B.N      ??LCD_draw_bmp_4
    522                  y++;                         //»»ÐÐ
   \                     ??LCD_draw_bmp_5:
   \   00000070   0x1C76             ADDS     R6,R6,#+1
    523                }      
   \   00000072   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   00000076   0xE7E0             B.N      ??LCD_draw_bmp_2
    524            }
   \                     ??LCD_draw_bmp_3:
   \   00000078   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    525          
    526          
    527          
    528          ///////////////////////////////////////////////////////////////////////////////////
    529          /***********************************Ô¤ÏÔÊ¾**********************************/

   \                                 In section .text, align 2, keep-with-next
    530          void pre_show(void)
    531          {  
   \                     pre_show:
   \   00000000   0xB510             PUSH     {R4,LR}
    532             int8 i;
    533             LCD_clear();
   \   00000002   0x.... 0x....      BL       LCD_clear
    534             switch(page_num)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD008             BEQ.N    ??pre_show_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xF000 0x8117      BEQ.W    ??pre_show_1
   \   00000016   0xF0C0 0x808E      BCC.W    ??pre_show_2
   \   0000001A   0x2803             CMP      R0,#+3
   \   0000001C   0xF000 0x8176      BEQ.W    ??pre_show_3
   \   00000020   0xE1C9             B.N      ??pre_show_4
    535               {
    536               case 0: 
    537          
    538                       
    539                      write_6_8_number(0,0,Pixel[15]); 
   \                     ??pre_show_0:
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000026   0x8BC0             LDRH     R0,[R0, #+30]
   \   00000028   0x.... 0x....      BL       __aeabi_ui2f
   \   0000002C   0x0002             MOVS     R2,R0
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       write_6_8_number
    540                      write_6_8_number(5,0,Pixel[64]); 
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000003A   0xF8B0 0x0080      LDRH     R0,[R0, #+128]
   \   0000003E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000042   0x0002             MOVS     R2,R0
   \   00000044   0x2100             MOVS     R1,#+0
   \   00000046   0x2005             MOVS     R0,#+5
   \   00000048   0x.... 0x....      BL       write_6_8_number
    541                      write_6_8_number(10,0,Pixel[120]); 
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000050   0xF8B0 0x00F0      LDRH     R0,[R0, #+240]
   \   00000054   0x.... 0x....      BL       __aeabi_ui2f
   \   00000058   0x0002             MOVS     R2,R0
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x200A             MOVS     R0,#+10
   \   0000005E   0x.... 0x....      BL       write_6_8_number
    542                  
    543                      
    544                      write_6_8_string(0,1,"V:");     
   \   00000062   0x....             ADR.N    R2,??DataTable8  ;; 0x56, 0x3A, 0x00, 0x00
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x.... 0x....      BL       write_6_8_string
    545                     //write_6_8_number(2,0,v);
    546                     
    547                      write_6_8_string(5,1,"W:");     //µÚ¶þÐÐ£¬½ÇËÙ¶È
   \   0000006C   0x....             ADR.N    R2,??DataTable8_1  ;; 0x57, 0x3A, 0x00, 0x00
   \   0000006E   0x2101             MOVS     R1,#+1
   \   00000070   0x2005             MOVS     R0,#+5
   \   00000072   0x.... 0x....      BL       write_6_8_string
    548                      write_6_8_number(7,1,w); 
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable11_3
   \   0000007A   0x6802             LDR      R2,[R0, #+0]
   \   0000007C   0x2101             MOVS     R1,#+1
   \   0000007E   0x2007             MOVS     R0,#+7
   \   00000080   0x.... 0x....      BL       write_6_8_number
    549          
    550                      write_6_8_string(0,2,"acce:");      //µÚÈýÐÐ£¬¼ÓËÙ¶È¼ÆÖµ
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable11_4
   \   00000088   0x2102             MOVS     R1,#+2
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x.... 0x....      BL       write_6_8_string
    551                      write_6_8_number(5,2,acce);
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable11_5
   \   00000094   0x6802             LDR      R2,[R0, #+0]
   \   00000096   0x2102             MOVS     R1,#+2
   \   00000098   0x2005             MOVS     R0,#+5
   \   0000009A   0x.... 0x....      BL       write_6_8_number
    552                      
    553                       
    554                      write_6_8_string(0,3,"Sp :");     
   \   0000009E   0x.... 0x....      LDR.W    R2,??DataTable11_6
   \   000000A2   0x2103             MOVS     R1,#+3
   \   000000A4   0x2000             MOVS     R0,#+0
   \   000000A6   0x.... 0x....      BL       write_6_8_string
    555                      write_6_8_number(4,3,Speed_set);
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000AE   0x7800             LDRB     R0,[R0, #+0]
   \   000000B0   0x.... 0x....      BL       __aeabi_ui2f
   \   000000B4   0x0002             MOVS     R2,R0
   \   000000B6   0x2103             MOVS     R1,#+3
   \   000000B8   0x2004             MOVS     R0,#+4
   \   000000BA   0x.... 0x....      BL       write_6_8_number
    556                      
    557                      write_6_8_string(7,3,"RSp:");     
   \   000000BE   0x.... 0x....      LDR.W    R2,??DataTable11_8
   \   000000C2   0x2103             MOVS     R1,#+3
   \   000000C4   0x2007             MOVS     R0,#+7
   \   000000C6   0x.... 0x....      BL       write_6_8_string
    558                      write_6_8_number(11,3,RealSpeed);
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000CE   0x6802             LDR      R2,[R0, #+0]
   \   000000D0   0x2103             MOVS     R1,#+3
   \   000000D2   0x200B             MOVS     R0,#+11
   \   000000D4   0x.... 0x....      BL       write_6_8_number
    559                     
    560                      write_6_8_string(0,4,"L_c:");   
   \   000000D8   0x.... 0x....      LDR.W    R2,??DataTable11_10
   \   000000DC   0x2104             MOVS     R1,#+4
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x.... 0x....      BL       write_6_8_string
    561                      write_6_8_number(4,4,Left_cnt);
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   000000E8   0x7800             LDRB     R0,[R0, #+0]
   \   000000EA   0x.... 0x....      BL       __aeabi_ui2f
   \   000000EE   0x0002             MOVS     R2,R0
   \   000000F0   0x2104             MOVS     R1,#+4
   \   000000F2   0x2004             MOVS     R0,#+4
   \   000000F4   0x.... 0x....      BL       write_6_8_number
    562                      
    563                      write_6_8_string(7,4,"R_c:");      //µÚÈýÐÐ£¬¼ÓËÙ¶È¼ÆÖµ
   \   000000F8   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   000000FC   0x2104             MOVS     R1,#+4
   \   000000FE   0x2007             MOVS     R0,#+7
   \   00000100   0x.... 0x....      BL       write_6_8_string
    564                      write_6_8_number(11,4,Right_cnt);
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   00000108   0x7800             LDRB     R0,[R0, #+0]
   \   0000010A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000010E   0x0002             MOVS     R2,R0
   \   00000110   0x2104             MOVS     R1,#+4
   \   00000112   0x200B             MOVS     R0,#+11
   \   00000114   0x.... 0x....      BL       write_6_8_number
    565                      
    566                      write_6_8_number(0,5,g_nCarAngle); 
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   0000011C   0x6802             LDR      R2,[R0, #+0]
   \   0000011E   0x2105             MOVS     R1,#+5
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x.... 0x....      BL       write_6_8_number
    567                      write_6_8_number(8,5,acce_angle); 
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable11_15
   \   0000012A   0x6802             LDR      R2,[R0, #+0]
   \   0000012C   0x2105             MOVS     R1,#+5
   \   0000012E   0x2008             MOVS     R0,#+8
   \   00000130   0x.... 0x....      BL       write_6_8_number
    568                      break;
   \   00000134   0xE13F             B.N      ??pre_show_4
    569                       
    570                case 1:
    571                       
    572                       write_6_8_number(0,0,g_nLeftCount);
   \                     ??pre_show_2:
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable11_16
   \   0000013A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000013E   0x.... 0x....      BL       __aeabi_i2f
   \   00000142   0x0002             MOVS     R2,R0
   \   00000144   0x2100             MOVS     R1,#+0
   \   00000146   0x2000             MOVS     R0,#+0
   \   00000148   0x.... 0x....      BL       write_6_8_number
    573                       write_6_8_number(7,0,g_nRightCount);
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   00000150   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000154   0x.... 0x....      BL       __aeabi_i2f
   \   00000158   0x0002             MOVS     R2,R0
   \   0000015A   0x2100             MOVS     R1,#+0
   \   0000015C   0x2007             MOVS     R0,#+7
   \   0000015E   0x.... 0x....      BL       write_6_8_number
    574                       
    575                       
    576                       write_6_8_string(0,1,"latch:");    //
   \   00000162   0x.... 0x....      LDR.W    R2,??DataTable11_18
   \   00000166   0x2101             MOVS     R1,#+1
   \   00000168   0x2000             MOVS     R0,#+0
   \   0000016A   0x.... 0x....      BL       write_6_8_string
    577                       write_6_8_number(6,1,latch); 
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable11_19
   \   00000172   0x8800             LDRH     R0,[R0, #+0]
   \   00000174   0x.... 0x....      BL       __aeabi_ui2f
   \   00000178   0x0002             MOVS     R2,R0
   \   0000017A   0x2101             MOVS     R1,#+1
   \   0000017C   0x2006             MOVS     R0,#+6
   \   0000017E   0x.... 0x....      BL       write_6_8_number
    578                       
    579                       write_6_8_string(0,2,"p_d:");    //
   \   00000182   0x.... 0x....      LDR.W    R2,??DataTable11_20
   \   00000186   0x2102             MOVS     R1,#+2
   \   00000188   0x2000             MOVS     R0,#+0
   \   0000018A   0x.... 0x....      BL       write_6_8_string
    580                       write_6_8_number(4,2,p_distance);
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   00000192   0x6802             LDR      R2,[R0, #+0]
   \   00000194   0x2102             MOVS     R1,#+2
   \   00000196   0x2004             MOVS     R0,#+4
   \   00000198   0x.... 0x....      BL       write_6_8_number
    581                       
    582                       write_6_8_string(9,2,"tm:");    //
   \   0000019C   0x....             ADR.N    R2,??DataTable8_2  ;; "tm:"
   \   0000019E   0x2102             MOVS     R1,#+2
   \   000001A0   0x2009             MOVS     R0,#+9
   \   000001A2   0x.... 0x....      BL       write_6_8_string
    583                       write_6_8_number(12,2, IntegrationTime);
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable11_22
   \   000001AA   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000001AE   0x.... 0x....      BL       __aeabi_i2f
   \   000001B2   0x0002             MOVS     R2,R0
   \   000001B4   0x2102             MOVS     R1,#+2
   \   000001B6   0x200C             MOVS     R0,#+12
   \   000001B8   0x.... 0x....      BL       write_6_8_number
    584                       
    585                       write_6_8_string(0,3,"L_PWM:");    //
   \   000001BC   0x.... 0x....      LDR.W    R2,??DataTable11_23
   \   000001C0   0x2103             MOVS     R1,#+3
   \   000001C2   0x2000             MOVS     R0,#+0
   \   000001C4   0x.... 0x....      BL       write_6_8_string
    586                       write_6_8_number(6,3,LeftSpeedPwm);
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable11_24
   \   000001CC   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001D0   0x.... 0x....      BL       __aeabi_i2f
   \   000001D4   0x0002             MOVS     R2,R0
   \   000001D6   0x2103             MOVS     R1,#+3
   \   000001D8   0x2006             MOVS     R0,#+6
   \   000001DA   0x.... 0x....      BL       write_6_8_number
    587                       
    588                       write_6_8_string(0,4,"R_PWM:");    //
   \   000001DE   0x.... 0x....      LDR.W    R2,??DataTable11_25
   \   000001E2   0x2104             MOVS     R1,#+4
   \   000001E4   0x2000             MOVS     R0,#+0
   \   000001E6   0x.... 0x....      BL       write_6_8_string
    589                       write_6_8_number(6,4,RightSpeedPwm);
   \   000001EA   0x.... 0x....      LDR.W    R0,??DataTable11_26
   \   000001EE   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001F2   0x.... 0x....      BL       __aeabi_i2f
   \   000001F6   0x0002             MOVS     R2,R0
   \   000001F8   0x2104             MOVS     R1,#+4
   \   000001FA   0x2006             MOVS     R0,#+6
   \   000001FC   0x.... 0x....      BL       write_6_8_number
    590                       
    591                       write_6_8_number(0,5,anglePD);
   \   00000200   0x.... 0x....      LDR.W    R0,??DataTable11_27
   \   00000204   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000208   0x.... 0x....      BL       __aeabi_i2f
   \   0000020C   0x0002             MOVS     R2,R0
   \   0000020E   0x2105             MOVS     R1,#+5
   \   00000210   0x2000             MOVS     R0,#+0
   \   00000212   0x.... 0x....      BL       write_6_8_number
    592                       write_6_8_number(5,5,SpeedPID);
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable11_28
   \   0000021A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000021E   0x.... 0x....      BL       __aeabi_i2f
   \   00000222   0x0002             MOVS     R2,R0
   \   00000224   0x2105             MOVS     R1,#+5
   \   00000226   0x2005             MOVS     R0,#+5
   \   00000228   0x.... 0x....      BL       write_6_8_number
    593                       write_6_8_number(10,5,steerpwm);
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable11_29
   \   00000230   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000234   0x.... 0x....      BL       __aeabi_i2f
   \   00000238   0x0002             MOVS     R2,R0
   \   0000023A   0x2105             MOVS     R1,#+5
   \   0000023C   0x200A             MOVS     R0,#+10
   \   0000023E   0x.... 0x....      BL       write_6_8_number
    594                       
    595                       break;
   \   00000242   0xE0B8             B.N      ??pre_show_4
    596                       
    597                       
    598                 
    599                case 2:write_6_8_char(0,line_num,'*');
   \                     ??pre_show_1:
   \   00000244   0x222A             MOVS     R2,#+42
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable11_30
   \   0000024A   0x7801             LDRB     R1,[R0, #+0]
   \   0000024C   0x2000             MOVS     R0,#+0
   \   0000024E   0x.... 0x....      BL       write_6_8_char
    600                
    601                       write_6_8_string(1,0,"ACCE:");    //¼ÓËÙ¶È¼Æ¾²Ì¬Öµ
   \   00000252   0x.... 0x....      LDR.W    R2,??DataTable11_31
   \   00000256   0x2100             MOVS     R1,#+0
   \   00000258   0x2001             MOVS     R0,#+1
   \   0000025A   0x.... 0x....      BL       write_6_8_string
    602                       write_6_8_number(6,0,ACCE_STATIC); 
   \   0000025E   0x.... 0x....      LDR.W    R0,??DataTable11_32
   \   00000262   0x6802             LDR      R2,[R0, #+0]
   \   00000264   0x2100             MOVS     R1,#+0
   \   00000266   0x2006             MOVS     R0,#+6
   \   00000268   0x.... 0x....      BL       write_6_8_number
    603                         
    604                       write_6_8_string(1,1,"Sp:");    //
   \   0000026C   0x....             ADR.N    R2,??DataTable8_3  ;; "Sp:"
   \   0000026E   0x2101             MOVS     R1,#+1
   \   00000270   0x2001             MOVS     R0,#+1
   \   00000272   0x.... 0x....      BL       write_6_8_string
    605                       write_6_8_number(4,1,Speed_set);
   \   00000276   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000027A   0x7800             LDRB     R0,[R0, #+0]
   \   0000027C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000280   0x0002             MOVS     R2,R0
   \   00000282   0x2101             MOVS     R1,#+1
   \   00000284   0x2004             MOVS     R0,#+4
   \   00000286   0x.... 0x....      BL       write_6_8_number
    606                         
    607                       write_6_8_string(1,2,"WHITE_C:");    //
   \   0000028A   0x.... 0x....      LDR.W    R2,??DataTable11_33
   \   0000028E   0x2102             MOVS     R1,#+2
   \   00000290   0x2001             MOVS     R0,#+1
   \   00000292   0x.... 0x....      BL       write_6_8_string
    608                       write_6_8_number(9,2,WHITE_CENTER);
   \   00000296   0x.... 0x....      LDR.W    R0,??DataTable11_34
   \   0000029A   0x7800             LDRB     R0,[R0, #+0]
   \   0000029C   0x.... 0x....      BL       __aeabi_ui2f
   \   000002A0   0x0002             MOVS     R2,R0
   \   000002A2   0x2102             MOVS     R1,#+2
   \   000002A4   0x2009             MOVS     R0,#+9
   \   000002A6   0x.... 0x....      BL       write_6_8_number
    609                       
    610                       LCD_set_XY(0, 5) ;
   \   000002AA   0x2105             MOVS     R1,#+5
   \   000002AC   0x2000             MOVS     R0,#+0
   \   000002AE   0x.... 0x....      BL       LCD_set_XY
    611                       for(i=10;i<52;i++){
   \   000002B2   0x200A             MOVS     R0,#+10
   \   000002B4   0x0004             MOVS     R4,R0
   \                     ??pre_show_5:
   \   000002B6   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   000002B8   0x2C34             CMP      R4,#+52
   \   000002BA   0xDA10             BGE.N    ??pre_show_6
    612                         if(CCD_value[i])  LCD_write_byte(0xfe,1);       
   \   000002BC   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   000002BE   0x.... 0x....      LDR.W    R0,??DataTable11_35
   \   000002C2   0x5C20             LDRB     R0,[R4, R0]
   \   000002C4   0x2800             CMP      R0,#+0
   \   000002C6   0xD004             BEQ.N    ??pre_show_7
   \   000002C8   0x2101             MOVS     R1,#+1
   \   000002CA   0x20FE             MOVS     R0,#+254
   \   000002CC   0x.... 0x....      BL       LCD_write_byte
   \   000002D0   0xE003             B.N      ??pre_show_8
    613                         else LCD_write_byte(0x80,1);      
   \                     ??pre_show_7:
   \   000002D2   0x2101             MOVS     R1,#+1
   \   000002D4   0x2080             MOVS     R0,#+128
   \   000002D6   0x.... 0x....      BL       LCD_write_byte
    614                       }
   \                     ??pre_show_8:
   \   000002DA   0x1C64             ADDS     R4,R4,#+1
   \   000002DC   0xE7EB             B.N      ??pre_show_5
    615                       for(i=78;i<120;i++){
   \                     ??pre_show_6:
   \   000002DE   0x204E             MOVS     R0,#+78
   \   000002E0   0x0004             MOVS     R4,R0
   \                     ??pre_show_9:
   \   000002E2   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   000002E4   0x2C78             CMP      R4,#+120
   \   000002E6   0xDA10             BGE.N    ??pre_show_10
    616                         if(CCD_value[i])  LCD_write_byte(0xfe,1);       
   \   000002E8   0xB264             SXTB     R4,R4            ;; SignExt  R4,R4,#+24,#+24
   \   000002EA   0x.... 0x....      LDR.W    R0,??DataTable11_35
   \   000002EE   0x5C20             LDRB     R0,[R4, R0]
   \   000002F0   0x2800             CMP      R0,#+0
   \   000002F2   0xD004             BEQ.N    ??pre_show_11
   \   000002F4   0x2101             MOVS     R1,#+1
   \   000002F6   0x20FE             MOVS     R0,#+254
   \   000002F8   0x.... 0x....      BL       LCD_write_byte
   \   000002FC   0xE003             B.N      ??pre_show_12
    617                         else LCD_write_byte(0x80,1);      
   \                     ??pre_show_11:
   \   000002FE   0x2101             MOVS     R1,#+1
   \   00000300   0x2080             MOVS     R0,#+128
   \   00000302   0x.... 0x....      BL       LCD_write_byte
    618                       }
   \                     ??pre_show_12:
   \   00000306   0x1C64             ADDS     R4,R4,#+1
   \   00000308   0xE7EB             B.N      ??pre_show_9
    619                       break;
   \                     ??pre_show_10:
   \   0000030A   0xE054             B.N      ??pre_show_4
    620                       
    621                       
    622                case 3:write_6_8_char(0,line_num,'*');
   \                     ??pre_show_3:
   \   0000030C   0x222A             MOVS     R2,#+42
   \   0000030E   0x.... 0x....      LDR.W    R0,??DataTable11_30
   \   00000312   0x7801             LDRB     R1,[R0, #+0]
   \   00000314   0x2000             MOVS     R0,#+0
   \   00000316   0x.... 0x....      BL       write_6_8_char
    623                       
    624                       write_6_8_string(1,0,"ang_kp:");    //
   \   0000031A   0x.... 0x....      LDR.W    R2,??DataTable11_36
   \   0000031E   0x2100             MOVS     R1,#+0
   \   00000320   0x2001             MOVS     R0,#+1
   \   00000322   0x.... 0x....      BL       write_6_8_string
    625                       write_6_8_number(8,0,angle_kp); 
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable11_37
   \   0000032A   0x6802             LDR      R2,[R0, #+0]
   \   0000032C   0x2100             MOVS     R1,#+0
   \   0000032E   0x2008             MOVS     R0,#+8
   \   00000330   0x.... 0x....      BL       write_6_8_number
    626                       
    627                       write_6_8_string(1,1,"ang_kd:");    //
   \   00000334   0x.... 0x....      LDR.W    R2,??DataTable11_38
   \   00000338   0x2101             MOVS     R1,#+1
   \   0000033A   0x2001             MOVS     R0,#+1
   \   0000033C   0x.... 0x....      BL       write_6_8_string
    628                       write_6_8_number(8,1,angle_kd);
   \   00000340   0x.... 0x....      LDR.W    R0,??DataTable11_39
   \   00000344   0x6802             LDR      R2,[R0, #+0]
   \   00000346   0x2101             MOVS     R1,#+1
   \   00000348   0x2008             MOVS     R0,#+8
   \   0000034A   0x.... 0x....      BL       write_6_8_number
    629          
    630                       write_6_8_string(1,2,"sped_kp:");    //
   \   0000034E   0x.... 0x....      LDR.W    R2,??DataTable11_40
   \   00000352   0x2102             MOVS     R1,#+2
   \   00000354   0x2001             MOVS     R0,#+1
   \   00000356   0x.... 0x....      BL       write_6_8_string
    631                       write_6_8_number(9,2,speed_kp); 
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable11_41
   \   0000035E   0x6802             LDR      R2,[R0, #+0]
   \   00000360   0x2102             MOVS     R1,#+2
   \   00000362   0x2009             MOVS     R0,#+9
   \   00000364   0x.... 0x....      BL       write_6_8_number
    632                       
    633                       write_6_8_string(1,3,"sped_ki:");    //
   \   00000368   0x.... 0x....      LDR.W    R2,??DataTable11_42
   \   0000036C   0x2103             MOVS     R1,#+3
   \   0000036E   0x2001             MOVS     R0,#+1
   \   00000370   0x.... 0x....      BL       write_6_8_string
    634                       write_6_8_number(9,3,speed_ki); 
   \   00000374   0x.... 0x....      LDR.W    R0,??DataTable11_43
   \   00000378   0x6802             LDR      R2,[R0, #+0]
   \   0000037A   0x2103             MOVS     R1,#+3
   \   0000037C   0x2009             MOVS     R0,#+9
   \   0000037E   0x.... 0x....      BL       write_6_8_number
    635                       
    636                       write_6_8_string(1,4,"ster_kp:");    //
   \   00000382   0x.... 0x....      LDR.W    R2,??DataTable11_44
   \   00000386   0x2104             MOVS     R1,#+4
   \   00000388   0x2001             MOVS     R0,#+1
   \   0000038A   0x.... 0x....      BL       write_6_8_string
    637                       write_6_8_number(9,4,steer_kp);
   \   0000038E   0x.... 0x....      LDR.W    R0,??DataTable11_45
   \   00000392   0x6802             LDR      R2,[R0, #+0]
   \   00000394   0x2104             MOVS     R1,#+4
   \   00000396   0x2009             MOVS     R0,#+9
   \   00000398   0x.... 0x....      BL       write_6_8_number
    638                       
    639                       write_6_8_string(1,5,"ster_kd:");    //
   \   0000039C   0x.... 0x....      LDR.W    R2,??DataTable11_46
   \   000003A0   0x2105             MOVS     R1,#+5
   \   000003A2   0x2001             MOVS     R0,#+1
   \   000003A4   0x.... 0x....      BL       write_6_8_string
    640                       write_6_8_number(9,5,steer_kd);  
   \   000003A8   0x.... 0x....      LDR.W    R0,??DataTable11_47
   \   000003AC   0x6802             LDR      R2,[R0, #+0]
   \   000003AE   0x2105             MOVS     R1,#+5
   \   000003B0   0x2009             MOVS     R0,#+9
   \   000003B2   0x.... 0x....      BL       write_6_8_number
    641                       
    642                       break;
    643                       
    644               }
    645          
    646          }
   \                     ??pre_show_4:
   \   000003B6   0xBD10             POP      {R4,PC}          ;; return
    647          
    648          /**************************************Ë¢ÆÁ£¬ÏÔÊ¾Ê±±ä±äÁ¿*********************************/

   \                                 In section .text, align 2, keep-with-next
    649          void redraw()
    650          {    uint8 i;
   \                     redraw:
   \   00000000   0xB510             PUSH     {R4,LR}
    651          
    652            //if(page_num==0&&redraw_control==0)     //µÚÒ»Ò³
    653               if(page_num==0)     //µÚÒ»Ò³
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xF040 0x8091      BNE.W    ??redraw_0
    654               {
    655                  LCD_clear_L(0,0);
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       LCD_clear_L
    656                  write_6_8_number(0,0,Pixel[15]); 
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000001A   0x8BC0             LDRH     R0,[R0, #+30]
   \   0000001C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000020   0x0002             MOVS     R2,R0
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x.... 0x....      BL       write_6_8_number
    657                  write_6_8_number(5,0,Pixel[64]); 
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   0000002E   0xF8B0 0x0080      LDRH     R0,[R0, #+128]
   \   00000032   0x.... 0x....      BL       __aeabi_ui2f
   \   00000036   0x0002             MOVS     R2,R0
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x2005             MOVS     R0,#+5
   \   0000003C   0x.... 0x....      BL       write_6_8_number
    658                  write_6_8_number(10,0,Pixel[120]);
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable11_2
   \   00000044   0xF8B0 0x00F0      LDRH     R0,[R0, #+240]
   \   00000048   0x.... 0x....      BL       __aeabi_ui2f
   \   0000004C   0x0002             MOVS     R2,R0
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x200A             MOVS     R0,#+10
   \   00000052   0x.... 0x....      BL       write_6_8_number
    659                  
    660                  LCD_clear_L(8,1);
   \   00000056   0x2101             MOVS     R1,#+1
   \   00000058   0x2008             MOVS     R0,#+8
   \   0000005A   0x.... 0x....      BL       LCD_clear_L
    661                  write_6_8_number(7,1,w);    //µÚ¶þÐÐ£¬½ÇËÙ¶È 
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_3
   \   00000062   0x6802             LDR      R2,[R0, #+0]
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0x2007             MOVS     R0,#+7
   \   00000068   0x.... 0x....      BL       write_6_8_number
    662                     
    663                  LCD_clear_L(5,2);
   \   0000006C   0x2102             MOVS     R1,#+2
   \   0000006E   0x2005             MOVS     R0,#+5
   \   00000070   0x.... 0x....      BL       LCD_clear_L
    664                  write_6_8_number(5,2,acce);  
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable11_5
   \   00000078   0x6802             LDR      R2,[R0, #+0]
   \   0000007A   0x2102             MOVS     R1,#+2
   \   0000007C   0x2005             MOVS     R0,#+5
   \   0000007E   0x.... 0x....      BL       write_6_8_number
    665           
    666                  LCD_clear_L(0,3);    
   \   00000082   0x2103             MOVS     R1,#+3
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x.... 0x....      BL       LCD_clear_L
    667                  write_6_8_string(0,3,"Sp :");     
   \   0000008A   0x.... 0x....      LDR.W    R2,??DataTable11_6
   \   0000008E   0x2103             MOVS     R1,#+3
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x.... 0x....      BL       write_6_8_string
    668                  write_6_8_number(4,3,Speed_set);
   \   00000096   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000009A   0x7800             LDRB     R0,[R0, #+0]
   \   0000009C   0x.... 0x....      BL       __aeabi_ui2f
   \   000000A0   0x0002             MOVS     R2,R0
   \   000000A2   0x2103             MOVS     R1,#+3
   \   000000A4   0x2004             MOVS     R0,#+4
   \   000000A6   0x.... 0x....      BL       write_6_8_number
    669                  write_6_8_string(7,3,"Rsp:");     
   \   000000AA   0x.... 0x....      LDR.W    R2,??DataTable11_48
   \   000000AE   0x2103             MOVS     R1,#+3
   \   000000B0   0x2007             MOVS     R0,#+7
   \   000000B2   0x.... 0x....      BL       write_6_8_string
    670                  write_6_8_number(11,3,RealSpeed);
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000BA   0x6802             LDR      R2,[R0, #+0]
   \   000000BC   0x2103             MOVS     R1,#+3
   \   000000BE   0x200B             MOVS     R0,#+11
   \   000000C0   0x.... 0x....      BL       write_6_8_number
    671                  
    672                  LCD_clear_L(0,4);
   \   000000C4   0x2104             MOVS     R1,#+4
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x.... 0x....      BL       LCD_clear_L
    673                  write_6_8_string(0,4,"L_c:");
   \   000000CC   0x.... 0x....      LDR.W    R2,??DataTable11_10
   \   000000D0   0x2104             MOVS     R1,#+4
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x.... 0x....      BL       write_6_8_string
    674                  write_6_8_number(4,4,Left_cnt);   
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   000000DC   0x7800             LDRB     R0,[R0, #+0]
   \   000000DE   0x.... 0x....      BL       __aeabi_ui2f
   \   000000E2   0x0002             MOVS     R2,R0
   \   000000E4   0x2104             MOVS     R1,#+4
   \   000000E6   0x2004             MOVS     R0,#+4
   \   000000E8   0x.... 0x....      BL       write_6_8_number
    675                  write_6_8_string(7,4,"R_c:");      
   \   000000EC   0x.... 0x....      LDR.W    R2,??DataTable11_12
   \   000000F0   0x2104             MOVS     R1,#+4
   \   000000F2   0x2007             MOVS     R0,#+7
   \   000000F4   0x.... 0x....      BL       write_6_8_string
    676                  write_6_8_number(11,4,Right_cnt);
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   000000FC   0x7800             LDRB     R0,[R0, #+0]
   \   000000FE   0x.... 0x....      BL       __aeabi_ui2f
   \   00000102   0x0002             MOVS     R2,R0
   \   00000104   0x2104             MOVS     R1,#+4
   \   00000106   0x200B             MOVS     R0,#+11
   \   00000108   0x.... 0x....      BL       write_6_8_number
    677                  
    678                  LCD_clear_L(0,5);
   \   0000010C   0x2105             MOVS     R1,#+5
   \   0000010E   0x2000             MOVS     R0,#+0
   \   00000110   0x.... 0x....      BL       LCD_clear_L
    679                  write_6_8_number(0,5,g_nCarAngle); 
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable11_14
   \   00000118   0x6802             LDR      R2,[R0, #+0]
   \   0000011A   0x2105             MOVS     R1,#+5
   \   0000011C   0x2000             MOVS     R0,#+0
   \   0000011E   0x.... 0x....      BL       write_6_8_number
    680                  write_6_8_number(8,5,acce_angle);
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable11_15
   \   00000126   0x6802             LDR      R2,[R0, #+0]
   \   00000128   0x2105             MOVS     R1,#+5
   \   0000012A   0x2008             MOVS     R0,#+8
   \   0000012C   0x.... 0x....      BL       write_6_8_number
    681               }
    682               if(page_num==1)     //µÚ¶þÒ³
   \                     ??redraw_0:
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000134   0x7800             LDRB     R0,[R0, #+0]
   \   00000136   0x2801             CMP      R0,#+1
   \   00000138   0xF040 0x808C      BNE.W    ??redraw_1
    683               {
    684                  LCD_clear_L(0,0);
   \   0000013C   0x2100             MOVS     R1,#+0
   \   0000013E   0x2000             MOVS     R0,#+0
   \   00000140   0x.... 0x....      BL       LCD_clear_L
    685                  write_6_8_number(0,0,g_nLeftCount);
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable11_16
   \   00000148   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000014C   0x.... 0x....      BL       __aeabi_i2f
   \   00000150   0x0002             MOVS     R2,R0
   \   00000152   0x2100             MOVS     R1,#+0
   \   00000154   0x2000             MOVS     R0,#+0
   \   00000156   0x.... 0x....      BL       write_6_8_number
    686                  write_6_8_number(7,0,g_nRightCount);
   \   0000015A   0x.... 0x....      LDR.W    R0,??DataTable11_17
   \   0000015E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000162   0x.... 0x....      BL       __aeabi_i2f
   \   00000166   0x0002             MOVS     R2,R0
   \   00000168   0x2100             MOVS     R1,#+0
   \   0000016A   0x2007             MOVS     R0,#+7
   \   0000016C   0x.... 0x....      BL       write_6_8_number
    687                       
    688                  LCD_clear_L(6,1);
   \   00000170   0x2101             MOVS     R1,#+1
   \   00000172   0x2006             MOVS     R0,#+6
   \   00000174   0x.... 0x....      BL       LCD_clear_L
    689                  write_6_8_number(6,1,latch);
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable11_19
   \   0000017C   0x8800             LDRH     R0,[R0, #+0]
   \   0000017E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000182   0x0002             MOVS     R2,R0
   \   00000184   0x2101             MOVS     R1,#+1
   \   00000186   0x2006             MOVS     R0,#+6
   \   00000188   0x.... 0x....      BL       write_6_8_number
    690                  
    691                  LCD_clear_L(0,2);     
   \   0000018C   0x2102             MOVS     R1,#+2
   \   0000018E   0x2000             MOVS     R0,#+0
   \   00000190   0x.... 0x....      BL       LCD_clear_L
    692                  write_6_8_string(0,2,"p_d:");    //
   \   00000194   0x.... 0x....      LDR.W    R2,??DataTable11_20
   \   00000198   0x2102             MOVS     R1,#+2
   \   0000019A   0x2000             MOVS     R0,#+0
   \   0000019C   0x.... 0x....      BL       write_6_8_string
    693                  write_6_8_number(4,2,p_distance);
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable11_21
   \   000001A4   0x6802             LDR      R2,[R0, #+0]
   \   000001A6   0x2102             MOVS     R1,#+2
   \   000001A8   0x2004             MOVS     R0,#+4
   \   000001AA   0x.... 0x....      BL       write_6_8_number
    694                  
    695                  
    696                  write_6_8_string(9,2,"tm:");    //
   \   000001AE   0x....             ADR.N    R2,??DataTable9_2  ;; "tm:"
   \   000001B0   0x2102             MOVS     R1,#+2
   \   000001B2   0x2009             MOVS     R0,#+9
   \   000001B4   0x.... 0x....      BL       write_6_8_string
    697                  write_6_8_number(12,2, IntegrationTime);
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable11_22
   \   000001BC   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000001C0   0x.... 0x....      BL       __aeabi_i2f
   \   000001C4   0x0002             MOVS     R2,R0
   \   000001C6   0x2102             MOVS     R1,#+2
   \   000001C8   0x200C             MOVS     R0,#+12
   \   000001CA   0x.... 0x....      BL       write_6_8_number
    698                  
    699                  LCD_clear_L(6,3);
   \   000001CE   0x2103             MOVS     R1,#+3
   \   000001D0   0x2006             MOVS     R0,#+6
   \   000001D2   0x.... 0x....      BL       LCD_clear_L
    700                  write_6_8_number(6,3,LeftSpeedPwm);
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable11_24
   \   000001DA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001DE   0x.... 0x....      BL       __aeabi_i2f
   \   000001E2   0x0002             MOVS     R2,R0
   \   000001E4   0x2103             MOVS     R1,#+3
   \   000001E6   0x2006             MOVS     R0,#+6
   \   000001E8   0x.... 0x....      BL       write_6_8_number
    701                  
    702                  LCD_clear_L(6,4);
   \   000001EC   0x2104             MOVS     R1,#+4
   \   000001EE   0x2006             MOVS     R0,#+6
   \   000001F0   0x.... 0x....      BL       LCD_clear_L
    703                  write_6_8_number(6,4,RightSpeedPwm);
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable11_26
   \   000001F8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001FC   0x.... 0x....      BL       __aeabi_i2f
   \   00000200   0x0002             MOVS     R2,R0
   \   00000202   0x2104             MOVS     R1,#+4
   \   00000204   0x2006             MOVS     R0,#+6
   \   00000206   0x.... 0x....      BL       write_6_8_number
    704                  
    705                  LCD_clear_L(0,5);
   \   0000020A   0x2105             MOVS     R1,#+5
   \   0000020C   0x2000             MOVS     R0,#+0
   \   0000020E   0x.... 0x....      BL       LCD_clear_L
    706                  
    707                  write_6_8_number(0,5,anglePD);
   \   00000212   0x.... 0x....      LDR.W    R0,??DataTable11_27
   \   00000216   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000021A   0x.... 0x....      BL       __aeabi_i2f
   \   0000021E   0x0002             MOVS     R2,R0
   \   00000220   0x2105             MOVS     R1,#+5
   \   00000222   0x2000             MOVS     R0,#+0
   \   00000224   0x.... 0x....      BL       write_6_8_number
    708                  write_6_8_number(5,5,SpeedPID);
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable11_28
   \   0000022C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000230   0x.... 0x....      BL       __aeabi_i2f
   \   00000234   0x0002             MOVS     R2,R0
   \   00000236   0x2105             MOVS     R1,#+5
   \   00000238   0x2005             MOVS     R0,#+5
   \   0000023A   0x.... 0x....      BL       write_6_8_number
    709                  write_6_8_number(10,5,steerpwm);
   \   0000023E   0x.... 0x....      LDR.W    R0,??DataTable11_29
   \   00000242   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000246   0x.... 0x....      BL       __aeabi_i2f
   \   0000024A   0x0002             MOVS     R2,R0
   \   0000024C   0x2105             MOVS     R1,#+5
   \   0000024E   0x200A             MOVS     R0,#+10
   \   00000250   0x.... 0x....      BL       write_6_8_number
    710                 
    711               }
    712               if(page_num==2)     //µÚÈýÒ³
   \                     ??redraw_1:
   \   00000254   0x.... 0x....      LDR.W    R0,??DataTable11_1
   \   00000258   0x7800             LDRB     R0,[R0, #+0]
   \   0000025A   0x2802             CMP      R0,#+2
   \   0000025C   0xD12F             BNE.N    ??redraw_2
    713               {
    714                  LCD_set_XY(0, 5) ;
   \   0000025E   0x2105             MOVS     R1,#+5
   \   00000260   0x2000             MOVS     R0,#+0
   \   00000262   0x.... 0x....      BL       LCD_set_XY
    715                  for(i=20;i<62;i++){
   \   00000266   0x2014             MOVS     R0,#+20
   \   00000268   0x0004             MOVS     R4,R0
   \                     ??redraw_3:
   \   0000026A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000026C   0x2C3E             CMP      R4,#+62
   \   0000026E   0xD210             BCS.N    ??redraw_4
    716                  if(CCD_value[i])  LCD_write_byte(0xfe,1);       
   \   00000270   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000272   0x.... 0x....      LDR.W    R0,??DataTable11_35
   \   00000276   0x5C20             LDRB     R0,[R4, R0]
   \   00000278   0x2800             CMP      R0,#+0
   \   0000027A   0xD004             BEQ.N    ??redraw_5
   \   0000027C   0x2101             MOVS     R1,#+1
   \   0000027E   0x20FE             MOVS     R0,#+254
   \   00000280   0x.... 0x....      BL       LCD_write_byte
   \   00000284   0xE003             B.N      ??redraw_6
    717                  else LCD_write_byte(0x80,1);      
   \                     ??redraw_5:
   \   00000286   0x2101             MOVS     R1,#+1
   \   00000288   0x2080             MOVS     R0,#+128
   \   0000028A   0x.... 0x....      BL       LCD_write_byte
    718                  }
   \                     ??redraw_6:
   \   0000028E   0x1C64             ADDS     R4,R4,#+1
   \   00000290   0xE7EB             B.N      ??redraw_3
    719                  for(i=78;i<120;i++){
   \                     ??redraw_4:
   \   00000292   0x204E             MOVS     R0,#+78
   \   00000294   0x0004             MOVS     R4,R0
   \                     ??redraw_7:
   \   00000296   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000298   0x2C78             CMP      R4,#+120
   \   0000029A   0xD210             BCS.N    ??redraw_2
    720                  if(CCD_value[i])  LCD_write_byte(0xfe,1);       
   \   0000029C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000029E   0x.... 0x....      LDR.W    R0,??DataTable11_35
   \   000002A2   0x5C20             LDRB     R0,[R4, R0]
   \   000002A4   0x2800             CMP      R0,#+0
   \   000002A6   0xD004             BEQ.N    ??redraw_8
   \   000002A8   0x2101             MOVS     R1,#+1
   \   000002AA   0x20FE             MOVS     R0,#+254
   \   000002AC   0x.... 0x....      BL       LCD_write_byte
   \   000002B0   0xE003             B.N      ??redraw_9
    721                  else LCD_write_byte(0x80,1);      
   \                     ??redraw_8:
   \   000002B2   0x2101             MOVS     R1,#+1
   \   000002B4   0x2080             MOVS     R0,#+128
   \   000002B6   0x.... 0x....      BL       LCD_write_byte
    722                  }       
   \                     ??redraw_9:
   \   000002BA   0x1C64             ADDS     R4,R4,#+1
   \   000002BC   0xE7EB             B.N      ??redraw_7
    723                 
    724               }
    725               
    726          }
   \                     ??redraw_2:
   \   000002BE   0xBD10             POP      {R4,PC}          ;; return
    727          
    728          
    729          
    730          /*********************************ÐÞ¸Ä±äÁ¿ÊýÖµ***********************************/

   \                                 In section .text, align 2, keep-with-next
    731          void change_value(unsigned char page,unsigned char m,float i)
    732          {  
   \                     change_value:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x4680             MOV      R8,R0
   \   00000006   0x000F             MOVS     R7,R1
   \   00000008   0x0016             MOVS     R6,R2
    733          
    734            if(page==2)
   \   0000000A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000000E   0xF1B8 0x0F02      CMP      R8,#+2
   \   00000012   0xD161             BNE.N    ??change_value_0
    735             { 
    736               switch(m)
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x2F00             CMP      R7,#+0
   \   00000018   0xD003             BEQ.N    ??change_value_1
   \   0000001A   0x2F02             CMP      R7,#+2
   \   0000001C   0xD03C             BEQ.N    ??change_value_2
   \   0000001E   0xD31A             BCC.N    ??change_value_3
   \   00000020   0xE05A             B.N      ??change_value_0
    737                  {         
    738                       
    739                   case 0:ACCE_STATIC+=i;       
   \                     ??change_value_1:
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable11_32
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x0031             MOVS     R1,R6
   \   0000002A   0x.... 0x....      BL       __aeabi_fadd
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable11_32
   \   00000032   0x6008             STR      R0,[R1, #+0]
    740                          LCD_clear_L(6,0);
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x2006             MOVS     R0,#+6
   \   00000038   0x.... 0x....      BL       LCD_clear_L
    741                          write_6_8_char(0,0,'*');
   \   0000003C   0x222A             MOVS     R2,#+42
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      BL       write_6_8_char
    742                          write_6_8_number(6,0,ACCE_STATIC);  
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable11_32
   \   0000004A   0x6802             LDR      R2,[R0, #+0]
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x2006             MOVS     R0,#+6
   \   00000050   0x.... 0x....      BL       write_6_8_number
    743                          break;
   \   00000054   0xE040             B.N      ??change_value_0
    744                   case 1:Speed_set+=i;
   \                     ??change_value_3:
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000060   0x0031             MOVS     R1,R6
   \   00000062   0x.... 0x....      BL       __aeabi_fadd
   \   00000066   0x.... 0x....      BL       __aeabi_f2iz
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000006E   0x7008             STRB     R0,[R1, #+0]
    745                          LCD_clear_L(4,1);
   \   00000070   0x2101             MOVS     R1,#+1
   \   00000072   0x2004             MOVS     R0,#+4
   \   00000074   0x.... 0x....      BL       LCD_clear_L
    746                          write_6_8_char(0,1,'*');
   \   00000078   0x222A             MOVS     R2,#+42
   \   0000007A   0x2101             MOVS     R1,#+1
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      BL       write_6_8_char
    747                          write_6_8_number(4,1,Speed_set);
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000086   0x7800             LDRB     R0,[R0, #+0]
   \   00000088   0x.... 0x....      BL       __aeabi_ui2f
   \   0000008C   0x0002             MOVS     R2,R0
   \   0000008E   0x2101             MOVS     R1,#+1
   \   00000090   0x2004             MOVS     R0,#+4
   \   00000092   0x.... 0x....      BL       write_6_8_number
    748                          break;
   \   00000096   0xE01F             B.N      ??change_value_0
    749                    case 2:WHITE_CENTER+=i;
   \                     ??change_value_2:
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable11_34
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x.... 0x....      BL       __aeabi_ui2f
   \   000000A2   0x0031             MOVS     R1,R6
   \   000000A4   0x.... 0x....      BL       __aeabi_fadd
   \   000000A8   0x.... 0x....      BL       __aeabi_f2iz
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable11_34
   \   000000B0   0x7008             STRB     R0,[R1, #+0]
    750                          LCD_clear_L(9,2);
   \   000000B2   0x2102             MOVS     R1,#+2
   \   000000B4   0x2009             MOVS     R0,#+9
   \   000000B6   0x.... 0x....      BL       LCD_clear_L
    751                          write_6_8_char(0,2,'*');
   \   000000BA   0x222A             MOVS     R2,#+42
   \   000000BC   0x2102             MOVS     R1,#+2
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x.... 0x....      BL       write_6_8_char
    752                          write_6_8_number(9,2,WHITE_CENTER);
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable11_34
   \   000000C8   0x7800             LDRB     R0,[R0, #+0]
   \   000000CA   0x.... 0x....      BL       __aeabi_ui2f
   \   000000CE   0x0002             MOVS     R2,R0
   \   000000D0   0x2102             MOVS     R1,#+2
   \   000000D2   0x2009             MOVS     R0,#+9
   \   000000D4   0x.... 0x....      BL       write_6_8_number
    753                          break;
    754                   /*
    755                  case 3:pixel_max+=i;
    756                          LCD_clear_L(9,3);
    757                          write_6_8_char(0,3,'*');
    758                          write_6_8_number(11,3,pixel_max);
    759                          break;
    760                          
    761                   case 4:angle_kp+=i;
    762                          LCD_clear_L(8,4);
    763                          write_6_8_char(0,4,'*');
    764                          write_6_8_number(8,4,angle_kp);
    765                          break;   
    766                   case 5:angle_kd+=0.1*i;
    767                          LCD_clear_L(8,5);
    768                          write_6_8_char(0,5,'*');
    769                          write_6_8_number(8,5,angle_kd);
    770                          break;
    771                     */
    772          	      }
    773             }
    774            if(page==3)
   \                     ??change_value_0:
   \   000000D8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000DC   0xF1B8 0x0F03      CMP      R8,#+3
   \   000000E0   0xF040 0x80DF      BNE.W    ??change_value_4
    775             {
    776               switch(m)
   \   000000E4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000E6   0x2F00             CMP      R7,#+0
   \   000000E8   0xD00A             BEQ.N    ??change_value_5
   \   000000EA   0x2F02             CMP      R7,#+2
   \   000000EC   0xD04E             BEQ.N    ??change_value_6
   \   000000EE   0xD321             BCC.N    ??change_value_7
   \   000000F0   0x2F04             CMP      R7,#+4
   \   000000F2   0xF000 0x8089      BEQ.W    ??change_value_8
   \   000000F6   0xD360             BCC.N    ??change_value_9
   \   000000F8   0x2F05             CMP      R7,#+5
   \   000000FA   0xF000 0x80AC      BEQ.W    ??change_value_10
   \   000000FE   0xE0D0             B.N      ??change_value_4
    777                  {
    778                    
    779                   case 0:angle_kp+=i;       
   \                     ??change_value_5:
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable11_37
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0x0031             MOVS     R1,R6
   \   00000108   0x.... 0x....      BL       __aeabi_fadd
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable11_37
   \   00000110   0x6008             STR      R0,[R1, #+0]
    780                          LCD_clear_L(8,0);
   \   00000112   0x2100             MOVS     R1,#+0
   \   00000114   0x2008             MOVS     R0,#+8
   \   00000116   0x.... 0x....      BL       LCD_clear_L
    781                          write_6_8_char(0,0,'*');
   \   0000011A   0x222A             MOVS     R2,#+42
   \   0000011C   0x2100             MOVS     R1,#+0
   \   0000011E   0x2000             MOVS     R0,#+0
   \   00000120   0x.... 0x....      BL       write_6_8_char
    782                          write_6_8_number(8,0,angle_kp); 
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable11_37
   \   00000128   0x6802             LDR      R2,[R0, #+0]
   \   0000012A   0x2100             MOVS     R1,#+0
   \   0000012C   0x2008             MOVS     R0,#+8
   \   0000012E   0x.... 0x....      BL       write_6_8_number
    783                          break;
   \   00000132   0xE0B6             B.N      ??change_value_4
    784                   case 1:angle_kd+=0.1*i;
   \                     ??change_value_7:
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable11_39
   \   00000138   0x6800             LDR      R0,[R0, #+0]
   \   0000013A   0x.... 0x....      BL       __aeabi_f2d
   \   0000013E   0x0004             MOVS     R4,R0
   \   00000140   0x000D             MOVS     R5,R1
   \   00000142   0x0030             MOVS     R0,R6
   \   00000144   0x.... 0x....      BL       __aeabi_f2d
   \   00000148   0x0002             MOVS     R2,R0
   \   0000014A   0x000B             MOVS     R3,R1
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable11_49  ;; 0x9999999a
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable11_50  ;; 0x3fb99999
   \   00000154   0x.... 0x....      BL       __aeabi_dmul
   \   00000158   0x0022             MOVS     R2,R4
   \   0000015A   0x002B             MOVS     R3,R5
   \   0000015C   0x.... 0x....      BL       __aeabi_dadd
   \   00000160   0x.... 0x....      BL       __aeabi_d2f
   \   00000164   0x.... 0x....      LDR.W    R1,??DataTable11_39
   \   00000168   0x6008             STR      R0,[R1, #+0]
    785                          LCD_clear_L(8,1);
   \   0000016A   0x2101             MOVS     R1,#+1
   \   0000016C   0x2008             MOVS     R0,#+8
   \   0000016E   0x.... 0x....      BL       LCD_clear_L
    786                          write_6_8_char(0,1,'*');
   \   00000172   0x222A             MOVS     R2,#+42
   \   00000174   0x2101             MOVS     R1,#+1
   \   00000176   0x2000             MOVS     R0,#+0
   \   00000178   0x.... 0x....      BL       write_6_8_char
    787                          write_6_8_number(8,1,angle_kd); 
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable11_39
   \   00000180   0x6802             LDR      R2,[R0, #+0]
   \   00000182   0x2101             MOVS     R1,#+1
   \   00000184   0x2008             MOVS     R0,#+8
   \   00000186   0x.... 0x....      BL       write_6_8_number
    788                          break;
   \   0000018A   0xE08A             B.N      ??change_value_4
    789                          
    790                   case 2:speed_kp+=i;
   \                     ??change_value_6:
   \   0000018C   0x....             LDR.N    R0,??DataTable11_41
   \   0000018E   0x6800             LDR      R0,[R0, #+0]
   \   00000190   0x0031             MOVS     R1,R6
   \   00000192   0x.... 0x....      BL       __aeabi_fadd
   \   00000196   0x....             LDR.N    R1,??DataTable11_41
   \   00000198   0x6008             STR      R0,[R1, #+0]
    791                          LCD_clear_L(9,2);
   \   0000019A   0x2102             MOVS     R1,#+2
   \   0000019C   0x2009             MOVS     R0,#+9
   \   0000019E   0x.... 0x....      BL       LCD_clear_L
    792                          write_6_8_char(0,2,'*');
   \   000001A2   0x222A             MOVS     R2,#+42
   \   000001A4   0x2102             MOVS     R1,#+2
   \   000001A6   0x2000             MOVS     R0,#+0
   \   000001A8   0x.... 0x....      BL       write_6_8_char
    793                          write_6_8_number(9,2,speed_kp); 
   \   000001AC   0x....             LDR.N    R0,??DataTable11_41
   \   000001AE   0x6802             LDR      R2,[R0, #+0]
   \   000001B0   0x2102             MOVS     R1,#+2
   \   000001B2   0x2009             MOVS     R0,#+9
   \   000001B4   0x.... 0x....      BL       write_6_8_number
    794                          break;
   \   000001B8   0xE073             B.N      ??change_value_4
    795                          
    796                   case 3:speed_ki+=0.01*i;
   \                     ??change_value_9:
   \   000001BA   0x....             LDR.N    R0,??DataTable11_43
   \   000001BC   0x6800             LDR      R0,[R0, #+0]
   \   000001BE   0x.... 0x....      BL       __aeabi_f2d
   \   000001C2   0x0004             MOVS     R4,R0
   \   000001C4   0x000D             MOVS     R5,R1
   \   000001C6   0x0030             MOVS     R0,R6
   \   000001C8   0x.... 0x....      BL       __aeabi_f2d
   \   000001CC   0x0002             MOVS     R2,R0
   \   000001CE   0x000B             MOVS     R3,R1
   \   000001D0   0x....             LDR.N    R0,??DataTable11_51  ;; 0x47ae147b
   \   000001D2   0x....             LDR.N    R1,??DataTable11_52  ;; 0x3f847ae1
   \   000001D4   0x.... 0x....      BL       __aeabi_dmul
   \   000001D8   0x0022             MOVS     R2,R4
   \   000001DA   0x002B             MOVS     R3,R5
   \   000001DC   0x.... 0x....      BL       __aeabi_dadd
   \   000001E0   0x.... 0x....      BL       __aeabi_d2f
   \   000001E4   0x....             LDR.N    R1,??DataTable11_43
   \   000001E6   0x6008             STR      R0,[R1, #+0]
    797                          LCD_clear_L(9,3);
   \   000001E8   0x2103             MOVS     R1,#+3
   \   000001EA   0x2009             MOVS     R0,#+9
   \   000001EC   0x.... 0x....      BL       LCD_clear_L
    798                          write_6_8_char(0,3,'*');
   \   000001F0   0x222A             MOVS     R2,#+42
   \   000001F2   0x2103             MOVS     R1,#+3
   \   000001F4   0x2000             MOVS     R0,#+0
   \   000001F6   0x.... 0x....      BL       write_6_8_char
    799                          write_6_8_number(9,3,speed_ki); 
   \   000001FA   0x....             LDR.N    R0,??DataTable11_43
   \   000001FC   0x6802             LDR      R2,[R0, #+0]
   \   000001FE   0x2103             MOVS     R1,#+3
   \   00000200   0x2009             MOVS     R0,#+9
   \   00000202   0x.... 0x....      BL       write_6_8_number
    800                          break; 
   \   00000206   0xE04C             B.N      ??change_value_4
    801                          
    802                   case 4:steer_kp+=0.1*i;
   \                     ??change_value_8:
   \   00000208   0x....             LDR.N    R0,??DataTable11_45
   \   0000020A   0x6800             LDR      R0,[R0, #+0]
   \   0000020C   0x.... 0x....      BL       __aeabi_f2d
   \   00000210   0x0004             MOVS     R4,R0
   \   00000212   0x000D             MOVS     R5,R1
   \   00000214   0x0030             MOVS     R0,R6
   \   00000216   0x.... 0x....      BL       __aeabi_f2d
   \   0000021A   0x0002             MOVS     R2,R0
   \   0000021C   0x000B             MOVS     R3,R1
   \   0000021E   0x....             LDR.N    R0,??DataTable11_49  ;; 0x9999999a
   \   00000220   0x....             LDR.N    R1,??DataTable11_50  ;; 0x3fb99999
   \   00000222   0x.... 0x....      BL       __aeabi_dmul
   \   00000226   0x0022             MOVS     R2,R4
   \   00000228   0x002B             MOVS     R3,R5
   \   0000022A   0x.... 0x....      BL       __aeabi_dadd
   \   0000022E   0x.... 0x....      BL       __aeabi_d2f
   \   00000232   0x....             LDR.N    R1,??DataTable11_45
   \   00000234   0x6008             STR      R0,[R1, #+0]
    803                          LCD_clear_L(9,4);
   \   00000236   0x2104             MOVS     R1,#+4
   \   00000238   0x2009             MOVS     R0,#+9
   \   0000023A   0x.... 0x....      BL       LCD_clear_L
    804                          write_6_8_char(0,4,'*');
   \   0000023E   0x222A             MOVS     R2,#+42
   \   00000240   0x2104             MOVS     R1,#+4
   \   00000242   0x2000             MOVS     R0,#+0
   \   00000244   0x.... 0x....      BL       write_6_8_char
    805                          write_6_8_number(9,4,steer_kp); 
   \   00000248   0x....             LDR.N    R0,??DataTable11_45
   \   0000024A   0x6802             LDR      R2,[R0, #+0]
   \   0000024C   0x2104             MOVS     R1,#+4
   \   0000024E   0x2009             MOVS     R0,#+9
   \   00000250   0x.... 0x....      BL       write_6_8_number
    806                          break;
   \   00000254   0xE025             B.N      ??change_value_4
    807                          
    808                   case 5:steer_kd+=0.1*i;
   \                     ??change_value_10:
   \   00000256   0x....             LDR.N    R0,??DataTable11_47
   \   00000258   0x6800             LDR      R0,[R0, #+0]
   \   0000025A   0x.... 0x....      BL       __aeabi_f2d
   \   0000025E   0x0004             MOVS     R4,R0
   \   00000260   0x000D             MOVS     R5,R1
   \   00000262   0x0030             MOVS     R0,R6
   \   00000264   0x.... 0x....      BL       __aeabi_f2d
   \   00000268   0x0002             MOVS     R2,R0
   \   0000026A   0x000B             MOVS     R3,R1
   \   0000026C   0x....             LDR.N    R0,??DataTable11_49  ;; 0x9999999a
   \   0000026E   0x....             LDR.N    R1,??DataTable11_50  ;; 0x3fb99999
   \   00000270   0x.... 0x....      BL       __aeabi_dmul
   \   00000274   0x0022             MOVS     R2,R4
   \   00000276   0x002B             MOVS     R3,R5
   \   00000278   0x.... 0x....      BL       __aeabi_dadd
   \   0000027C   0x.... 0x....      BL       __aeabi_d2f
   \   00000280   0x....             LDR.N    R1,??DataTable11_47
   \   00000282   0x6008             STR      R0,[R1, #+0]
    809                          LCD_clear_L(9,5);
   \   00000284   0x2105             MOVS     R1,#+5
   \   00000286   0x2009             MOVS     R0,#+9
   \   00000288   0x.... 0x....      BL       LCD_clear_L
    810                          write_6_8_char(0,5,'*');
   \   0000028C   0x222A             MOVS     R2,#+42
   \   0000028E   0x2105             MOVS     R1,#+5
   \   00000290   0x2000             MOVS     R0,#+0
   \   00000292   0x.... 0x....      BL       write_6_8_char
    811                          write_6_8_number(9,5,steer_kd); 
   \   00000296   0x....             LDR.N    R0,??DataTable11_47
   \   00000298   0x6802             LDR      R2,[R0, #+0]
   \   0000029A   0x2105             MOVS     R1,#+5
   \   0000029C   0x2009             MOVS     R0,#+9
   \   0000029E   0x.... 0x....      BL       write_6_8_number
    812                          break; 
    813                   
    814                   
    815                  
    816                          
    817          	      }
    818             
    819             
    820             }
    821          }	 		    
   \                     ??change_value_4:
   \   000002A2   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    822            
    823          /****************************************************
    824                               °´¼üÉ¨Ãèº¯Êý
    825          *****************************************************/
    826          

   \                                 In section .text, align 2, keep-with-next
    827          void KeyScan(void)
    828          {                  
   \                     KeyScan:
   \   00000000   0xB580             PUSH     {R7,LR}
    829           //if(scan_control==0)        //Ñ­»·É¨Ãè
    830            //{
    831            
    832            /////////////////////////////////////////////////////ÇÐÆÁ
    833            if(!change_page)  //Èç¹û¼ì²âµ½µÍµçÆ½£¬ËµÃ÷°´¼ü°´ÏÂ
   \   00000002   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x04C0             LSLS     R0,R0,#+19
   \   00000008   0xD41C             BMI.N    ??KeyScan_0
    834              {
    835                DelayMs(10); //ÑÓÊ±È¥¶¶£¬Ò»°ã10-20ms
   \   0000000A   0x200A             MOVS     R0,#+10
   \   0000000C   0x.... 0x....      BL       DelayMs
    836               if(!change_page)     //ÔÙ´ÎÈ·ÈÏ°´¼üÊÇ·ñ°´ÏÂ£¬Ã»ÓÐ°´ÏÂÔòÍË³ö
   \   00000010   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x04C0             LSLS     R0,R0,#+19
   \   00000016   0xD415             BMI.N    ??KeyScan_0
    837          	     {
    838                 while(!change_page);//Èç¹ûÈ·ÈÏ°´ÏÂ°´¼üµÈ´ý°´¼üÊÍ·Å£¬Ã»ÓÐÊÍ·ÅÔòÒ»Ö±µÈ´ý
   \                     ??KeyScan_1:
   \   00000018   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x04C0             LSLS     R0,R0,#+19
   \   0000001E   0xD5FB             BPL.N    ??KeyScan_1
    839          	           
    840          		   if(page_num<3)    //Ò³ÐòºÅ¼Ó²Ù×÷
   \   00000020   0x....             LDR.N    R0,??DataTable11_1
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x2803             CMP      R0,#+3
   \   00000026   0xD205             BCS.N    ??KeyScan_2
    841          	         page_num++;
   \   00000028   0x....             LDR.N    R0,??DataTable11_1
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x1C40             ADDS     R0,R0,#+1
   \   0000002E   0x....             LDR.N    R1,??DataTable11_1
   \   00000030   0x7008             STRB     R0,[R1, #+0]
   \   00000032   0xE002             B.N      ??KeyScan_3
    842          		   else
    843          		       page_num=0;
   \                     ??KeyScan_2:
   \   00000034   0x....             LDR.N    R0,??DataTable11_1
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x7001             STRB     R1,[R0, #+0]
    844          		   
    845          		   line_num=0;
   \                     ??KeyScan_3:
   \   0000003A   0x....             LDR.N    R0,??DataTable11_30
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
    846          		   pre_show();
   \   00000040   0x.... 0x....      BL       pre_show
    847          
    848          	     }  
    849               }
    850              
    851          
    852           if(page_num!=0&&page_num!=1)     //Èç²»ÎªµÚÒ»Ò³£¬Ôò½øÐÐÏÂÒ»²½É¨Ãè
   \                     ??KeyScan_0:
   \   00000044   0x....             LDR.N    R0,??DataTable11_1
   \   00000046   0x7800             LDRB     R0,[R0, #+0]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xF000 0x808E      BEQ.W    ??KeyScan_4
   \   0000004E   0x....             LDR.N    R0,??DataTable11_1
   \   00000050   0x7800             LDRB     R0,[R0, #+0]
   \   00000052   0x2801             CMP      R0,#+1
   \   00000054   0xF000 0x8089      BEQ.W    ??KeyScan_4
    853           {
    854            /////////////////////////////////////////////////////ÇÐÐÐ
    855            if(!change_line)  //Èç¹û¼ì²âµ½µÍµçÆ½£¬ËµÃ÷°´¼ü°´ÏÂ
   \   00000058   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0x0400             LSLS     R0,R0,#+16
   \   0000005E   0xD42B             BMI.N    ??KeyScan_5
    856              {
    857          	   DelayMs(10); //ÑÓÊ±È¥¶¶£¬Ò»°ã10-20ms
   \   00000060   0x200A             MOVS     R0,#+10
   \   00000062   0x.... 0x....      BL       DelayMs
    858               if(!change_line)     //ÔÙ´ÎÈ·ÈÏ°´¼üÊÇ·ñ°´ÏÂ£¬Ã»ÓÐ°´ÏÂÔòÍË³ö
   \   00000066   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x0400             LSLS     R0,R0,#+16
   \   0000006C   0xD424             BMI.N    ??KeyScan_5
    859          	     {
    860                 while(!change_line);//Èç¹ûÈ·ÈÏ°´ÏÂ°´¼üµÈ´ý°´¼üÊÍ·Å£¬Ã»ÓÐÊÍ·ÅÔòÒ»Ö±µÈ´ý
   \                     ??KeyScan_6:
   \   0000006E   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x0400             LSLS     R0,R0,#+16
   \   00000074   0xD5FB             BPL.N    ??KeyScan_6
    861          	     
    862          	     if(page_num!=0)
   \   00000076   0x....             LDR.N    R0,??DataTable11_1
   \   00000078   0x7800             LDRB     R0,[R0, #+0]
   \   0000007A   0x2800             CMP      R0,#+0
   \   0000007C   0xD005             BEQ.N    ??KeyScan_7
    863          	        write_6_8_char(0,line_num,' ');
   \   0000007E   0x2220             MOVS     R2,#+32
   \   00000080   0x....             LDR.N    R0,??DataTable11_30
   \   00000082   0x7801             LDRB     R1,[R0, #+0]
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x.... 0x....      BL       write_6_8_char
    864          	           
    865          		   if(line_num<5)    //ÐÐÐòºÅ¼Ó²Ù×÷
   \                     ??KeyScan_7:
   \   0000008A   0x....             LDR.N    R0,??DataTable11_30
   \   0000008C   0x7800             LDRB     R0,[R0, #+0]
   \   0000008E   0x2805             CMP      R0,#+5
   \   00000090   0xD205             BCS.N    ??KeyScan_8
    866          	         line_num++;
   \   00000092   0x....             LDR.N    R0,??DataTable11_30
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x1C40             ADDS     R0,R0,#+1
   \   00000098   0x....             LDR.N    R1,??DataTable11_30
   \   0000009A   0x7008             STRB     R0,[R1, #+0]
   \   0000009C   0xE002             B.N      ??KeyScan_9
    867          		   else
    868          		       line_num=0;
   \                     ??KeyScan_8:
   \   0000009E   0x....             LDR.N    R0,??DataTable11_30
   \   000000A0   0x2100             MOVS     R1,#+0
   \   000000A2   0x7001             STRB     R1,[R0, #+0]
    869          		   
    870          		   if(page_num!=0)
   \                     ??KeyScan_9:
   \   000000A4   0x....             LDR.N    R0,??DataTable11_1
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x2800             CMP      R0,#+0
   \   000000AA   0xD005             BEQ.N    ??KeyScan_5
    871          	        write_6_8_char(0,line_num,'*');
   \   000000AC   0x222A             MOVS     R2,#+42
   \   000000AE   0x....             LDR.N    R0,??DataTable11_30
   \   000000B0   0x7801             LDRB     R1,[R0, #+0]
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       write_6_8_char
    872          	     } 
    873          	     
    874             }
    875          /*¶ÔÓ¦²ÎÊý¼ÓÊ®*/
    876          
    877           if(!Add_10)  //Èç¹û¼ì²âµ½µÍµçÆ½£¬ËµÃ÷°´¼ü°´ÏÂ
   \                     ??KeyScan_5:
   \   000000B8   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x0480             LSLS     R0,R0,#+18
   \   000000BE   0xD411             BMI.N    ??KeyScan_10
    878              {
    879          	 DelayMs(10); //ÑÓÊ±È¥¶¶£¬Ò»°ã10-20ms
   \   000000C0   0x200A             MOVS     R0,#+10
   \   000000C2   0x.... 0x....      BL       DelayMs
    880               if(!Add_10)     //ÔÙ´ÎÈ·ÈÏ°´¼üÊÇ·ñ°´ÏÂ£¬Ã»ÓÐ°´ÏÂÔòÍË³ö
   \   000000C6   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0x0480             LSLS     R0,R0,#+18
   \   000000CC   0xD40A             BMI.N    ??KeyScan_10
    881          	   {
    882                while(!Add_10);//Èç¹ûÈ·ÈÏ°´ÏÂ°´¼üµÈ´ý°´¼üÊÍ·Å£¬Ã»ÓÐÊÍ·ÅÔòÒ»Ö±µÈ´ý
   \                     ??KeyScan_11:
   \   000000CE   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0x0480             LSLS     R0,R0,#+18
   \   000000D4   0xD5FB             BPL.N    ??KeyScan_11
    883                  change_value(page_num,line_num,10);
   \   000000D6   0x....             LDR.N    R2,??DataTable11_54  ;; 0x41200000
   \   000000D8   0x....             LDR.N    R0,??DataTable11_30
   \   000000DA   0x7801             LDRB     R1,[R0, #+0]
   \   000000DC   0x....             LDR.N    R0,??DataTable11_1
   \   000000DE   0x7800             LDRB     R0,[R0, #+0]
   \   000000E0   0x.... 0x....      BL       change_value
    884          	   }
    885          	  }
    886          /*¶ÔÓ¦²ÎÊý¼ÓÒ»*/
    887          if(!Add_1)  
   \                     ??KeyScan_10:
   \   000000E4   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0x03C0             LSLS     R0,R0,#+15
   \   000000EA   0xD412             BMI.N    ??KeyScan_12
    888              {
    889          	 DelayMs(10); 
   \   000000EC   0x200A             MOVS     R0,#+10
   \   000000EE   0x.... 0x....      BL       DelayMs
    890               if(!Add_1)
   \   000000F2   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x03C0             LSLS     R0,R0,#+15
   \   000000F8   0xD40B             BMI.N    ??KeyScan_12
    891          	   {
    892                  while(!Add_1);
   \                     ??KeyScan_13:
   \   000000FA   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x03C0             LSLS     R0,R0,#+15
   \   00000100   0xD5FB             BPL.N    ??KeyScan_13
    893                  change_value(page_num,line_num,1);  
   \   00000102   0xF05F 0x527E      MOVS     R2,#+1065353216
   \   00000106   0x....             LDR.N    R0,??DataTable11_30
   \   00000108   0x7801             LDRB     R1,[R0, #+0]
   \   0000010A   0x....             LDR.N    R0,??DataTable11_1
   \   0000010C   0x7800             LDRB     R0,[R0, #+0]
   \   0000010E   0x.... 0x....      BL       change_value
    894          	   }
    895          	  }
    896          /*¶ÔÓ¦²ÎÊý¼õÒ»*/
    897          if(!Sub_1)
   \                     ??KeyScan_12:
   \   00000112   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0x0380             LSLS     R0,R0,#+14
   \   00000118   0xD411             BMI.N    ??KeyScan_14
    898             {
    899            	 DelayMs(10);  
   \   0000011A   0x200A             MOVS     R0,#+10
   \   0000011C   0x.... 0x....      BL       DelayMs
    900               if(!Sub_1)     
   \   00000120   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0x0380             LSLS     R0,R0,#+14
   \   00000126   0xD40A             BMI.N    ??KeyScan_14
    901          	   {
    902                  while(!Sub_1);
   \                     ??KeyScan_15:
   \   00000128   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   0000012A   0x6800             LDR      R0,[R0, #+0]
   \   0000012C   0x0380             LSLS     R0,R0,#+14
   \   0000012E   0xD5FB             BPL.N    ??KeyScan_15
    903                  change_value(page_num,line_num,-1);
   \   00000130   0x....             LDR.N    R2,??DataTable11_55  ;; 0xbf800000
   \   00000132   0x....             LDR.N    R0,??DataTable11_30
   \   00000134   0x7801             LDRB     R1,[R0, #+0]
   \   00000136   0x....             LDR.N    R0,??DataTable11_1
   \   00000138   0x7800             LDRB     R0,[R0, #+0]
   \   0000013A   0x.... 0x....      BL       change_value
    904          	 	 }
    905          	  }
    906          /*¶ÔÓ¦²ÎÊý¼õÊ®*/
    907          if(!Sub_10){
   \                     ??KeyScan_14:
   \   0000013E   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   00000140   0x6800             LDR      R0,[R0, #+0]
   \   00000142   0x0440             LSLS     R0,R0,#+17
   \   00000144   0xD411             BMI.N    ??KeyScan_4
    908            DelayMs(10); 
   \   00000146   0x200A             MOVS     R0,#+10
   \   00000148   0x.... 0x....      BL       DelayMs
    909            if(!Sub_10){
   \   0000014C   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   0000014E   0x6800             LDR      R0,[R0, #+0]
   \   00000150   0x0440             LSLS     R0,R0,#+17
   \   00000152   0xD40A             BMI.N    ??KeyScan_4
    910              while(!Sub_10);
   \                     ??KeyScan_16:
   \   00000154   0x....             LDR.N    R0,??DataTable11_53  ;; 0x400ff090
   \   00000156   0x6800             LDR      R0,[R0, #+0]
   \   00000158   0x0440             LSLS     R0,R0,#+17
   \   0000015A   0xD5FB             BPL.N    ??KeyScan_16
    911              change_value(page_num,line_num,-10);
   \   0000015C   0x....             LDR.N    R2,??DataTable11_56  ;; 0xc1200000
   \   0000015E   0x....             LDR.N    R0,??DataTable11_30
   \   00000160   0x7801             LDRB     R1,[R0, #+0]
   \   00000162   0x....             LDR.N    R0,??DataTable11_1
   \   00000164   0x7800             LDRB     R0,[R0, #+0]
   \   00000166   0x.... 0x....      BL       change_value
    912            }
    913           }
    914          	  
    915          
    916           }
    917          }
   \                     ??KeyScan_4:
   \   0000016A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x56 0x3A          DC8      0x56, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x57 0x3A          DC8      0x57, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x74 0x6D          DC8      "tm:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x53 0x70          DC8      "Sp:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x000186A0         DC32     0x186a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x........         DC32     fontCode8_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x74 0x6D          DC8      "tm:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x38D1B718         DC32     0x38d1b718

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     fontCode6_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     chinese

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x........         DC32     page_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x........         DC32     Pixel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x........         DC32     w

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x........         DC32     `?<Constant "acce:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x........         DC32     acce

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x........         DC32     `?<Constant "Sp :">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     Speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     `?<Constant "RSp:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     RealSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     `?<Constant "L_c:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     Left_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x........         DC32     `?<Constant "R_c:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x........         DC32     Right_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x........         DC32     g_nCarAngle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x........         DC32     acce_angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x........         DC32     g_nLeftCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_17:
   \   00000000   0x........         DC32     g_nRightCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_18:
   \   00000000   0x........         DC32     `?<Constant "latch:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_19:
   \   00000000   0x........         DC32     latch

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_20:
   \   00000000   0x........         DC32     `?<Constant "p_d:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_21:
   \   00000000   0x........         DC32     p_distance

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_22:
   \   00000000   0x........         DC32     IntegrationTime

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_23:
   \   00000000   0x........         DC32     `?<Constant "L_PWM:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_24:
   \   00000000   0x........         DC32     LeftSpeedPwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_25:
   \   00000000   0x........         DC32     `?<Constant "R_PWM:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_26:
   \   00000000   0x........         DC32     RightSpeedPwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_27:
   \   00000000   0x........         DC32     anglePD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_28:
   \   00000000   0x........         DC32     SpeedPID

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_29:
   \   00000000   0x........         DC32     steerpwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_30:
   \   00000000   0x........         DC32     line_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_31:
   \   00000000   0x........         DC32     `?<Constant "ACCE:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_32:
   \   00000000   0x........         DC32     ACCE_STATIC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_33:
   \   00000000   0x........         DC32     `?<Constant "WHITE_C:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_34:
   \   00000000   0x........         DC32     WHITE_CENTER

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_35:
   \   00000000   0x........         DC32     CCD_value

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_36:
   \   00000000   0x........         DC32     `?<Constant "ang_kp:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_37:
   \   00000000   0x........         DC32     angle_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_38:
   \   00000000   0x........         DC32     `?<Constant "ang_kd:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_39:
   \   00000000   0x........         DC32     angle_kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_40:
   \   00000000   0x........         DC32     `?<Constant "sped_kp:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_41:
   \   00000000   0x........         DC32     speed_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_42:
   \   00000000   0x........         DC32     `?<Constant "sped_ki:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_43:
   \   00000000   0x........         DC32     speed_ki

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_44:
   \   00000000   0x........         DC32     `?<Constant "ster_kp:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_45:
   \   00000000   0x........         DC32     steer_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_46:
   \   00000000   0x........         DC32     `?<Constant "ster_kd:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_47:
   \   00000000   0x........         DC32     steer_kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_48:
   \   00000000   0x........         DC32     `?<Constant "Rsp:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_49:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_50:
   \   00000000   0x3FB99999         DC32     0x3fb99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_51:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_52:
   \   00000000   0x3F847AE1         DC32     0x3f847ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_53:
   \   00000000   0x400FF090         DC32     0x400ff090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_54:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_55:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_56:
   \   00000000   0xC1200000         DC32     0xc1200000

   \                                 In section .rodata, align 4
   \   00000000   0x56 0x3A          DC8 "V:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x57 0x3A          DC8 "W:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "acce:">`:
   \   00000000   0x61 0x63          DC8 "acce:"
   \              0x63 0x65    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Sp :">`:
   \   00000000   0x53 0x70          DC8 "Sp :"
   \              0x20 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "RSp:">`:
   \   00000000   0x52 0x53          DC8 "RSp:"
   \              0x70 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "L_c:">`:
   \   00000000   0x4C 0x5F          DC8 "L_c:"
   \              0x63 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "R_c:">`:
   \   00000000   0x52 0x5F          DC8 "R_c:"
   \              0x63 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "latch:">`:
   \   00000000   0x6C 0x61          DC8 "latch:"
   \              0x74 0x63    
   \              0x68 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "p_d:">`:
   \   00000000   0x70 0x5F          DC8 "p_d:"
   \              0x64 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x74 0x6D          DC8 "tm:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "L_PWM:">`:
   \   00000000   0x4C 0x5F          DC8 "L_PWM:"
   \              0x50 0x57    
   \              0x4D 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "R_PWM:">`:
   \   00000000   0x52 0x5F          DC8 "R_PWM:"
   \              0x50 0x57    
   \              0x4D 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ACCE:">`:
   \   00000000   0x41 0x43          DC8 "ACCE:"
   \              0x43 0x45    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x53 0x70          DC8 "Sp:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "WHITE_C:">`:
   \   00000000   0x57 0x48          DC8 "WHITE_C:"
   \              0x49 0x54    
   \              0x45 0x5F    
   \              0x43 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ang_kp:">`:
   \   00000000   0x61 0x6E          DC8 "ang_kp:"
   \              0x67 0x5F    
   \              0x6B 0x70    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "ang_kd:">`:
   \   00000000   0x61 0x6E          DC8 "ang_kd:"
   \              0x67 0x5F    
   \              0x6B 0x64    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "sped_kp:">`:
   \   00000000   0x73 0x70          DC8 "sped_kp:"
   \              0x65 0x64    
   \              0x5F 0x6B    
   \              0x70 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "sped_ki:">`:
   \   00000000   0x73 0x70          DC8 "sped_ki:"
   \              0x65 0x64    
   \              0x5F 0x6B    
   \              0x69 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ster_kp:">`:
   \   00000000   0x73 0x74          DC8 "ster_kp:"
   \              0x65 0x72    
   \              0x5F 0x6B    
   \              0x70 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "ster_kd:">`:
   \   00000000   0x73 0x74          DC8 "ster_kd:"
   \              0x65 0x72    
   \              0x5F 0x6B    
   \              0x64 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Rsp:">`:
   \   00000000   0x52 0x73          DC8 "Rsp:"
   \              0x70 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  DelayMs
        8  Init_LCD
              8 -> Init_LCD5110
              8 -> Init_port
        8  Init_LCD5110
              8 -> DelayMs
              8 -> LCD_clear
              8 -> LCD_write_byte
              8 -> gpio_set
        8  Init_port
              8 -> gpio_init
        8  KeyScan
              8 -> DelayMs
              8 -> change_value
              8 -> pre_show
              8 -> write_6_8_char
       16  LCD_clear
             16 -> LCD_set_XY
             16 -> LCD_write_byte
       16  LCD_clear_L
             16 -> LCD_set_XY
             16 -> LCD_write_byte
        0  LCD_delay
       40  LCD_draw_bmp
             40 -> LCD_set_XY
             40 -> LCD_write_byte
       16  LCD_set_XY
             16 -> LCD_write_byte
       16  LCD_write_byte
             16 -> gpio_set
       24  change_value
             24 -> LCD_clear_L
             24 -> __aeabi_d2f
             24 -> __aeabi_dadd
             24 -> __aeabi_dmul
             24 -> __aeabi_f2d
             24 -> __aeabi_f2iz
             24 -> __aeabi_fadd
             24 -> __aeabi_ui2f
             24 -> write_6_8_char
             24 -> write_6_8_number
        0  longdelay
        8  pre_show
              8 -> LCD_clear
              8 -> LCD_set_XY
              8 -> LCD_write_byte
              8 -> __aeabi_i2f
              8 -> __aeabi_ui2f
              8 -> write_6_8_char
              8 -> write_6_8_number
              8 -> write_6_8_string
        8  redraw
              8 -> LCD_clear_L
              8 -> LCD_set_XY
              8 -> LCD_write_byte
              8 -> __aeabi_i2f
              8 -> __aeabi_ui2f
              8 -> write_6_8_number
              8 -> write_6_8_string
       24  write_6_8_char
             24 -> LCD_set_XY
             24 -> LCD_write_byte
       48  write_6_8_number
             48 -> __aeabi_cfcmple
             48 -> __aeabi_cfrcmple
             48 -> __aeabi_f2iz
             48 -> __aeabi_fmul
             48 -> __aeabi_fsub
             48 -> __aeabi_i2f
             48 -> write_6_8_char
             48 -> write_6_8_string
       24  write_6_8_string
             24 -> LCD_set_XY
             24 -> LCD_write_byte
       24  write_8_16_char
             24 -> LCD_set_XY
             24 -> LCD_write_byte
       48  write_8_16_number
             48 -> __aeabi_cfcmple
             48 -> __aeabi_cfrcmple
             48 -> __aeabi_f2iz
             48 -> __aeabi_fmul
             48 -> __aeabi_fsub
             48 -> __aeabi_i2f
             48 -> write_8_16_char
             48 -> write_8_16_string
       24  write_8_16_string
             24 -> LCD_set_XY
             24 -> LCD_write_byte
       24  write_chinese_char
             24 -> LCD_set_XY
             24 -> LCD_write_byte


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?<Constant "ACCE:">
       8  ?<Constant "L_PWM:">
       8  ?<Constant "L_c:">
       8  ?<Constant "RSp:">
       8  ?<Constant "R_PWM:">
       8  ?<Constant "R_c:">
       8  ?<Constant "Rsp:">
       8  ?<Constant "Sp :">
       4  ?<Constant "Sp:">
       4  ?<Constant "V:">
       4  ?<Constant "W:">
      12  ?<Constant "WHITE_C:">
       8  ?<Constant "acce:">
       8  ?<Constant "ang_kd:">
       8  ?<Constant "ang_kp:">
       8  ?<Constant "latch:">
       8  ?<Constant "p_d:">
      12  ?<Constant "sped_ki:">
      12  ?<Constant "sped_kp:">
      12  ?<Constant "ster_kd:">
      12  ?<Constant "ster_kp:">
       4  ?<Constant "tm:">
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_17
       4  ??DataTable11_18
       4  ??DataTable11_19
       4  ??DataTable11_2
       4  ??DataTable11_20
       4  ??DataTable11_21
       4  ??DataTable11_22
       4  ??DataTable11_23
       4  ??DataTable11_24
       4  ??DataTable11_25
       4  ??DataTable11_26
       4  ??DataTable11_27
       4  ??DataTable11_28
       4  ??DataTable11_29
       4  ??DataTable11_3
       4  ??DataTable11_30
       4  ??DataTable11_31
       4  ??DataTable11_32
       4  ??DataTable11_33
       4  ??DataTable11_34
       4  ??DataTable11_35
       4  ??DataTable11_36
       4  ??DataTable11_37
       4  ??DataTable11_38
       4  ??DataTable11_39
       4  ??DataTable11_4
       4  ??DataTable11_40
       4  ??DataTable11_41
       4  ??DataTable11_42
       4  ??DataTable11_43
       4  ??DataTable11_44
       4  ??DataTable11_45
       4  ??DataTable11_46
       4  ??DataTable11_47
       4  ??DataTable11_48
       4  ??DataTable11_49
       4  ??DataTable11_5
       4  ??DataTable11_50
       4  ??DataTable11_51
       4  ??DataTable11_52
       4  ??DataTable11_53
       4  ??DataTable11_54
       4  ??DataTable11_55
       4  ??DataTable11_56
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
      30  DelayMs
      12  Init_LCD
     130  Init_LCD5110
     160  Init_port
     364  KeyScan
      48  LCD_clear
      44  LCD_clear_L
      14  LCD_delay
     124  LCD_draw_bmp
      32  LCD_set_XY
     118  LCD_write_byte
     678  change_value
      96  chinese
     572  fontCode6_8
    1520  fontCode8_16
       1  line_num
      16  longdelay
       1  page_num
     952  pre_show
       1  re_display
     704  redraw
      64  write_6_8_char
     380  write_6_8_number
      76  write_6_8_string
     108  write_8_16_char
     380  write_8_16_number
     130  write_8_16_string
     112  write_chinese_char

 
     2 bytes in section .bss
     1 byte  in section .data
 2 368 bytes in section .rodata
 4 944 bytes in section .text
 
 4 944 bytes of CODE  memory
 2 368 bytes of CONST memory
     3 bytes of DATA  memory

Errors: none
Warnings: none
