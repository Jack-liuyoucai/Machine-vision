###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.1.7305/W32 for ARM        11/Jul/2014  10:44:34
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        F:\¡ı”—≤≈ (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\oled\oled.c
#    Command line =  
#        "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\oled\oled.c" -D IAR -D
#        TWR_K60N512 -D DEBUG -lCN "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\FLASH\List\" -lB "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\FLASH\List\" -o "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\FLASH\Obj\" --no_cse --no_unroll
#        --no_inline --no_code_motion --no_tbaa --no_clustering --no_scheduling
#        --debug --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        D:\IAR\arm\INC\c\DLib_Config_Normal.h -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Cpu\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\App\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\adc\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\delay\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\FTM\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\gpio\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\lptmr\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\mcg\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\PIT\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\uart\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\oled\" -I "F:\¡ı”—≤≈
#        (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\spi\" -On
#        --use_c++_inline
#    List file    =  F:\¡ı”—≤≈ (H)\∑…Àºø®∂˚\liuyoucai\7.11\FLASH\List\oled.lst
#    Object file  =  F:\¡ı”—≤≈ (H)\∑…Àºø®∂˚\liuyoucai\7.11\FLASH\Obj\oled.o
#
###############################################################################

F:\¡ı”—≤≈ (H)\∑…Àºø®∂˚\liuyoucai\7.11\src\Sources\Drivers\oled\oled.c
      1          #include "include.h"
      2          #include "oled.h"
      3          
      4          #define X_WIDTH 128
      5          #define Y_WIDTH 64
      6          
      7          #define  LED_IMAGE_WHITE 255
      8          
      9          extern float V;
     10          extern float angle_kp;
     11          extern float angle_kd;
     12          extern float RealSpeed;
     13          extern float acce_angle;
     14          extern float speed_kp;
     15          extern float speed_ki;
     16          extern int16 g_nLeftCount;
     17          extern int16 g_nRightCount;
     18          extern int16 ft1;
     19          extern float  GYRO_STATIC;
     20          
     21          extern float steer_kp;
     22          extern float steer_kd;
     23          
     24          extern float g_nCarAngle;
     25          extern float acce,w;
     26          extern float GYRO_STATIC,ACCE_STATIC;           //¡„µ„∆´“∆¡ø
     27          extern float LeftRealSpeed,RightRealSpeed;
     28          
     29          extern int16 fanting;
     30          extern int8 IntegrationTime;
     31          extern int16 LeftSpeedPwm;
     32          extern int16 RightSpeedPwm;
     33          extern int16 anglePD;
     34          extern int16 SpeedPIDout;
     35          extern int16 steerpwmout;
     36          extern uint8 control_top_whiteline;
     37          //extern uint16 error_servo_ref_p; 
     38          //extern uint16 error_servo_ref_d;   
     39          extern int16 lcd_ref_p1 ; 
     40          extern int16 lcd_ref_d1; 
     41          extern int16 lcd_ref_p2 ; 
     42          extern int16 lcd_ref_d2; 
     43          extern int16 zhongjian;
     44          //extern uint16 big;
     45          extern int16 tingting_p;
     46          extern int16 tingting_d;
     47          extern uint8 huanjie;
     48          extern uint8 qing;
     49          extern  uint8 summ;
     50          extern uint8 da;
     51          extern uint8 fuxiao;

   \                                 In section .bss, align 4
     52          uint8 g_aucImageTable[60][128]; //”√”⁄‘⁄OLED∆¡…œœ‘ æµƒÕº∆¨ª∫¥Ê
   \                     g_aucImageTable:
   \   00000000                      DS8 7680
     53          
     54          //extern uint8  Rg;
     55          extern uint16 Speed_set;
     56          extern uint16 stopcount;
     57          extern char delaytime;
     58          
     59          extern uint8 WHITE_BLACK_OT;  

   \                                 In section .bss, align 1
     60          unsigned char page_num=0;     //“≥–Ú∫≈
   \                     page_num:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     61          unsigned char line_num=0;     //–––Ú∫≈
   \                     line_num:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
     62          unsigned char re_display=1;   //‘§œ‘ æ±Í÷æŒª
   \                     re_display:
   \   00000000   0x01               DC8 1
     63          
     64          
     65          
     66          
     67          
     68          //======================================
     69          // 128X64I“∫æßµ◊≤„«˝∂Ø[6X8]◊÷ÃÂø‚

   \                                 In section .rodata, align 4
     70          const unsigned char F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     71          {
     72              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     73              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     74              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     75              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     76              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     77              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     78              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     79              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     80              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     81              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     82              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     83              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     84              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
     85              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
     86              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
     87              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
     88              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
     89              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
     90              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
     91              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
     92              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
     93              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
     94              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
     95              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
     96              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
     97              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
     98              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
     99              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
    100              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
    101              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
    102              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
    103              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
    104              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
    105              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
    106              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
    107              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
    108              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
    109              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
    110              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
    111              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
    112              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
    113              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
    114              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
    115              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
    116              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
    117              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
    118              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    119              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    120              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    121              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    122              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    123              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    124              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    125              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    126              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    127              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    128              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    129              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    130              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    131              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    132              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    133              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    134              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    135              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    136              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    137              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    138              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    139              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    140              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    141              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    142              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    143              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    144              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    145              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    146              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    147              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    148              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    149              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    150              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    151              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    152              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    153              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    154              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    155              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    156              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    157              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    158              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    159              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    160              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    161              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    162              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    163              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    164          };
    165          //======================================================
    166          // 128X64I“∫æßµ◊≤„«˝∂Ø[8X16]◊÷ÃÂø‚
    167          // …Ëº∆’ﬂ: powerint
    168          // √Ë   ˆ: [8X16]Œ˜Œƒ◊÷∑˚µƒ◊÷ƒ£ ˝æ› (◊›œÚ»°ƒ£,◊÷Ω⁄µπ–Ú)
    169          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    170          //======================================================

   \                                 In section .rodata, align 4
    171          const unsigned char F8X16[]=
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    172          {
    173            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    174            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    175            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    176            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    177            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    178            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    179            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    180            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    181            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    182            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    183            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    184            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    185            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    186            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    187            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    188            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    189            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    190            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    191            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    192            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    193            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    194            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    195            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    196            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    197            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    198            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    199            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    200            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    201            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    202            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    203            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    204            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    205            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    206            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    207            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    208            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    209            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    210            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    211            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    212            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    213            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    214            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    215            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    216            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    217            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    218            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    219            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    220            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    221            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    222            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    223            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    224            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    225            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    226            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    227            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    228            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    229            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    230            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    231            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    232            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    233            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    234            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    235            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    236            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    237            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    238            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    239            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    240            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    241            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    242            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    243            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    244            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    245            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    246            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    247            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    248            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    249            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    250            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    251            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    252            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    253            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    254            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    255            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    256            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    257            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    258            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
    259            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    260            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    261            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    262            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    263            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    264            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    265            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    266            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    267            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    268          
    269          };
    270          
    271          

   \                                 In section .text, align 4, keep-with-next
    272          void LCD_WrDat(byte data)
    273          {
    274                  byte i=8;
   \                     LCD_WrDat: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
    275          	GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(7));
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF052 0x0280      ORRS     R2,R2,#0x80
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   00000010   0x601A             STR      R2,[R3, #+0]
    276                  asm("nop");
   \   00000012   0xBF00             nop
    277                  asm("nop");
   \   00000014   0xBF00             nop
    278                  asm("nop");
   \   00000016   0xBF00             nop
    279                  asm("nop");
   \   00000018   0xBF00             nop
    280                  asm("nop");
   \   0000001A   0xBF00             nop
    281                  GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(10));
   \   0000001C   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000020   0x6812             LDR      R2,[R2, #+0]
   \   00000022   0xF432 0x6280      BICS     R2,R2,#0x400
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   0000002A   0x601A             STR      R2,[R3, #+0]
    282                  asm("nop");
   \   0000002C   0xBF00             nop
    283                  asm("nop");
   \   0000002E   0xBF00             nop
    284                  asm("nop");
   \   00000030   0xBF00             nop
    285                  asm("nop");
   \   00000032   0xBF00             nop
    286                  asm("nop");    
   \   00000034   0xBF00             nop
    287                  while(i--)
   \                     ??LCD_WrDat_0: (+1)
   \   00000036   0x000A             MOVS     R2,R1
   \   00000038   0x1E51             SUBS     R1,R2,#+1
   \   0000003A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000003C   0x2A00             CMP      R2,#+0
   \   0000003E   0xD029             BEQ.N    ??LCD_WrDat_1
    288                  {
    289                  if(data&0x80){GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(9));}
   \   00000040   0x0602             LSLS     R2,R0,#+24
   \   00000042   0xD508             BPL.N    ??LCD_WrDat_2
   \   00000044   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000048   0x6812             LDR      R2,[R2, #+0]
   \   0000004A   0xF452 0x7200      ORRS     R2,R2,#0x200
   \   0000004E   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   00000052   0x601A             STR      R2,[R3, #+0]
   \   00000054   0xE007             B.N      ??LCD_WrDat_3
    290                  else{GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(9));}
   \                     ??LCD_WrDat_2: (+1)
   \   00000056   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   0000005A   0x6812             LDR      R2,[R2, #+0]
   \   0000005C   0xF432 0x7200      BICS     R2,R2,#0x200
   \   00000060   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   00000064   0x601A             STR      R2,[R3, #+0]
    291                  GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(10)); 
   \                     ??LCD_WrDat_3: (+1)
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   0000006A   0x6812             LDR      R2,[R2, #+0]
   \   0000006C   0xF452 0x6280      ORRS     R2,R2,#0x400
   \   00000070   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   00000074   0x601A             STR      R2,[R3, #+0]
    292                  asm("nop");
   \   00000076   0xBF00             nop
    293                  asm("nop");
   \   00000078   0xBF00             nop
    294                  asm("nop");
   \   0000007A   0xBF00             nop
    295                  asm("nop");
   \   0000007C   0xBF00             nop
    296                  asm("nop");           
   \   0000007E   0xBF00             nop
    297                  GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(10));   
   \   00000080   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000084   0x6812             LDR      R2,[R2, #+0]
   \   00000086   0xF432 0x6280      BICS     R2,R2,#0x400
   \   0000008A   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   0000008E   0x601A             STR      R2,[R3, #+0]
    298                  data<<=1;    
   \   00000090   0x0040             LSLS     R0,R0,#+1
   \   00000092   0xE7D0             B.N      ??LCD_WrDat_0
    299            }
    300          }
   \                     ??LCD_WrDat_1: (+1)
   \   00000094   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
    301          void LCD_WrCmd(byte cmd)
    302          {
    303               byte i=8;
   \                     LCD_WrCmd: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
    304               GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(7));
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF032 0x0280      BICS     R2,R2,#0x80
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   00000010   0x601A             STR      R2,[R3, #+0]
    305               GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(10));
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0xF432 0x6280      BICS     R2,R2,#0x400
   \   0000001C   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   00000020   0x601A             STR      R2,[R3, #+0]
    306               while(i--)
   \                     ??LCD_WrCmd_0: (+1)
   \   00000022   0x000A             MOVS     R2,R1
   \   00000024   0x1E51             SUBS     R1,R2,#+1
   \   00000026   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000028   0x2A00             CMP      R2,#+0
   \   0000002A   0xD029             BEQ.N    ??LCD_WrCmd_1
    307               {
    308               if(cmd&0x80){GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(9));}
   \   0000002C   0x0602             LSLS     R2,R0,#+24
   \   0000002E   0xD508             BPL.N    ??LCD_WrCmd_2
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000034   0x6812             LDR      R2,[R2, #+0]
   \   00000036   0xF452 0x7200      ORRS     R2,R2,#0x200
   \   0000003A   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   0000003E   0x601A             STR      R2,[R3, #+0]
   \   00000040   0xE007             B.N      ??LCD_WrCmd_3
    309               else{GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(9));}
   \                     ??LCD_WrCmd_2: (+1)
   \   00000042   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000046   0x6812             LDR      R2,[R2, #+0]
   \   00000048   0xF432 0x7200      BICS     R2,R2,#0x200
   \   0000004C   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   00000050   0x601A             STR      R2,[R3, #+0]
    310               GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(10));
   \                     ??LCD_WrCmd_3: (+1)
   \   00000052   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000056   0x6812             LDR      R2,[R2, #+0]
   \   00000058   0xF452 0x6280      ORRS     R2,R2,#0x400
   \   0000005C   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   00000060   0x601A             STR      R2,[R3, #+0]
    311                asm("nop");
   \   00000062   0xBF00             nop
    312                asm("nop");
   \   00000064   0xBF00             nop
    313                asm("nop");
   \   00000066   0xBF00             nop
    314                asm("nop");
   \   00000068   0xBF00             nop
    315                asm("nop");          
   \   0000006A   0xBF00             nop
    316               GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(10));    
   \   0000006C   0x.... 0x....      LDR.W    R2,??DataTable9  ;; 0x400ff080
   \   00000070   0x6812             LDR      R2,[R2, #+0]
   \   00000072   0xF432 0x6280      BICS     R2,R2,#0x400
   \   00000076   0x.... 0x....      LDR.W    R3,??DataTable9  ;; 0x400ff080
   \   0000007A   0x601A             STR      R2,[R3, #+0]
    317               cmd<<=1;   
   \   0000007C   0x0040             LSLS     R0,R0,#+1
   \   0000007E   0xE7D0             B.N      ??LCD_WrCmd_0
    318             } 	
    319          }
   \                     ??LCD_WrCmd_1: (+1)
   \   00000080   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    320          void LCD_Set_Pos(byte x, byte y)
    321          { 
   \                     LCD_Set_Pos: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    322            LCD_WrCmd(0xb0+y);
   \   00000006   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       LCD_WrCmd
    323            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x0920             LSRS     R0,R4,#+4
   \   00000014   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x.... 0x....      BL       LCD_WrCmd
    324            LCD_WrCmd((x&0x0f)|0x01); 
   \   0000001E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000022   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x.... 0x....      BL       LCD_WrCmd
    325          } 
   \   0000002C   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    326          void LCD_Fill(byte bmp_data)
    327          {
   \                     LCD_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    328          	byte y,x;
    329          	
    330          	for(y=0;y<8;y++)
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x0005             MOVS     R5,R0
   \                     ??LCD_Fill_0: (+1)
   \   00000008   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000A   0x2D08             CMP      R5,#+8
   \   0000000C   0xDA17             BGE.N    ??LCD_Fill_1
    331          	{
    332          		LCD_WrCmd(0xb0+y);
   \   0000000E   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       LCD_WrCmd
    333          		LCD_WrCmd(0x01);
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       LCD_WrCmd
    334          		LCD_WrCmd(0x10);
   \   0000001E   0x2010             MOVS     R0,#+16
   \   00000020   0x.... 0x....      BL       LCD_WrCmd
    335          		for(x=0;x<X_WIDTH;x++)
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x0006             MOVS     R6,R0
   \                     ??LCD_Fill_2: (+1)
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x2E80             CMP      R6,#+128
   \   0000002C   0xDA05             BGE.N    ??LCD_Fill_3
    336          			LCD_WrDat(bmp_data);
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x.... 0x....      BL       LCD_WrDat
   \   00000036   0x1C76             ADDS     R6,R6,#+1
   \   00000038   0xE7F6             B.N      ??LCD_Fill_2
    337          	}
   \                     ??LCD_Fill_3: (+1)
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \   0000003C   0xE7E4             B.N      ??LCD_Fill_0
    338          }
   \                     ??LCD_Fill_1: (+1)
   \   0000003E   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    339          void LCD_CLS(void)
    340          {
   \                     LCD_CLS: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    341          	byte y,x;	
    342          	for(y=0;y<8;y++)
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x0004             MOVS     R4,R0
   \                     ??LCD_CLS_0: (+1)
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C08             CMP      R4,#+8
   \   0000000A   0xDA16             BGE.N    ??LCD_CLS_1
    343          	{
    344          		LCD_WrCmd(0xb0+y);
   \   0000000C   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       LCD_WrCmd
    345          		LCD_WrCmd(0x01);
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    346          		LCD_WrCmd(0x10); 
   \   0000001C   0x2010             MOVS     R0,#+16
   \   0000001E   0x.... 0x....      BL       LCD_WrCmd
    347          		for(x=0;x<X_WIDTH;x++)
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x0005             MOVS     R5,R0
   \                     ??LCD_CLS_2: (+1)
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0x2D80             CMP      R5,#+128
   \   0000002A   0xDA04             BGE.N    ??LCD_CLS_3
    348                          {   
    349          			LCD_WrDat(0);
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       LCD_WrDat
    350          
    351                          }
   \   00000032   0x1C6D             ADDS     R5,R5,#+1
   \   00000034   0xE7F7             B.N      ??LCD_CLS_2
    352                  }
   \                     ??LCD_CLS_3: (+1)
   \   00000036   0x1C64             ADDS     R4,R4,#+1
   \   00000038   0xE7E5             B.N      ??LCD_CLS_0
    353          }
   \                     ??LCD_CLS_1: (+1)
   \   0000003A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    354          void LCD_clear_L(unsigned char x,unsigned char y)
    355          {
   \                     LCD_clear_L: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    356          	LCD_WrCmd(0xb0+y);
   \   00000006   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       LCD_WrCmd
    357          	LCD_WrCmd(0x01);
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       LCD_WrCmd
    358          	LCD_WrCmd(0x10); 
   \   00000016   0x2010             MOVS     R0,#+16
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    359                  LCD_Set_Pos(x,y);
   \   0000001C   0x0029             MOVS     R1,R5
   \   0000001E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x.... 0x....      BL       LCD_Set_Pos
    360          	for(;x<X_WIDTH;x++)
   \                     ??LCD_clear_L_0: (+1)
   \   00000028   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002A   0x2C80             CMP      R4,#+128
   \   0000002C   0xDA04             BGE.N    ??LCD_clear_L_1
    361                  {
    362          		LCD_WrDat(0);	
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      BL       LCD_WrDat
    363                  }
   \   00000034   0x1C64             ADDS     R4,R4,#+1
   \   00000036   0xE7F7             B.N      ??LCD_clear_L_0
    364          }
   \                     ??LCD_clear_L_1: (+1)
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    365          void LCD_DLY_ms(word ms)
    366          {                         
    367            word a;
    368            while(ms)
   \                     LCD_DLY_ms: (+1)
   \                     ??LCD_DLY_ms_0: (+1)
   \   00000000   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD009             BEQ.N    ??LCD_DLY_ms_1
    369            {
    370              a=10000;
   \   00000006   0xF242 0x7210      MOVW     R2,#+10000
   \   0000000A   0x0011             MOVS     R1,R2
    371              while(a--);
   \                     ??LCD_DLY_ms_2: (+1)
   \   0000000C   0x000A             MOVS     R2,R1
   \   0000000E   0x1E51             SUBS     R1,R2,#+1
   \   00000010   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000012   0x2A00             CMP      R2,#+0
   \   00000014   0xD1FA             BNE.N    ??LCD_DLY_ms_2
    372              ms--;
   \   00000016   0x1E40             SUBS     R0,R0,#+1
   \   00000018   0xE7F2             B.N      ??LCD_DLY_ms_0
    373            }
    374            return;
   \                     ??LCD_DLY_ms_1: (+1)
   \   0000001A   0x4770             BX       LR               ;; return
    375          }
    376          

   \                                 In section .text, align 2, keep-with-next
    377          void LCD_Init(void)        
    378          {
   \                     LCD_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    379                  // pin10,pin9Œ™GPIOø⁄ 
    380          	PORTC_PCR10=(0|PORT_PCR_MUX(1));
   \   00000002   0xF44F 0x7080      MOV      R0,#+256
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x4004b028
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    381          	PORTC_PCR9=(0|PORT_PCR_MUX(1)); 
   \   0000000C   0xF44F 0x7080      MOV      R0,#+256
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable9_2  ;; 0x4004b024
   \   00000014   0x6008             STR      R0,[R1, #+0]
    382          	PORTC_PCR8=(0|PORT_PCR_MUX(1));
   \   00000016   0xF44F 0x7080      MOV      R0,#+256
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x4004b020
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    383          	PORTC_PCR7=(0|PORT_PCR_MUX(1)); 
   \   00000020   0xF44F 0x7080      MOV      R0,#+256
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable9_4  ;; 0x4004b01c
   \   00000028   0x6008             STR      R0,[R1, #+0]
    384          	
    385          	GPIOC_PDDR=GPIO_PDDR_PDD(GPIO_PIN(10)|GPIO_PIN(9)|GPIO_PIN(8)|GPIO_PIN(7));
   \   0000002A   0xF44F 0x60F0      MOV      R0,#+1920
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable9_5  ;; 0x400ff094
   \   00000032   0x6008             STR      R0,[R1, #+0]
    386          	
    387          	GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(10)); 	
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff080
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x400ff080
   \   00000042   0x6008             STR      R0,[R1, #+0]
    388          	
    389          	GPIOC_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(8));
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff080
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF430 0x7080      BICS     R0,R0,#0x100
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x400ff080
   \   00000052   0x6008             STR      R0,[R1, #+0]
    390          	LCD_DLY_ms(100);
   \   00000054   0x2064             MOVS     R0,#+100
   \   00000056   0x.... 0x....      BL       LCD_DLY_ms
    391          	GPIOC_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(8));
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x400ff080
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x400ff080
   \   00000068   0x6008             STR      R0,[R1, #+0]
    392                  
    393                     
    394                  gpio_init  (PORTA, 19, GPI_UP, HIGH); //∑≠“≥   
   \   0000006A   0x2301             MOVS     R3,#+1
   \   0000006C   0x2203             MOVS     R2,#+3
   \   0000006E   0x2113             MOVS     R1,#+19
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x.... 0x....      BL       gpio_init
    395                  gpio_init  (PORTA, 17, GPI_UP, HIGH);  
   \   00000076   0x2301             MOVS     R3,#+1
   \   00000078   0x2203             MOVS     R2,#+3
   \   0000007A   0x2111             MOVS     R1,#+17
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x.... 0x....      BL       gpio_init
    396                  gpio_init  (PORTB, 0, GPI_UP, HIGH);   
   \   00000082   0x2301             MOVS     R3,#+1
   \   00000084   0x2203             MOVS     R2,#+3
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x.... 0x....      BL       gpio_init
    397                  gpio_init  (PORTA, 28, GPI_UP, HIGH);   
   \   0000008E   0x2301             MOVS     R3,#+1
   \   00000090   0x2203             MOVS     R2,#+3
   \   00000092   0x211C             MOVS     R1,#+28
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x.... 0x....      BL       gpio_init
    398                  gpio_init  (PORTB, 1, GPI_UP, HIGH);
   \   0000009A   0x2301             MOVS     R3,#+1
   \   0000009C   0x2203             MOVS     R2,#+3
   \   0000009E   0x2101             MOVS     R1,#+1
   \   000000A0   0x2001             MOVS     R0,#+1
   \   000000A2   0x.... 0x....      BL       gpio_init
    399                  gpio_init  (PORTA, 29, GPI_UP, HIGH); 
   \   000000A6   0x2301             MOVS     R3,#+1
   \   000000A8   0x2203             MOVS     R2,#+3
   \   000000AA   0x211D             MOVS     R1,#+29
   \   000000AC   0x2000             MOVS     R0,#+0
   \   000000AE   0x.... 0x....      BL       gpio_init
    400             
    401          
    402            LCD_WrCmd(0xae);//--turn off oled panel
   \   000000B2   0x20AE             MOVS     R0,#+174
   \   000000B4   0x.... 0x....      BL       LCD_WrCmd
    403            LCD_WrCmd(0x00);//---set low column address
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      BL       LCD_WrCmd
    404            LCD_WrCmd(0x10);//---set high column address
   \   000000BE   0x2010             MOVS     R0,#+16
   \   000000C0   0x.... 0x....      BL       LCD_WrCmd
    405            LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   000000C4   0x2040             MOVS     R0,#+64
   \   000000C6   0x.... 0x....      BL       LCD_WrCmd
    406            LCD_WrCmd(0x81);//--set contrast control register
   \   000000CA   0x2081             MOVS     R0,#+129
   \   000000CC   0x.... 0x....      BL       LCD_WrCmd
    407            LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
   \   000000D0   0x20CF             MOVS     R0,#+207
   \   000000D2   0x.... 0x....      BL       LCD_WrCmd
    408            LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0◊Û”“∑¥÷√ 0xa1’˝≥£
   \   000000D6   0x20A1             MOVS     R0,#+161
   \   000000D8   0x.... 0x....      BL       LCD_WrCmd
    409            LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0…œœ¬∑¥÷√ 0xc8’˝≥£
   \   000000DC   0x20C8             MOVS     R0,#+200
   \   000000DE   0x.... 0x....      BL       LCD_WrCmd
    410            LCD_WrCmd(0xa6);//--set normal display
   \   000000E2   0x20A6             MOVS     R0,#+166
   \   000000E4   0x.... 0x....      BL       LCD_WrCmd
    411            LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
   \   000000E8   0x20A8             MOVS     R0,#+168
   \   000000EA   0x.... 0x....      BL       LCD_WrCmd
    412            LCD_WrCmd(0x3f);//--1/64 duty
   \   000000EE   0x203F             MOVS     R0,#+63
   \   000000F0   0x.... 0x....      BL       LCD_WrCmd
    413            LCD_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   000000F4   0x20D3             MOVS     R0,#+211
   \   000000F6   0x.... 0x....      BL       LCD_WrCmd
    414            LCD_WrCmd(0x00);//-not offset
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x.... 0x....      BL       LCD_WrCmd
    415            LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
   \   00000100   0x20D5             MOVS     R0,#+213
   \   00000102   0x.... 0x....      BL       LCD_WrCmd
    416            LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   00000106   0x2080             MOVS     R0,#+128
   \   00000108   0x.... 0x....      BL       LCD_WrCmd
    417            LCD_WrCmd(0xd9);//--set pre-charge period
   \   0000010C   0x20D9             MOVS     R0,#+217
   \   0000010E   0x.... 0x....      BL       LCD_WrCmd
    418            LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   00000112   0x20F1             MOVS     R0,#+241
   \   00000114   0x.... 0x....      BL       LCD_WrCmd
    419            LCD_WrCmd(0xda);//--set com pins hardware configuration
   \   00000118   0x20DA             MOVS     R0,#+218
   \   0000011A   0x.... 0x....      BL       LCD_WrCmd
    420            LCD_WrCmd(0x12);
   \   0000011E   0x2012             MOVS     R0,#+18
   \   00000120   0x.... 0x....      BL       LCD_WrCmd
    421            LCD_WrCmd(0xdb);//--set vcomh
   \   00000124   0x20DB             MOVS     R0,#+219
   \   00000126   0x.... 0x....      BL       LCD_WrCmd
    422            LCD_WrCmd(0x40);//Set VCOM Deselect Level
   \   0000012A   0x2040             MOVS     R0,#+64
   \   0000012C   0x.... 0x....      BL       LCD_WrCmd
    423            LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   00000130   0x2020             MOVS     R0,#+32
   \   00000132   0x.... 0x....      BL       LCD_WrCmd
    424            LCD_WrCmd(0x02);//
   \   00000136   0x2002             MOVS     R0,#+2
   \   00000138   0x.... 0x....      BL       LCD_WrCmd
    425            LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
   \   0000013C   0x208D             MOVS     R0,#+141
   \   0000013E   0x.... 0x....      BL       LCD_WrCmd
    426            LCD_WrCmd(0x14);//--set(0x10) disable
   \   00000142   0x2014             MOVS     R0,#+20
   \   00000144   0x.... 0x....      BL       LCD_WrCmd
    427            LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
   \   00000148   0x20A4             MOVS     R0,#+164
   \   0000014A   0x.... 0x....      BL       LCD_WrCmd
    428            LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
   \   0000014E   0x20A6             MOVS     R0,#+166
   \   00000150   0x.... 0x....      BL       LCD_WrCmd
    429            LCD_WrCmd(0xaf);//--turn on oled panel
   \   00000154   0x20AF             MOVS     R0,#+175
   \   00000156   0x.... 0x....      BL       LCD_WrCmd
    430            LCD_Fill(0x00);  //≥ı º«Â∆¡
   \   0000015A   0x2000             MOVS     R0,#+0
   \   0000015C   0x.... 0x....      BL       LCD_Fill
    431            LCD_Set_Pos(0,0);  
   \   00000160   0x2100             MOVS     R1,#+0
   \   00000162   0x2000             MOVS     R0,#+0
   \   00000164   0x.... 0x....      BL       LCD_Set_Pos
    432          	
    433          } 
   \   00000168   0xBD01             POP      {R0,PC}          ;; return
    434          //==============================================================
    435          //∫Ø ˝√˚£∫ void LCD_PutPixel(byte x,byte y)
    436          //π¶ƒ‹√Ë ˆ£∫ªÊ÷∆“ª∏ˆµ„£®x,y£©
    437          //≤Œ ˝£∫’Ê µ◊¯±Í÷µ(x,y),xµƒ∑∂Œß0°´127£¨yµƒ∑∂Œß0°´64
    438          //∑µªÿ£∫Œﬁ
    439          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    440          void LCD_PutPixel(byte x,byte y)
    441          {
   \                     LCD_PutPixel: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    442          	byte data1;  //data1µ±«∞µ„µƒ ˝æ› 
    443          	 
    444                  LCD_Set_Pos(x,y); 
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_Set_Pos
    445          	data1 = 0x01<<(y%8); 	
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2108             MOVS     R1,#+8
   \   00000018   0xFB95 0xF2F1      SDIV     R2,R5,R1
   \   0000001C   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   00000020   0x4090             LSLS     R0,R0,R2
   \   00000022   0x0006             MOVS     R6,R0
    446          	LCD_WrCmd(0xb0+(y>>3));
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x08E8             LSRS     R0,R5,#+3
   \   00000028   0x3850             SUBS     R0,R0,#+80
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
    447          	LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0920             LSRS     R0,R4,#+4
   \   00000034   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       LCD_WrCmd
    448          	LCD_WrCmd((x&0x0f)|0x00);
   \   0000003E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000042   0x.... 0x....      BL       LCD_WrCmd
    449          	LCD_WrDat(data1); 	 	
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       LCD_WrDat
    450          }
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    451          //==============================================================
    452          //∫Ø ˝√˚£∫ void LCD_Rectangle(byte x1,byte y1,
    453          //                   byte x2,byte y2,byte color,byte gif)
    454          //π¶ƒ‹√Ë ˆ£∫ªÊ÷∆“ª∏ˆ µ–ƒæÿ–Œ
    455          //≤Œ ˝£∫◊Û…œΩ«◊¯±Í£®x1,y1£©,”“œ¬Ω«◊¯±Í£®x2£¨y2£©
    456          //      ∆‰÷–x1°¢x2µƒ∑∂Œß0°´127£¨y1£¨y2µƒ∑∂Œß0°´63£¨º¥’Ê µ◊¯±Í÷µ
    457          //∑µªÿ£∫Œﬁ
    458          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    459          void LCD_Rectangle(byte x1,byte y1,byte x2,byte y2,byte gif)
    460          {
   \                     LCD_Rectangle: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C08             LDR      R4,[SP, #+32]
    461          	byte n; 
    462          		
    463          	LCD_Set_Pos(x1,y1>>3);
   \   0000000E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000010   0x08F1             LSRS     R1,R6,#+3
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       LCD_Set_Pos
    464          	for(n=x1;n<=x2;n++)
   \   0000001A   0x46A9             MOV      R9,R5
   \                     ??LCD_Rectangle_0: (+1)
   \   0000001C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000022   0x454F             CMP      R7,R9
   \   00000024   0xD313             BCC.N    ??LCD_Rectangle_1
    465          	{
    466          		LCD_WrDat(0x01<<(y1%8)); 			
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x2108             MOVS     R1,#+8
   \   0000002C   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000030   0xFB02 0x6211      MLS      R2,R2,R1,R6
   \   00000034   0x4090             LSLS     R0,R0,R2
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x.... 0x....      BL       LCD_WrDat
    467          		if(gif == 1) 	LCD_DLY_ms(50);
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x2C01             CMP      R4,#+1
   \   00000040   0xD102             BNE.N    ??LCD_Rectangle_2
   \   00000042   0x2032             MOVS     R0,#+50
   \   00000044   0x.... 0x....      BL       LCD_DLY_ms
    468          	}  
   \                     ??LCD_Rectangle_2: (+1)
   \   00000048   0xF119 0x0901      ADDS     R9,R9,#+1
   \   0000004C   0xE7E6             B.N      ??LCD_Rectangle_0
    469          	LCD_Set_Pos(x1,y2>>3);
   \                     ??LCD_Rectangle_1: (+1)
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEA5F 0x01D8      LSRS     R1,R8,#+3
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       LCD_Set_Pos
    470                  for(n=x1;n<=x2;n++)
   \   0000005E   0x46A9             MOV      R9,R5
   \                     ??LCD_Rectangle_3: (+1)
   \   00000060   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000062   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000066   0x454F             CMP      R7,R9
   \   00000068   0xD314             BCC.N    ??LCD_Rectangle_4
    471          	{
    472          		LCD_WrDat(0x01<<(y2%8)); 			
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000070   0x2108             MOVS     R1,#+8
   \   00000072   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   00000076   0xFB02 0x8211      MLS      R2,R2,R1,R8
   \   0000007A   0x4090             LSLS     R0,R0,R2
   \   0000007C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007E   0x.... 0x....      BL       LCD_WrDat
    473          		if(gif == 1) 	LCD_DLY_ms(5);
   \   00000082   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000084   0x2C01             CMP      R4,#+1
   \   00000086   0xD102             BNE.N    ??LCD_Rectangle_5
   \   00000088   0x2005             MOVS     R0,#+5
   \   0000008A   0x.... 0x....      BL       LCD_DLY_ms
    474          	}
   \                     ??LCD_Rectangle_5: (+1)
   \   0000008E   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000092   0xE7E5             B.N      ??LCD_Rectangle_3
    475          	
    476          } 
   \                     ??LCD_Rectangle_4: (+1)
   \   00000094   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    477          //==============================================================
    478          //π¶ƒ‹√Ë ˆ£∫–¥»Î“ª◊È±Í◊ºASCII◊÷∑˚
    479          //≤Œ ˝£∫œ‘ æµƒŒª÷√£®x,y£©£¨yŒ™“≥∑∂Œß0°´7£¨“™œ‘ æµƒ◊÷∑˚¥Æ
    480          //∑µªÿ£∫Œﬁ
    481          //============================================================== 

   \                                 In section .text, align 2, keep-with-next
    482          void write_6_8_char(byte x,byte y,byte ucData) 
    483          {
   \                     write_6_8_char: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x4688             MOV      R8,R1
   \   00000008   0x0015             MOVS     R5,R2
    484              byte i, ucDataTmp;       
    485              ucDataTmp = ucData-32;
   \   0000000A   0xF1B5 0x0020      SUBS     R0,R5,#+32
   \   0000000E   0x0007             MOVS     R7,R0
    486              if(x > 126)
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x2C7F             CMP      R4,#+127
   \   00000014   0xDB03             BLT.N    ??write_6_8_char_0
    487              {
    488                  x= 0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x0004             MOVS     R4,R0
    489                  y++;
   \   0000001A   0xF118 0x0801      ADDS     R8,R8,#+1
    490              }
    491              
    492              LCD_Set_Pos(x, y);
   \                     ??write_6_8_char_0: (+1)
   \   0000001E   0x4641             MOV      R1,R8
   \   00000020   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_Set_Pos
    493              
    494              for(i = 0; i < 6; i++)
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x0006             MOVS     R6,R0
   \                     ??write_6_8_char_1: (+1)
   \   0000002E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000030   0x2E06             CMP      R6,#+6
   \   00000032   0xDA0B             BGE.N    ??write_6_8_char_2
    495              {     
    496                  LCD_WrDat(F6x8[ucDataTmp][i]);  
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000038   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000003A   0x2106             MOVS     R1,#+6
   \   0000003C   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   00000040   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000042   0x5C30             LDRB     R0,[R6, R0]
   \   00000044   0x.... 0x....      BL       LCD_WrDat
    497              }
   \   00000048   0x1C76             ADDS     R6,R6,#+1
   \   0000004A   0xE7F0             B.N      ??write_6_8_char_1
    498          }
   \                     ??write_6_8_char_2: (+1)
   \   0000004C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    499          //==============================================================
    500          //π¶ƒ‹√Ë ˆ£∫–¥»Î“ª◊È±Í◊ºASCII◊÷∑˚¥Æ
    501          //≤Œ ˝£∫œ‘ æµƒŒª÷√£®x,y£©£¨yŒ™“≥∑∂Œß0°´7£¨“™œ‘ æµƒ◊÷∑˚¥Æ
    502          //∑µªÿ£∫Œﬁ
    503          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    504          void write_6_8_string(byte x,byte y,byte ch[])
    505          {
   \                     write_6_8_string: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    506            byte c=0,i=0,j=0;      
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    507            while (ch[j]!='\0')
   \                     ??write_6_8_string_0: (+1)
   \   00000014   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000018   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD02B             BEQ.N    ??write_6_8_string_1
    508            {    
    509              c =ch[j]-32;
   \   00000020   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000028   0x3820             SUBS     R0,R0,#+32
   \   0000002A   0x0007             MOVS     R7,R0
    510              if(x>126){x=0;y++;}
   \   0000002C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002E   0x2C7F             CMP      R4,#+127
   \   00000030   0xDB02             BLT.N    ??write_6_8_string_2
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x0004             MOVS     R4,R0
   \   00000036   0x1C6D             ADDS     R5,R5,#+1
    511              LCD_Set_Pos(x,y);    
   \                     ??write_6_8_string_2: (+1)
   \   00000038   0x0029             MOVS     R1,R5
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x.... 0x....      BL       LCD_Set_Pos
    512            	for(i=0;i<6;i++)     
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x4680             MOV      R8,R0
   \                     ??write_6_8_string_3: (+1)
   \   00000048   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000004C   0xF1B8 0x0F06      CMP      R8,#+6
   \   00000050   0xDA0E             BGE.N    ??write_6_8_string_4
    513            	  LCD_WrDat(F6x8[c][i]);  
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable11
   \   00000056   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000058   0x2106             MOVS     R1,#+6
   \   0000005A   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   0000005E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000062   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   00000066   0x.... 0x....      BL       LCD_WrDat
   \   0000006A   0xF118 0x0801      ADDS     R8,R8,#+1
   \   0000006E   0xE7EB             B.N      ??write_6_8_string_3
    514            	x+=6;
   \                     ??write_6_8_string_4: (+1)
   \   00000070   0x1DA4             ADDS     R4,R4,#+6
    515            	j++;
   \   00000072   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000076   0xE7CD             B.N      ??write_6_8_string_0
    516            }
    517          }
   \                     ??write_6_8_string_1: (+1)
   \   00000078   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    518          /****************************************************************
    519                             –¥6*8µ„’Û ˝◊÷∫Ø ˝
    520          ****************************************************************/

   \                                 In section .text, align 2, keep-with-next
    521          void write_6_8_number(unsigned char x,unsigned char y, float number)
    522          {
   \                     write_6_8_number: (+1)
   \   00000000   0xE92D 0x47FF      PUSH     {R0-R10,LR}
   \   00000004   0x4681             MOV      R9,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x4692             MOV      R10,R2
    523            unsigned char i=0;
   \   0000000A   0x2500             MOVS     R5,#+0
    524            unsigned char temp[16];
    525            unsigned char *point=temp;
   \   0000000C   0xAE00             ADD      R6,SP,#+0
    526            float decimal;
    527            int data;
    528            
    529            if(number<0)
   \   0000000E   0x4650             MOV      R0,R10
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000016   0xD20E             BCS.N    ??write_6_8_number_0
    530              {
    531               temp[0]='-';
   \   00000018   0x202D             MOVS     R0,#+45
   \   0000001A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    532               write_6_8_char(x,y,temp[0]);
   \   0000001E   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000022   0x0021             MOVS     R1,R4
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x4648             MOV      R0,R9
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       write_6_8_char
    533               x+=6;
   \   0000002E   0xF119 0x0906      ADDS     R9,R9,#+6
    534               number=-number; 
   \   00000032   0xF09A 0x4A00      EORS     R10,R10,#0x80000000
    535              }
    536              
    537            data=(int)number;
   \                     ??write_6_8_number_0: (+1)
   \   00000036   0x4650             MOV      R0,R10
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003C   0x4680             MOV      R8,R0
    538            decimal=number-data;     //µ√µΩ–° ˝≤ø∑÷
   \   0000003E   0x4640             MOV      R0,R8
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x4650             MOV      R0,R10
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
   \   0000004C   0x0007             MOVS     R7,R0
    539            
    540             
    541            if(data>=1000)           // «∑Òø…±ª1000’˚≥˝
   \   0000004E   0xF5B8 0x7F7A      CMP      R8,#+1000
   \   00000052   0xDB0E             BLT.N    ??write_6_8_number_1
    542              {
    543               temp[i]=48+data/1000;
   \   00000054   0xF44F 0x707A      MOV      R0,#+1000
   \   00000058   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   0000005C   0x3030             ADDS     R0,R0,#+48
   \   0000005E   0xA900             ADD      R1,SP,#+0
   \   00000060   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000062   0x5468             STRB     R0,[R5, R1]
    544               data=data%1000;
   \   00000064   0xF44F 0x707A      MOV      R0,#+1000
   \   00000068   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   0000006C   0xFB00 0x8811      MLS      R8,R0,R1,R8
    545               i++;
   \   00000070   0x1C6D             ADDS     R5,R5,#+1
    546              }
    547          
    548             
    549            if(data>=100)              // «∑Òø…±ª100’˚≥˝
   \                     ??write_6_8_number_1: (+1)
   \   00000072   0xF1B8 0x0F64      CMP      R8,#+100
   \   00000076   0xDB0D             BLT.N    ??write_6_8_number_2
    550             {
    551              temp[i]=48+data/100;
   \   00000078   0x2064             MOVS     R0,#+100
   \   0000007A   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   0000007E   0x3030             ADDS     R0,R0,#+48
   \   00000080   0xA900             ADD      R1,SP,#+0
   \   00000082   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000084   0x5468             STRB     R0,[R5, R1]
    552              data=data%100;
   \   00000086   0x2064             MOVS     R0,#+100
   \   00000088   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   0000008C   0xFB00 0x8811      MLS      R8,R0,R1,R8
    553              i++;
   \   00000090   0x1C6D             ADDS     R5,R5,#+1
   \   00000092   0xE00A             B.N      ??write_6_8_number_3
    554             }
    555            else 
    556              if(data<100&&i!=0)
   \                     ??write_6_8_number_2: (+1)
   \   00000094   0xF1B8 0x0F64      CMP      R8,#+100
   \   00000098   0xDA07             BGE.N    ??write_6_8_number_3
   \   0000009A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000009C   0x2D00             CMP      R5,#+0
   \   0000009E   0xD004             BEQ.N    ??write_6_8_number_3
    557               {
    558               temp[i]=0+48;
   \   000000A0   0x2030             MOVS     R0,#+48
   \   000000A2   0xA900             ADD      R1,SP,#+0
   \   000000A4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A6   0x5468             STRB     R0,[R5, R1]
    559               i++;
   \   000000A8   0x1C6D             ADDS     R5,R5,#+1
    560               }
    561             
    562            if(data>=10)                  // «∑Òø…±ª10’˚≥˝
   \                     ??write_6_8_number_3: (+1)
   \   000000AA   0xF1B8 0x0F0A      CMP      R8,#+10
   \   000000AE   0xDB0D             BLT.N    ??write_6_8_number_4
    563              {
    564               temp[i]=48+data/10;
   \   000000B0   0x200A             MOVS     R0,#+10
   \   000000B2   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   000000B6   0x3030             ADDS     R0,R0,#+48
   \   000000B8   0xA900             ADD      R1,SP,#+0
   \   000000BA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000BC   0x5468             STRB     R0,[R5, R1]
    565               data=data%10;
   \   000000BE   0x200A             MOVS     R0,#+10
   \   000000C0   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   000000C4   0xFB00 0x8811      MLS      R8,R0,R1,R8
    566               i++;
   \   000000C8   0x1C6D             ADDS     R5,R5,#+1
   \   000000CA   0xE00A             B.N      ??write_6_8_number_5
    567              }
    568            else 
    569              if(data<10&&i!=0)
   \                     ??write_6_8_number_4: (+1)
   \   000000CC   0xF1B8 0x0F0A      CMP      R8,#+10
   \   000000D0   0xDA07             BGE.N    ??write_6_8_number_5
   \   000000D2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D4   0x2D00             CMP      R5,#+0
   \   000000D6   0xD004             BEQ.N    ??write_6_8_number_5
    570               {
    571               temp[i]=48;
   \   000000D8   0x2030             MOVS     R0,#+48
   \   000000DA   0xA900             ADD      R1,SP,#+0
   \   000000DC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000DE   0x5468             STRB     R0,[R5, R1]
    572               i++;
   \   000000E0   0x1C6D             ADDS     R5,R5,#+1
    573               }
    574               
    575            temp[i]=48+data;
   \                     ??write_6_8_number_5: (+1)
   \   000000E2   0xF118 0x0030      ADDS     R0,R8,#+48
   \   000000E6   0xA900             ADD      R1,SP,#+0
   \   000000E8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000EA   0x5468             STRB     R0,[R5, R1]
    576             
    577                
    578            if(decimal>=0.0001)           //≈–∂œ «∑ÒŒ™–° ˝
   \   000000EC   0x0038             MOVS     R0,R7
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable10_1  ;; 0x38d1b718
   \   000000F2   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000F6   0xD832             BHI.N    ??write_6_8_number_6
    579             {
    580              i++;
   \   000000F8   0x1C6D             ADDS     R5,R5,#+1
    581              temp[i]='.';                //º”–° ˝µ„
   \   000000FA   0x202E             MOVS     R0,#+46
   \   000000FC   0xA900             ADD      R1,SP,#+0
   \   000000FE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000100   0x5468             STRB     R0,[R5, R1]
    582              i++;
   \   00000102   0x1C6D             ADDS     R5,R5,#+1
    583              
    584              data=(int)(decimal*1000);
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x447a0000
   \   00000108   0x0039             MOVS     R1,R7
   \   0000010A   0x.... 0x....      BL       __aeabi_fmul
   \   0000010E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000112   0x4680             MOV      R8,R0
    585             
    586              temp[i]=48+data/100;
   \   00000114   0x2064             MOVS     R0,#+100
   \   00000116   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   0000011A   0x3030             ADDS     R0,R0,#+48
   \   0000011C   0xA900             ADD      R1,SP,#+0
   \   0000011E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000120   0x5468             STRB     R0,[R5, R1]
    587              
    588              data=data%100;
   \   00000122   0x2064             MOVS     R0,#+100
   \   00000124   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   00000128   0xFB00 0x8811      MLS      R8,R0,R1,R8
    589              i++;
   \   0000012C   0x1C6D             ADDS     R5,R5,#+1
    590             
    591              if(data>0)
   \   0000012E   0xF1B8 0x0F01      CMP      R8,#+1
   \   00000132   0xDB0B             BLT.N    ??write_6_8_number_7
    592                {
    593                 temp[i]=48+data/10;
   \   00000134   0x200A             MOVS     R0,#+10
   \   00000136   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   0000013A   0x3030             ADDS     R0,R0,#+48
   \   0000013C   0xA900             ADD      R1,SP,#+0
   \   0000013E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000140   0x5468             STRB     R0,[R5, R1]
    594                 data=data%10;
   \   00000142   0x200A             MOVS     R0,#+10
   \   00000144   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   00000148   0xFB00 0x8811      MLS      R8,R0,R1,R8
    595                 
    596                 
    597                }
    598              if(data>=0)
   \                     ??write_6_8_number_7: (+1)
   \   0000014C   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000150   0xD405             BMI.N    ??write_6_8_number_6
    599                {
    600                 i++;
   \   00000152   0x1C6D             ADDS     R5,R5,#+1
    601                 temp[i]=data+48; 
   \   00000154   0xF118 0x0030      ADDS     R0,R8,#+48
   \   00000158   0xA900             ADD      R1,SP,#+0
   \   0000015A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000015C   0x5468             STRB     R0,[R5, R1]
    602                }
    603              
    604             }     
    605          
    606            i++;
   \                     ??write_6_8_number_6: (+1)
   \   0000015E   0x1C6D             ADDS     R5,R5,#+1
    607            temp[i]='\0';
   \   00000160   0x2000             MOVS     R0,#+0
   \   00000162   0xA900             ADD      R1,SP,#+0
   \   00000164   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000166   0x5468             STRB     R0,[R5, R1]
    608              write_6_8_string(x,y,point); 
   \   00000168   0x0032             MOVS     R2,R6
   \   0000016A   0x0021             MOVS     R1,R4
   \   0000016C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000016E   0x4648             MOV      R0,R9
   \   00000170   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000172   0x.... 0x....      BL       write_6_8_string
    609            
    610          }
   \   00000176   0xE8BD 0x87FF      POP      {R0-R10,PC}      ;; return
    611          //==============================================================
    612          //π¶ƒ‹√Ë ˆ£∫–¥»Î“ª◊È±Í◊ºASCII◊÷∑˚
    613          //≤Œ ˝£∫œ‘ æµƒŒª÷√£®x,y£©£¨yŒ™“≥∑∂Œß0°´7£¨“™œ‘ æµƒ◊÷∑˚
    614          //∑µªÿ£∫Œﬁ
    615          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    616          void write_8_16_char(byte x,byte y,byte ch)
    617          {
   \                     write_8_16_char: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x4689             MOV      R9,R1
   \   00000008   0x0015             MOVS     R5,R2
    618              byte c=0,i=0,j=0;   
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2700             MOVS     R7,#+0
   \   0000000E   0xF05F 0x0800      MOVS     R8,#+0
    619              c =ch-32;
   \   00000012   0xF1B5 0x0020      SUBS     R0,R5,#+32
   \   00000016   0x0006             MOVS     R6,R0
    620              if(x>120){x=0;y++;}
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2C79             CMP      R4,#+121
   \   0000001C   0xDB03             BLT.N    ??write_8_16_char_0
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0x0004             MOVS     R4,R0
   \   00000022   0xF119 0x0901      ADDS     R9,R9,#+1
    621              LCD_Set_Pos(x,y);    
   \                     ??write_8_16_char_0: (+1)
   \   00000026   0x4649             MOV      R1,R9
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       LCD_Set_Pos
    622            	for(i=0;i<8;i++)     
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x0007             MOVS     R7,R0
   \                     ??write_8_16_char_1: (+1)
   \   00000036   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000038   0x2F08             CMP      R7,#+8
   \   0000003A   0xDA0A             BGE.N    ??write_8_16_char_2
    623            	  LCD_WrDat(F8X16[c*16+i]);
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable11_5
   \   00000040   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000042   0x0131             LSLS     R1,R6,#+4
   \   00000044   0xFA51 0xF187      UXTAB    R1,R1,R7
   \   00000048   0x5C08             LDRB     R0,[R1, R0]
   \   0000004A   0x.... 0x....      BL       LCD_WrDat
   \   0000004E   0x1C7F             ADDS     R7,R7,#+1
   \   00000050   0xE7F1             B.N      ??write_8_16_char_1
    624            	LCD_Set_Pos(x,y+1);    
   \                     ??write_8_16_char_2: (+1)
   \   00000052   0xF119 0x0101      ADDS     R1,R9,#+1
   \   00000056   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000058   0x0020             MOVS     R0,R4
   \   0000005A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005C   0x.... 0x....      BL       LCD_Set_Pos
    625            	for(i=0;i<8;i++)     
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x0007             MOVS     R7,R0
   \                     ??write_8_16_char_3: (+1)
   \   00000064   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000066   0x2F08             CMP      R7,#+8
   \   00000068   0xDA0B             BGE.N    ??write_8_16_char_4
    626            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable11_5
   \   0000006E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000070   0x0131             LSLS     R1,R6,#+4
   \   00000072   0xFA51 0xF187      UXTAB    R1,R1,R7
   \   00000076   0x1808             ADDS     R0,R1,R0
   \   00000078   0x7A00             LDRB     R0,[R0, #+8]
   \   0000007A   0x.... 0x....      BL       LCD_WrDat
   \   0000007E   0x1C7F             ADDS     R7,R7,#+1
   \   00000080   0xE7F0             B.N      ??write_8_16_char_3
    627            	x+=8;
   \                     ??write_8_16_char_4: (+1)
   \   00000082   0x3408             ADDS     R4,R4,#+8
    628            	j++;
   \   00000084   0xF118 0x0801      ADDS     R8,R8,#+1
    629           
    630          }
   \   00000088   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    631          //==============================================================
    632          //π¶ƒ‹√Ë ˆ£∫–¥»Î“ª◊È±Í◊ºASCII◊÷∑˚¥Æ
    633          //≤Œ ˝£∫œ‘ æµƒŒª÷√£®x,y£©£¨yŒ™“≥∑∂Œß0°´7£¨“™œ‘ æµƒ◊÷∑˚¥Æ
    634          //∑µªÿ£∫Œﬁ
    635          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    636          void write_8_16_string(byte x,byte y,byte ch[])
    637          {
   \                     write_8_16_string: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    638            byte c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    639                  
    640            while (ch[j]!='\0')
   \                     ??write_8_16_string_0: (+1)
   \   00000014   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000018   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD042             BEQ.N    ??write_8_16_string_1
    641            {    
    642              c =ch[j]-32;
   \   00000020   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000024   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000028   0x3820             SUBS     R0,R0,#+32
   \   0000002A   0x0007             MOVS     R7,R0
    643              if(x>120){x=0;y++;}
   \   0000002C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002E   0x2C79             CMP      R4,#+121
   \   00000030   0xDB02             BLT.N    ??write_8_16_string_2
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x0004             MOVS     R4,R0
   \   00000036   0x1C6D             ADDS     R5,R5,#+1
    644              LCD_Set_Pos(x,y);    
   \                     ??write_8_16_string_2: (+1)
   \   00000038   0x0029             MOVS     R1,R5
   \   0000003A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003C   0x0020             MOVS     R0,R4
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x.... 0x....      BL       LCD_Set_Pos
    645            	for(i=0;i<8;i++)     
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x4680             MOV      R8,R0
   \                     ??write_8_16_string_3: (+1)
   \   00000048   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000004C   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000050   0xDA0B             BGE.N    ??write_8_16_string_4
    646            	  LCD_WrDat(F8X16[c*16+i]);
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable11_5
   \   00000056   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000058   0x0139             LSLS     R1,R7,#+4
   \   0000005A   0xFA51 0xF188      UXTAB    R1,R1,R8
   \   0000005E   0x5C08             LDRB     R0,[R1, R0]
   \   00000060   0x.... 0x....      BL       LCD_WrDat
   \   00000064   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00000068   0xE7EE             B.N      ??write_8_16_string_3
    647            	LCD_Set_Pos(x,y+1);    
   \                     ??write_8_16_string_4: (+1)
   \   0000006A   0x1C69             ADDS     R1,R5,#+1
   \   0000006C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006E   0x0020             MOVS     R0,R4
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0x.... 0x....      BL       LCD_Set_Pos
    648            	for(i=0;i<8;i++)     
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x4680             MOV      R8,R0
   \                     ??write_8_16_string_5: (+1)
   \   0000007A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000007E   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000082   0xDA0C             BGE.N    ??write_8_16_string_6
    649            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable11_5
   \   00000088   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000008A   0x0139             LSLS     R1,R7,#+4
   \   0000008C   0xFA51 0xF188      UXTAB    R1,R1,R8
   \   00000090   0x1808             ADDS     R0,R1,R0
   \   00000092   0x7A00             LDRB     R0,[R0, #+8]
   \   00000094   0x.... 0x....      BL       LCD_WrDat
   \   00000098   0xF118 0x0801      ADDS     R8,R8,#+1
   \   0000009C   0xE7ED             B.N      ??write_8_16_string_5
    650            	x+=8;
   \                     ??write_8_16_string_6: (+1)
   \   0000009E   0x3408             ADDS     R4,R4,#+8
    651            	j++;
   \   000000A0   0xF119 0x0901      ADDS     R9,R9,#+1
   \   000000A4   0xE7B6             B.N      ??write_8_16_string_0
    652            }
    653          }
   \                     ??write_8_16_string_1: (+1)
   \   000000A6   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    654          /****************************************************************
    655                             –¥8*16µ„’Û ˝◊÷∫Ø ˝
    656          ****************************************************************/

   \                                 In section .text, align 2, keep-with-next
    657          void write_8_16_number(unsigned char x,unsigned char y, float number)
    658          {
   \                     write_8_16_number: (+1)
   \   00000000   0xE92D 0x47FF      PUSH     {R0-R10,LR}
   \   00000004   0x4681             MOV      R9,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x4692             MOV      R10,R2
    659            unsigned char i=0;
   \   0000000A   0x2500             MOVS     R5,#+0
    660            unsigned char temp[16];
    661            unsigned char *point=temp;
   \   0000000C   0xAE00             ADD      R6,SP,#+0
    662            float decimal;
    663            int data;
    664            
    665            if(number<0)
   \   0000000E   0x4650             MOV      R0,R10
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000016   0xD20E             BCS.N    ??write_8_16_number_0
    666              {
    667               temp[0]='-';
   \   00000018   0x202D             MOVS     R0,#+45
   \   0000001A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    668               write_8_16_char(x,y,temp[0]);
   \   0000001E   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000022   0x0021             MOVS     R1,R4
   \   00000024   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000026   0x4648             MOV      R0,R9
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x.... 0x....      BL       write_8_16_char
    669               x+=1;
   \   0000002E   0xF119 0x0901      ADDS     R9,R9,#+1
    670               number=-number; 
   \   00000032   0xF09A 0x4A00      EORS     R10,R10,#0x80000000
    671              }
    672              
    673            data=(int)number;
   \                     ??write_8_16_number_0: (+1)
   \   00000036   0x4650             MOV      R0,R10
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003C   0x4680             MOV      R8,R0
    674            decimal=number-data;     //µ√µΩ–° ˝≤ø∑÷
   \   0000003E   0x4640             MOV      R0,R8
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x4650             MOV      R0,R10
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
   \   0000004C   0x0007             MOVS     R7,R0
    675            
    676             
    677            if(data>=1000)           // «∑Òø…±ª1000’˚≥˝
   \   0000004E   0xF5B8 0x7F7A      CMP      R8,#+1000
   \   00000052   0xDB0E             BLT.N    ??write_8_16_number_1
    678              {
    679               temp[i]=48+data/1000;
   \   00000054   0xF44F 0x707A      MOV      R0,#+1000
   \   00000058   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   0000005C   0x3030             ADDS     R0,R0,#+48
   \   0000005E   0xA900             ADD      R1,SP,#+0
   \   00000060   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000062   0x5468             STRB     R0,[R5, R1]
    680               data=data%1000;
   \   00000064   0xF44F 0x707A      MOV      R0,#+1000
   \   00000068   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   0000006C   0xFB00 0x8811      MLS      R8,R0,R1,R8
    681               i++;
   \   00000070   0x1C6D             ADDS     R5,R5,#+1
    682              }
    683          
    684             
    685            if(data>=100)              // «∑Òø…±ª100’˚≥˝
   \                     ??write_8_16_number_1: (+1)
   \   00000072   0xF1B8 0x0F64      CMP      R8,#+100
   \   00000076   0xDB0D             BLT.N    ??write_8_16_number_2
    686             {
    687              temp[i]=48+data/100;
   \   00000078   0x2064             MOVS     R0,#+100
   \   0000007A   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   0000007E   0x3030             ADDS     R0,R0,#+48
   \   00000080   0xA900             ADD      R1,SP,#+0
   \   00000082   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000084   0x5468             STRB     R0,[R5, R1]
    688              data=data%100;
   \   00000086   0x2064             MOVS     R0,#+100
   \   00000088   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   0000008C   0xFB00 0x8811      MLS      R8,R0,R1,R8
    689              i++;
   \   00000090   0x1C6D             ADDS     R5,R5,#+1
   \   00000092   0xE00A             B.N      ??write_8_16_number_3
    690             }
    691            else 
    692              if(data<100&&i!=0)
   \                     ??write_8_16_number_2: (+1)
   \   00000094   0xF1B8 0x0F64      CMP      R8,#+100
   \   00000098   0xDA07             BGE.N    ??write_8_16_number_3
   \   0000009A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000009C   0x2D00             CMP      R5,#+0
   \   0000009E   0xD004             BEQ.N    ??write_8_16_number_3
    693               {
    694               temp[i]=0+48;
   \   000000A0   0x2030             MOVS     R0,#+48
   \   000000A2   0xA900             ADD      R1,SP,#+0
   \   000000A4   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A6   0x5468             STRB     R0,[R5, R1]
    695               i++;
   \   000000A8   0x1C6D             ADDS     R5,R5,#+1
    696               }
    697             
    698            if(data>=10)                  // «∑Òø…±ª10’˚≥˝
   \                     ??write_8_16_number_3: (+1)
   \   000000AA   0xF1B8 0x0F0A      CMP      R8,#+10
   \   000000AE   0xDB0D             BLT.N    ??write_8_16_number_4
    699              {
    700               temp[i]=48+data/10;
   \   000000B0   0x200A             MOVS     R0,#+10
   \   000000B2   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   000000B6   0x3030             ADDS     R0,R0,#+48
   \   000000B8   0xA900             ADD      R1,SP,#+0
   \   000000BA   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000BC   0x5468             STRB     R0,[R5, R1]
    701               data=data%10;
   \   000000BE   0x200A             MOVS     R0,#+10
   \   000000C0   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   000000C4   0xFB00 0x8811      MLS      R8,R0,R1,R8
    702               i++;
   \   000000C8   0x1C6D             ADDS     R5,R5,#+1
   \   000000CA   0xE00A             B.N      ??write_8_16_number_5
    703              }
    704            else 
    705              if(data<10&&i!=0)
   \                     ??write_8_16_number_4: (+1)
   \   000000CC   0xF1B8 0x0F0A      CMP      R8,#+10
   \   000000D0   0xDA07             BGE.N    ??write_8_16_number_5
   \   000000D2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000D4   0x2D00             CMP      R5,#+0
   \   000000D6   0xD004             BEQ.N    ??write_8_16_number_5
    706               {
    707               temp[i]=48;
   \   000000D8   0x2030             MOVS     R0,#+48
   \   000000DA   0xA900             ADD      R1,SP,#+0
   \   000000DC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000DE   0x5468             STRB     R0,[R5, R1]
    708               i++;
   \   000000E0   0x1C6D             ADDS     R5,R5,#+1
    709               }
    710               
    711            temp[i]=48+data;
   \                     ??write_8_16_number_5: (+1)
   \   000000E2   0xF118 0x0030      ADDS     R0,R8,#+48
   \   000000E6   0xA900             ADD      R1,SP,#+0
   \   000000E8   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000EA   0x5468             STRB     R0,[R5, R1]
    712             
    713                
    714            if(decimal>=0.0001)           //≈–∂œ «∑ÒŒ™–° ˝
   \   000000EC   0x0038             MOVS     R0,R7
   \   000000EE   0x.... 0x....      LDR.W    R1,??DataTable10_1  ;; 0x38d1b718
   \   000000F2   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000F6   0xD832             BHI.N    ??write_8_16_number_6
    715             {
    716              i++;
   \   000000F8   0x1C6D             ADDS     R5,R5,#+1
    717              temp[i]='.';                //º”–° ˝µ„
   \   000000FA   0x202E             MOVS     R0,#+46
   \   000000FC   0xA900             ADD      R1,SP,#+0
   \   000000FE   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000100   0x5468             STRB     R0,[R5, R1]
    718              i++;
   \   00000102   0x1C6D             ADDS     R5,R5,#+1
    719              
    720              data=(int)(decimal*1000);
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x447a0000
   \   00000108   0x0039             MOVS     R1,R7
   \   0000010A   0x.... 0x....      BL       __aeabi_fmul
   \   0000010E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000112   0x4680             MOV      R8,R0
    721             
    722              temp[i]=48+data/100;
   \   00000114   0x2064             MOVS     R0,#+100
   \   00000116   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   0000011A   0x3030             ADDS     R0,R0,#+48
   \   0000011C   0xA900             ADD      R1,SP,#+0
   \   0000011E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000120   0x5468             STRB     R0,[R5, R1]
    723              
    724              data=data%100;
   \   00000122   0x2064             MOVS     R0,#+100
   \   00000124   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   00000128   0xFB00 0x8811      MLS      R8,R0,R1,R8
    725              i++;
   \   0000012C   0x1C6D             ADDS     R5,R5,#+1
    726             
    727              if(data>0)
   \   0000012E   0xF1B8 0x0F01      CMP      R8,#+1
   \   00000132   0xDB0B             BLT.N    ??write_8_16_number_7
    728                {
    729                 temp[i]=48+data/10;
   \   00000134   0x200A             MOVS     R0,#+10
   \   00000136   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   0000013A   0x3030             ADDS     R0,R0,#+48
   \   0000013C   0xA900             ADD      R1,SP,#+0
   \   0000013E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000140   0x5468             STRB     R0,[R5, R1]
    730                 data=data%10;
   \   00000142   0x200A             MOVS     R0,#+10
   \   00000144   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   00000148   0xFB00 0x8811      MLS      R8,R0,R1,R8
    731                 
    732                 
    733                }
    734              if(data>=0)
   \                     ??write_8_16_number_7: (+1)
   \   0000014C   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000150   0xD405             BMI.N    ??write_8_16_number_6
    735                {
    736                 i++;
   \   00000152   0x1C6D             ADDS     R5,R5,#+1
    737                 temp[i]=data+48; 
   \   00000154   0xF118 0x0030      ADDS     R0,R8,#+48
   \   00000158   0xA900             ADD      R1,SP,#+0
   \   0000015A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000015C   0x5468             STRB     R0,[R5, R1]
    738                }
    739              
    740             }     
    741          
    742            i++;
   \                     ??write_8_16_number_6: (+1)
   \   0000015E   0x1C6D             ADDS     R5,R5,#+1
    743            temp[i]='\0';
   \   00000160   0x2000             MOVS     R0,#+0
   \   00000162   0xA900             ADD      R1,SP,#+0
   \   00000164   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000166   0x5468             STRB     R0,[R5, R1]
    744              write_8_16_string(x,y,point); 
   \   00000168   0x0032             MOVS     R2,R6
   \   0000016A   0x0021             MOVS     R1,R4
   \   0000016C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000016E   0x4648             MOV      R0,R9
   \   00000170   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000172   0x.... 0x....      BL       write_8_16_string
    745            
    746          }
   \   00000176   0xE8BD 0x87FF      POP      {R0-R10,PC}      ;; return
    747          
    748          //==============================================================
    749          //∫Ø ˝√˚£∫ void Draw_BMP(byte x,byte y)
    750          //π¶ƒ‹√Ë ˆ£∫œ‘ æBMPÕº∆¨128°¡64
    751          //≤Œ ˝£∫∆ ºµ„◊¯±Í(x,y),xµƒ∑∂Œß0°´127£¨yŒ™“≥µƒ∑∂Œß0°´7
    752          //∑µªÿ£∫Œﬁ
    753          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    754          void Draw_BMP(byte x0,byte y0,byte x1,byte y1,byte bmp[])
    755          { 	
   \                     Draw_BMP: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
   \   0000000C   0xF8DD 0x8028      LDR      R8,[SP, #+40]
    756            word ii=0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    757            byte x,y;
    758            
    759            if(y1%8==0) y=y1/8;      
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x2008             MOVS     R0,#+8
   \   00000018   0xFB97 0xF1F0      SDIV     R1,R7,R0
   \   0000001C   0xFB01 0x7110      MLS      R1,R1,R0,R7
   \   00000020   0x2900             CMP      R1,#+0
   \   00000022   0xD105             BNE.N    ??Draw_BMP_0
   \   00000024   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000026   0x2008             MOVS     R0,#+8
   \   00000028   0xFB97 0xF0F0      SDIV     R0,R7,R0
   \   0000002C   0x4683             MOV      R11,R0
   \   0000002E   0xE005             B.N      ??Draw_BMP_1
    760            else y=y1/8+1;
   \                     ??Draw_BMP_0: (+1)
   \   00000030   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000032   0x2008             MOVS     R0,#+8
   \   00000034   0xFB97 0xF0F0      SDIV     R0,R7,R0
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0x4683             MOV      R11,R0
    761          	for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1: (+1)
   \   0000003C   0x46AB             MOV      R11,R5
   \                     ??Draw_BMP_2: (+1)
   \   0000003E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000040   0xFA5F 0xFB8B      UXTB     R11,R11          ;; ZeroExt  R11,R11,#+24,#+24
   \   00000044   0x455F             CMP      R7,R11
   \   00000046   0xD319             BCC.N    ??Draw_BMP_3
    762          	{
    763          		LCD_Set_Pos(x0,y);				
   \   00000048   0x4659             MOV      R1,R11
   \   0000004A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x.... 0x....      BL       LCD_Set_Pos
    764              for(x=x0;x<x1;x++)
   \   00000054   0x46A2             MOV      R10,R4
   \                     ??Draw_BMP_4: (+1)
   \   00000056   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000005A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005C   0x45B2             CMP      R10,R6
   \   0000005E   0xD20A             BCS.N    ??Draw_BMP_5
    765          	    {      
    766          	    	LCD_WrDat(bmp[ii++]);	    	
   \   00000060   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000064   0xF819 0x0008      LDRB     R0,[R9, R8]
   \   00000068   0x.... 0x....      BL       LCD_WrDat
   \   0000006C   0xF119 0x0901      ADDS     R9,R9,#+1
    767          	    }
   \   00000070   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   00000074   0xE7EF             B.N      ??Draw_BMP_4
    768          	}
   \                     ??Draw_BMP_5: (+1)
   \   00000076   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   0000007A   0xE7E0             B.N      ??Draw_BMP_2
    769          }
   \                     ??Draw_BMP_3: (+1)
   \   0000007C   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    770          /*****************************************************************************
    771           ∫Ø  ˝ √˚  : MAIN_ConvertData
    772           π¶ƒ‹√Ë ˆ  : Ω´ ˝æ›◊™ªªŒ™ø…“‘‘⁄OLED∆¡…œœ‘ æµƒ∏Ò Ω
    773            ‰»Î≤Œ ˝  : UCHAR8 *pInputImageData  
    774                       UCHAR8 *pOutputImageBuf  
    775            ‰≥ˆ≤Œ ˝  : NONE
    776           ∑µ ªÿ ÷µ  : NONE
    777          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    778          void MAIN_ConvertData(uint16 *pInputImageData, uint8 *pOutputImageBuf)
    779          {
   \                     MAIN_ConvertData: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB0A1             SUB      SP,SP,#+132
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
    780           //   uint8 ucTmpData;
    781              uint8 i, usRowIdx;
    782              uint8 temp[128]={0};
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x2180             MOVS     R1,#+128
   \   0000000E   0x.... 0x....      BL       __aeabi_memclr4
    783          
    784          	//«Âø’pOutputImageBuf÷∏œÚµƒª∫¥Ê£¨ memsetø‚∫Ø ˝‘⁄string.h÷–
    785              memset(pOutputImageBuf, 0x00, 128*60);
   \   00000012   0xF44F 0x58F0      MOV      R8,#+7680
   \   00000016   0xF05F 0x0900      MOVS     R9,#+0
   \   0000001A   0x464A             MOV      R2,R9
   \   0000001C   0x4641             MOV      R1,R8
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0x.... 0x....      BL       __aeabi_memset
    786          
    787              for (i = 0; i < 128; i++)
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x0006             MOVS     R6,R0
   \                     ??MAIN_ConvertData_0: (+1)
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0x2E80             CMP      R6,#+128
   \   0000002C   0xDA1A             BGE.N    ??MAIN_ConvertData_1
    788              {
    789                   temp[i]=(uint8)(pInputImageData[i]*60/1024);
   \   0000002E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000030   0xF834 0x0016      LDRH     R0,[R4, R6, LSL #+1]
   \   00000034   0x213C             MOVS     R1,#+60
   \   00000036   0x4348             MULS     R0,R1,R0
   \   00000038   0xF44F 0x6180      MOV      R1,#+1024
   \   0000003C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000040   0xA900             ADD      R1,SP,#+0
   \   00000042   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000044   0x5470             STRB     R0,[R6, R1]
    790                   
    791                 // ucTmpData = temp[i] < (60 - 1) ? temp[i] : (60 - 1);
    792                  
    793                   usRowIdx = (60 - 1) - temp[i];//ucTmpData;
   \   00000046   0xA800             ADD      R0,SP,#+0
   \   00000048   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000004A   0x5C30             LDRB     R0,[R6, R0]
   \   0000004C   0xF1D0 0x003B      RSBS     R0,R0,#+59
   \   00000050   0x0007             MOVS     R7,R0
    794          
    795                  (pOutputImageBuf + usRowIdx * 128)[i] = 1;
   \   00000052   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000054   0x2080             MOVS     R0,#+128
   \   00000056   0xFB00 0x5007      MLA      R0,R0,R7,R5
   \   0000005A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0x5431             STRB     R1,[R6, R0]
    796              }
   \   00000060   0x1C76             ADDS     R6,R6,#+1
   \   00000062   0xE7E1             B.N      ??MAIN_ConvertData_0
    797          }
   \                     ??MAIN_ConvertData_1: (+1)
   \   00000064   0xB021             ADD      SP,SP,#+132
   \   00000066   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    798          
    799          /*****************************************************************************
    800           ∫Ø  ˝ √˚  : LED_PrintImage
    801           π¶ƒ‹√Ë ˆ  : Ω´ÕºœÒœ‘ æ≥ˆ¿¥
    802            ‰»Î≤Œ ˝  : UCHAR8 *pucTable     ∂˛Œ¨ÕºœÒ ˝◊Èµƒµÿ÷∑
    803                       USHORT16 usRowNum    ∂˛Œ¨ÕºœÒµƒ–– ˝1~64
    804                       USHORT16 usColumnNum ∂˛Œ¨ÕºœÒµƒ¡– ˝1~128
    805            ‰≥ˆ≤Œ ˝  : none
    806           ∑µ ªÿ ÷µ  : none
    807          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    808          void LED_PrintImage(uint8 *pucTable, uint16 usRowNum, uint16 usColumnNum)
    809          {
   \                     LED_PrintImage: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    810              uint8 ucData;
    811              uint16 i,j,k,m,n;
    812              uint16 usRowTmp;
    813          
    814              m = usRowNum >> 3;   //º∆À„Õº∆¨–– ˝“‘8ŒªŒ™“ª◊ÈÕÍ’˚µƒ◊È ˝
   \   0000000A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000000C   0x08E8             LSRS     R0,R5,#+3
   \   0000000E   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    815              n = usRowNum % 8;    //º∆À„∑÷ÕÍ◊È∫Û £œ¬µƒ–– ˝
   \   00000012   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000014   0x2008             MOVS     R0,#+8
   \   00000016   0xFB95 0xF1F0      SDIV     R1,R5,R0
   \   0000001A   0xFB01 0x5110      MLS      R1,R1,R0,R5
   \   0000001E   0xF8AD 0x1000      STRH     R1,[SP, #+0]
    816              
    817              for(i = 0; i < m; i++) //ÕÍ’˚◊È––…®√Ë
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x4680             MOV      R8,R0
   \                     ??LED_PrintImage_0: (+1)
   \   00000026   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000002A   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000002E   0x4580             CMP      R8,R0
   \   00000030   0xD235             BCS.N    ??LED_PrintImage_1
    818              {
    819                  LCD_Set_Pos(0,(uint8) i);
   \   00000032   0x4641             MOV      R1,R8
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       LCD_Set_Pos
    820                  usRowTmp = i << 3;    //º∆À„µ±«∞À˘‘⁄––µƒœ¬±Í                  
   \   0000003C   0xEA5F 0x00C8      LSLS     R0,R8,#+3
   \   00000040   0x4683             MOV      R11,R0
    821                  for(j = 0; j < usColumnNum; j++) //¡–…®√Ë        
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x4681             MOV      R9,R0
   \                     ??LED_PrintImage_2: (+1)
   \   00000046   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000004A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000004C   0x45B1             CMP      R9,R6
   \   0000004E   0xD223             BCS.N    ??LED_PrintImage_3
    822                  {
    823                      ucData = 0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x0007             MOVS     R7,R0
    824                      for(k = 0; k < 8; k++) //‘⁄i◊È÷–∂‘’‚8––…®√Ë
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x4682             MOV      R10,R0
   \                     ??LED_PrintImage_4: (+1)
   \   00000058   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000005C   0xF1BA 0x0F08      CMP      R10,#+8
   \   00000060   0xDA13             BGE.N    ??LED_PrintImage_5
    825                      {
    826                          ucData = ucData >> 1;
   \   00000062   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000064   0x087F             LSRS     R7,R7,#+1
    827                          if((pucTable + (usRowTmp + k) * usColumnNum)[j] == 1)
   \   00000066   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000006A   0xFA1A 0xF08B      UXTAH    R0,R10,R11
   \   0000006E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000070   0xFB06 0x4000      MLA      R0,R6,R0,R4
   \   00000074   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000078   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   0000007C   0x2801             CMP      R0,#+1
   \   0000007E   0xD101             BNE.N    ??LED_PrintImage_6
    828                          {
    829                              ucData = ucData | 0x80;
   \   00000080   0xF057 0x0780      ORRS     R7,R7,#0x80
    830                          }
    831                          
    832                      }
   \                     ??LED_PrintImage_6: (+1)
   \   00000084   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   00000088   0xE7E6             B.N      ??LED_PrintImage_4
    833                      LCD_WrDat(ucData);
   \                     ??LED_PrintImage_5: (+1)
   \   0000008A   0x0038             MOVS     R0,R7
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x.... 0x....      BL       LCD_WrDat
    834                  }
   \   00000092   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000096   0xE7D6             B.N      ??LED_PrintImage_2
    835              }
   \                     ??LED_PrintImage_3: (+1)
   \   00000098   0xF118 0x0801      ADDS     R8,R8,#+1
   \   0000009C   0xE7C3             B.N      ??LED_PrintImage_0
    836              
    837              LCD_Set_Pos(0,(uint8) i); //…Ë÷√ £œ¬µƒ––œ‘ æµƒ∆ º◊¯±Í
   \                     ??LED_PrintImage_1: (+1)
   \   0000009E   0x4641             MOV      R1,R8
   \   000000A0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x.... 0x....      BL       LCD_Set_Pos
    838              usRowTmp = i << 3;       //º∆À„µ±«∞À˘‘⁄––µƒœ¬±Í                  
   \   000000A8   0xEA5F 0x00C8      LSLS     R0,R8,#+3
   \   000000AC   0x4683             MOV      R11,R0
    839              for(j = 0; j < usColumnNum; j++) //¡–…®√Ë        
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x4681             MOV      R9,R0
   \                     ??LED_PrintImage_7: (+1)
   \   000000B2   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000B6   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000B8   0x45B1             CMP      R9,R6
   \   000000BA   0xD22A             BCS.N    ??LED_PrintImage_8
    840              {
    841                  ucData = 0;
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x0007             MOVS     R7,R0
    842                  for(k = 0; k < n; k++) //∂‘ £œ¬µƒ––…®√Ë
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x4682             MOV      R10,R0
   \                     ??LED_PrintImage_9: (+1)
   \   000000C4   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000C8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000CC   0x4582             CMP      R10,R0
   \   000000CE   0xD213             BCS.N    ??LED_PrintImage_10
    843                  {
    844                      ucData = ucData >> 1;
   \   000000D0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000D2   0x087F             LSRS     R7,R7,#+1
    845                      if((pucTable + (usRowTmp + k) * usColumnNum)[j] ==1)
   \   000000D4   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000D8   0xFA1A 0xF08B      UXTAH    R0,R10,R11
   \   000000DC   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000DE   0xFB06 0x4000      MLA      R0,R6,R0,R4
   \   000000E2   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000E6   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000000EA   0x2801             CMP      R0,#+1
   \   000000EC   0xD101             BNE.N    ??LED_PrintImage_11
    846                      {
    847                          ucData = ucData | 0x80;
   \   000000EE   0xF057 0x0780      ORRS     R7,R7,#0x80
    848                      }
    849                      
    850                  }
   \                     ??LED_PrintImage_11: (+1)
   \   000000F2   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   000000F6   0xE7E5             B.N      ??LED_PrintImage_9
    851                  ucData = ucData >> (8 - n);
   \                     ??LED_PrintImage_10: (+1)
   \   000000F8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000FA   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000FE   0xF1D0 0x0008      RSBS     R0,R0,#+8
   \   00000102   0x4107             ASRS     R7,R7,R0
    852                  LCD_WrDat(ucData);
   \   00000104   0x0038             MOVS     R0,R7
   \   00000106   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000108   0x.... 0x....      BL       LCD_WrDat
    853              }
   \   0000010C   0xF119 0x0901      ADDS     R9,R9,#+1
   \   00000110   0xE7CF             B.N      ??LED_PrintImage_7
    854          
    855              return;
   \                     ??LED_PrintImage_8: (+1)
   \   00000112   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    856          }
    857          
    858          //-----------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    859          void LCD_PrintImage(uint8 *pucTable, uint16 usRowNum, uint16 usColumnNum)
    860          {
   \                     LCD_PrintImage: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    861              uint8 ucData;
    862              uint16 i,j,k,m,n;
    863              uint16 usRowTmp;
    864          
    865              m = usRowNum >> 3;   //º∆À„Õº∆¨–– ˝“‘8ŒªŒ™“ª◊ÈÕÍ’˚µƒ◊È ˝
   \   0000000A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000000C   0x08E8             LSRS     R0,R5,#+3
   \   0000000E   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    866              n = usRowNum % 8;    //º∆À„∑÷ÕÍ◊È∫Û £œ¬µƒ–– ˝
   \   00000012   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000014   0x2008             MOVS     R0,#+8
   \   00000016   0xFB95 0xF1F0      SDIV     R1,R5,R0
   \   0000001A   0xFB01 0x5110      MLS      R1,R1,R0,R5
   \   0000001E   0xF8AD 0x1000      STRH     R1,[SP, #+0]
    867              
    868              for(i = 0; i < m; i++) //ÕÍ’˚◊È––…®√Ë
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x4680             MOV      R8,R0
   \                     ??LCD_PrintImage_0: (+1)
   \   00000026   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000002A   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000002E   0x4580             CMP      R8,R0
   \   00000030   0xD235             BCS.N    ??LCD_PrintImage_1
    869              {
    870                  LCD_Set_Pos(0,(uint8)i);
   \   00000032   0x4641             MOV      R1,R8
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       LCD_Set_Pos
    871                  usRowTmp = i << 3;    //º∆À„µ±«∞À˘‘⁄––µƒœ¬±Í                  
   \   0000003C   0xEA5F 0x00C8      LSLS     R0,R8,#+3
   \   00000040   0x4683             MOV      R11,R0
    872                  for(j = 142; j >14; j--) //¡–…®√Ë        
   \   00000042   0x208E             MOVS     R0,#+142
   \   00000044   0x4681             MOV      R9,R0
   \                     ??LCD_PrintImage_2: (+1)
   \   00000046   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000004A   0xF1B9 0x0F0F      CMP      R9,#+15
   \   0000004E   0xDB23             BLT.N    ??LCD_PrintImage_3
    873                  {
    874                      ucData = 0;
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x0007             MOVS     R7,R0
    875                      for(k = 0; k < 8; k++) //‘⁄i◊È÷–∂‘’‚8––…®√Ë
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x4682             MOV      R10,R0
   \                     ??LCD_PrintImage_4: (+1)
   \   00000058   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000005C   0xF1BA 0x0F08      CMP      R10,#+8
   \   00000060   0xDA13             BGE.N    ??LCD_PrintImage_5
    876                      {
    877                          ucData = ucData >> 1;
   \   00000062   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000064   0x087F             LSRS     R7,R7,#+1
    878                          if((pucTable + (usRowTmp + k) * usColumnNum)[j] == LED_IMAGE_WHITE)
   \   00000066   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000006A   0xFA1A 0xF08B      UXTAH    R0,R10,R11
   \   0000006E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000070   0xFB06 0x4000      MLA      R0,R6,R0,R4
   \   00000074   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000078   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   0000007C   0x28FF             CMP      R0,#+255
   \   0000007E   0xD101             BNE.N    ??LCD_PrintImage_6
    879                          {
    880                              ucData = ucData | 0x80;
   \   00000080   0xF057 0x0780      ORRS     R7,R7,#0x80
    881                          }
    882                          
    883                      }
   \                     ??LCD_PrintImage_6: (+1)
   \   00000084   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   00000088   0xE7E6             B.N      ??LCD_PrintImage_4
    884                      LCD_WrDat(ucData);
   \                     ??LCD_PrintImage_5: (+1)
   \   0000008A   0x0038             MOVS     R0,R7
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0x.... 0x....      BL       LCD_WrDat
    885                  }
   \   00000092   0xF1B9 0x0901      SUBS     R9,R9,#+1
   \   00000096   0xE7D6             B.N      ??LCD_PrintImage_2
    886              }
   \                     ??LCD_PrintImage_3: (+1)
   \   00000098   0xF118 0x0801      ADDS     R8,R8,#+1
   \   0000009C   0xE7C3             B.N      ??LCD_PrintImage_0
    887              
    888              LCD_Set_Pos(0,(uint8)i); //…Ë÷√ £œ¬µƒ––œ‘ æµƒ∆ º◊¯±Í
   \                     ??LCD_PrintImage_1: (+1)
   \   0000009E   0x4641             MOV      R1,R8
   \   000000A0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x.... 0x....      BL       LCD_Set_Pos
    889              usRowTmp = i << 3;       //º∆À„µ±«∞À˘‘⁄––µƒœ¬±Í                  
   \   000000A8   0xEA5F 0x00C8      LSLS     R0,R8,#+3
   \   000000AC   0x4683             MOV      R11,R0
    890              for(j = 143; j >15; j--) //¡–…®√Ë        
   \   000000AE   0x208F             MOVS     R0,#+143
   \   000000B0   0x4681             MOV      R9,R0
   \                     ??LCD_PrintImage_7: (+1)
   \   000000B2   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000B6   0xF1B9 0x0F10      CMP      R9,#+16
   \   000000BA   0xDB2A             BLT.N    ??LCD_PrintImage_8
    891              {
    892                  ucData = 0;
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x0007             MOVS     R7,R0
    893                  for(k = 0; k < n; k++) //∂‘ £œ¬µƒ––…®√Ë
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x4682             MOV      R10,R0
   \                     ??LCD_PrintImage_9: (+1)
   \   000000C4   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000C8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000CC   0x4582             CMP      R10,R0
   \   000000CE   0xD213             BCS.N    ??LCD_PrintImage_10
    894                  {
    895                      ucData = ucData >> 1;
   \   000000D0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000D2   0x087F             LSRS     R7,R7,#+1
    896                      if((pucTable + (usRowTmp + k) * usColumnNum)[j] == LED_IMAGE_WHITE)
   \   000000D4   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000D8   0xFA1A 0xF08B      UXTAH    R0,R10,R11
   \   000000DC   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000DE   0xFB06 0x4000      MLA      R0,R6,R0,R4
   \   000000E2   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000000E6   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000000EA   0x28FF             CMP      R0,#+255
   \   000000EC   0xD101             BNE.N    ??LCD_PrintImage_11
    897                      {
    898                          ucData = ucData | 0x80;
   \   000000EE   0xF057 0x0780      ORRS     R7,R7,#0x80
    899                      }
    900                      
    901                  }
   \                     ??LCD_PrintImage_11: (+1)
   \   000000F2   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   000000F6   0xE7E5             B.N      ??LCD_PrintImage_9
    902                  ucData = ucData >> (8 - n);
   \                     ??LCD_PrintImage_10: (+1)
   \   000000F8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000FA   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000000FE   0xF1D0 0x0008      RSBS     R0,R0,#+8
   \   00000102   0x4107             ASRS     R7,R7,R0
    903                  LCD_WrDat(ucData);
   \   00000104   0x0038             MOVS     R0,R7
   \   00000106   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000108   0x.... 0x....      BL       LCD_WrDat
    904              }
   \   0000010C   0xF1B9 0x0901      SUBS     R9,R9,#+1
   \   00000110   0xE7CF             B.N      ??LCD_PrintImage_7
    905                  LCD_clear_L(0,7);
   \                     ??LCD_PrintImage_8: (+1)
   \   00000112   0x2107             MOVS     R1,#+7
   \   00000114   0x2000             MOVS     R0,#+0
   \   00000116   0x.... 0x....      BL       LCD_clear_L
    906                  write_6_8_string(0,7,"top:");     
   \   0000011A   0x.... 0x....      LDR.W    R2,??DataTable11_6
   \   0000011E   0x2107             MOVS     R1,#+7
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x.... 0x....      BL       write_6_8_string
    907                  write_6_8_number(50,7,control_top_whiteline);
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable12
   \   0000012A   0x7800             LDRB     R0,[R0, #+0]
   \   0000012C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000130   0x0002             MOVS     R2,R0
   \   00000132   0x2107             MOVS     R1,#+7
   \   00000134   0x2032             MOVS     R0,#+50
   \   00000136   0x.... 0x....      BL       write_6_8_number
    908              return;
   \   0000013A   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
    909          }
    910          //-----------------------------------------------------------------------------------
    911          ///////////////////////////////////////////////////////////////////////////////////
    912          /***********************************‘§œ‘ æ**********************************/

   \                                 In section .text, align 4, keep-with-next
    913          void pre_show(void)
    914          {  
   \                     pre_show: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    915             //int8 i;
    916             LCD_CLS();
   \   00000002   0x.... 0x....      BL       LCD_CLS
    917             switch(page_num)
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD009             BEQ.N    ??pre_show_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xF000 0x80A9      BEQ.W    ??pre_show_1
   \   00000016   0xD348             BCC.N    ??pre_show_2
   \   00000018   0x2804             CMP      R0,#+4
   \   0000001A   0xF000 0x8191      BEQ.W    ??pre_show_3
   \   0000001E   0xF0C0 0x811C      BCC.W    ??pre_show_4
   \   00000022   0xE205             B.N      ??pre_show_5
    918               {
    919               case 0: 
    920                    
    921                  
    922                      
    923                      write_6_8_string(0,1,"V:");     
   \                     ??pre_show_0: (+1)
   \   00000024   0xA2C4             ADR.N    R2,??pre_show_6  ;; 0x56, 0x3A, 0x00, 0x00
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       write_6_8_string
    924                      write_6_8_number(20,1,V);
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_8
   \   00000032   0x6802             LDR      R2,[R0, #+0]
   \   00000034   0x2101             MOVS     R1,#+1
   \   00000036   0x2014             MOVS     R0,#+20
   \   00000038   0x.... 0x....      BL       write_6_8_number
    925                     
    926                      write_6_8_string(50,1,"W:");     //µ⁄∂˛––£¨Ω«ÀŸ∂»
   \   0000003C   0xA2BF             ADR.N    R2,??pre_show_6+0x4  ;; 0x57, 0x3A, 0x00, 0x00
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0x2032             MOVS     R0,#+50
   \   00000042   0x.... 0x....      BL       write_6_8_string
    927                      write_6_8_number(70,1,w); 
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000004A   0x6802             LDR      R2,[R0, #+0]
   \   0000004C   0x2101             MOVS     R1,#+1
   \   0000004E   0x2046             MOVS     R0,#+70
   \   00000050   0x.... 0x....      BL       write_6_8_number
    928           
    929                     
    930                      write_6_8_string(0,2,"acce:");      //µ⁄»˝––£¨º”ÀŸ∂»º∆÷µ
   \   00000054   0x.... 0x....      LDR.W    R2,??DataTable11_10
   \   00000058   0x2102             MOVS     R1,#+2
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       write_6_8_string
    931                      write_6_8_number(50,2,acce);
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable11_11
   \   00000064   0x6802             LDR      R2,[R0, #+0]
   \   00000066   0x2102             MOVS     R1,#+2
   \   00000068   0x2032             MOVS     R0,#+50
   \   0000006A   0x.... 0x....      BL       write_6_8_number
    932            
    933                    
    934                      
    935                   
    936                  
    937            
    938                  
    939                       
    940                      write_6_8_string(0,5,"Sp:");     
   \   0000006E   0x....             ADR.N    R2,??DataTable10  ;; "Sp:"
   \   00000070   0x2105             MOVS     R1,#+5
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x.... 0x....      BL       write_6_8_string
    941                      write_6_8_number(50,5,Speed_set);
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   0000007C   0x8800             LDRH     R0,[R0, #+0]
   \   0000007E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000082   0x0002             MOVS     R2,R0
   \   00000084   0x2105             MOVS     R1,#+5
   \   00000086   0x2032             MOVS     R0,#+50
   \   00000088   0x.... 0x....      BL       write_6_8_number
    942          
    943                  
    944                      write_6_8_number(0,6,g_nCarAngle); 
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable11_12
   \   00000090   0x6802             LDR      R2,[R0, #+0]
   \   00000092   0x2106             MOVS     R1,#+6
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x.... 0x....      BL       write_6_8_number
    945                      write_6_8_number(50,6,acce_angle);
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable11_13
   \   0000009E   0x6802             LDR      R2,[R0, #+0]
   \   000000A0   0x2106             MOVS     R1,#+6
   \   000000A2   0x2032             MOVS     R0,#+50
   \   000000A4   0x.... 0x....      BL       write_6_8_number
    946                  
    947                    
    948                      
    949                      break;
   \   000000A8   0xE1C2             B.N      ??pre_show_5
    950                       
    951                case 1:
    952                       
    953                       write_6_8_number(0,0,LeftRealSpeed);
   \                     ??pre_show_2: (+1)
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   000000AE   0x6802             LDR      R2,[R0, #+0]
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       write_6_8_number
    954                       write_6_8_number(60,0,RightRealSpeed);
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   000000BC   0x6802             LDR      R2,[R0, #+0]
   \   000000BE   0x2100             MOVS     R1,#+0
   \   000000C0   0x203C             MOVS     R0,#+60
   \   000000C2   0x.... 0x....      BL       write_6_8_number
    955                       
    956                       write_6_8_string(0,1,"Rsp:");     
   \   000000C6   0x.... 0x....      LDR.W    R2,??DataTable12_4
   \   000000CA   0x2101             MOVS     R1,#+1
   \   000000CC   0x2000             MOVS     R0,#+0
   \   000000CE   0x.... 0x....      BL       write_6_8_string
    957                       write_6_8_number(60,1,RealSpeed);
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   000000D6   0x6802             LDR      R2,[R0, #+0]
   \   000000D8   0x2101             MOVS     R1,#+1
   \   000000DA   0x203C             MOVS     R0,#+60
   \   000000DC   0x.... 0x....      BL       write_6_8_number
    958          
    959                       
    960                       write_6_8_string(0,2,"L_PWM:");    //
   \   000000E0   0x.... 0x....      LDR.W    R2,??DataTable12_6
   \   000000E4   0x2102             MOVS     R1,#+2
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x.... 0x....      BL       write_6_8_string
    961                       write_6_8_number(60,2,LeftSpeedPwm);
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   000000F0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000000F4   0x.... 0x....      BL       __aeabi_i2f
   \   000000F8   0x0002             MOVS     R2,R0
   \   000000FA   0x2102             MOVS     R1,#+2
   \   000000FC   0x203C             MOVS     R0,#+60
   \   000000FE   0x.... 0x....      BL       write_6_8_number
    962                       
    963                       write_6_8_string(0,3,"R_PWM:");    //
   \   00000102   0x.... 0x....      LDR.W    R2,??DataTable12_8
   \   00000106   0x2103             MOVS     R1,#+3
   \   00000108   0x2000             MOVS     R0,#+0
   \   0000010A   0x.... 0x....      BL       write_6_8_string
    964                       write_6_8_number(60,3,RightSpeedPwm);
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   00000112   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000116   0x.... 0x....      BL       __aeabi_i2f
   \   0000011A   0x0002             MOVS     R2,R0
   \   0000011C   0x2103             MOVS     R1,#+3
   \   0000011E   0x203C             MOVS     R0,#+60
   \   00000120   0x.... 0x....      BL       write_6_8_number
    965                       
    966                       write_6_8_number(0,4,anglePD);
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   00000128   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000012C   0x.... 0x....      BL       __aeabi_i2f
   \   00000130   0x0002             MOVS     R2,R0
   \   00000132   0x2104             MOVS     R1,#+4
   \   00000134   0x2000             MOVS     R0,#+0
   \   00000136   0x.... 0x....      BL       write_6_8_number
    967                       write_6_8_number(50,4,steerpwmout);
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   0000013E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000142   0x.... 0x....      BL       __aeabi_i2f
   \   00000146   0x0002             MOVS     R2,R0
   \   00000148   0x2104             MOVS     R1,#+4
   \   0000014A   0x2032             MOVS     R0,#+50
   \   0000014C   0x.... 0x....      BL       write_6_8_number
    968                       write_6_8_number(100,4,SpeedPIDout);
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   00000154   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000158   0x.... 0x....      BL       __aeabi_i2f
   \   0000015C   0x0002             MOVS     R2,R0
   \   0000015E   0x2104             MOVS     R1,#+4
   \   00000160   0x2064             MOVS     R0,#+100
   \   00000162   0x.... 0x....      BL       write_6_8_number
    969                       
    970                       
    971                       break;
   \   00000166   0xE163             B.N      ??pre_show_5
    972                       
    973                       
    974                 
    975                case 2:write_6_8_char(0,line_num,'*');
   \                     ??pre_show_1: (+1)
   \   00000168   0x222A             MOVS     R2,#+42
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   0000016E   0x7801             LDRB     R1,[R0, #+0]
   \   00000170   0x2000             MOVS     R0,#+0
   \   00000172   0x.... 0x....      BL       write_6_8_char
    976                
    977                       write_6_8_string(6,0,"ACCE:");    //º”ÀŸ∂»º∆æ≤Ã¨÷µ
   \   00000176   0x.... 0x....      LDR.W    R2,??DataTable12_14
   \   0000017A   0x2100             MOVS     R1,#+0
   \   0000017C   0x2006             MOVS     R0,#+6
   \   0000017E   0x.... 0x....      BL       write_6_8_string
    978                       write_6_8_number(60,0,ACCE_STATIC); 
   \   00000182   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   00000186   0x6802             LDR      R2,[R0, #+0]
   \   00000188   0x2100             MOVS     R1,#+0
   \   0000018A   0x203C             MOVS     R0,#+60
   \   0000018C   0x.... 0x....      BL       write_6_8_number
    979                         
    980                      
    981                           write_6_8_string(6,1,"S_P_C:");   
   \   00000190   0x.... 0x....      LDR.W    R2,??DataTable12_16
   \   00000194   0x2101             MOVS     R1,#+1
   \   00000196   0x2006             MOVS     R0,#+6
   \   00000198   0x.... 0x....      BL       write_6_8_string
    982                       write_6_8_number(60,1,stopcount);  
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000001A0   0x8800             LDRH     R0,[R0, #+0]
   \   000001A2   0x.... 0x....      BL       __aeabi_ui2f
   \   000001A6   0x0002             MOVS     R2,R0
   \   000001A8   0x2101             MOVS     R1,#+1
   \   000001AA   0x203C             MOVS     R0,#+60
   \   000001AC   0x.... 0x....      BL       write_6_8_number
    983                     
    984                        write_6_8_string(6,2,"set_d:");   
   \   000001B0   0x.... 0x....      LDR.W    R2,??DataTable12_18
   \   000001B4   0x2102             MOVS     R1,#+2
   \   000001B6   0x2006             MOVS     R0,#+6
   \   000001B8   0x.... 0x....      BL       write_6_8_string
    985                       write_6_8_number(60,2,Speed_set);
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   000001C0   0x8800             LDRH     R0,[R0, #+0]
   \   000001C2   0x.... 0x....      BL       __aeabi_ui2f
   \   000001C6   0x0002             MOVS     R2,R0
   \   000001C8   0x2102             MOVS     R1,#+2
   \   000001CA   0x203C             MOVS     R0,#+60
   \   000001CC   0x.... 0x....      BL       write_6_8_number
    986                         write_6_8_string(6,3,"lcd_p1:");   
   \   000001D0   0x.... 0x....      LDR.W    R2,??DataTable12_19
   \   000001D4   0x2103             MOVS     R1,#+3
   \   000001D6   0x2006             MOVS     R0,#+6
   \   000001D8   0x.... 0x....      BL       write_6_8_string
    987                       write_6_8_number(60,3,lcd_ref_p1);
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   000001E0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001E4   0x.... 0x....      BL       __aeabi_i2f
   \   000001E8   0x0002             MOVS     R2,R0
   \   000001EA   0x2103             MOVS     R1,#+3
   \   000001EC   0x203C             MOVS     R0,#+60
   \   000001EE   0x.... 0x....      BL       write_6_8_number
    988                        write_6_8_string(6,4,"lcd_d1:");   
   \   000001F2   0x.... 0x....      LDR.W    R2,??DataTable12_21
   \   000001F6   0x2104             MOVS     R1,#+4
   \   000001F8   0x2006             MOVS     R0,#+6
   \   000001FA   0x.... 0x....      BL       write_6_8_string
    989                       write_6_8_number(60,4,lcd_ref_d1);
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   00000202   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000206   0x.... 0x....      BL       __aeabi_i2f
   \   0000020A   0x0002             MOVS     R2,R0
   \   0000020C   0x2104             MOVS     R1,#+4
   \   0000020E   0x203C             MOVS     R0,#+60
   \   00000210   0x.... 0x....      BL       write_6_8_number
    990                        write_6_8_string(6,5,"lcd_p2:");   
   \   00000214   0x.... 0x....      LDR.W    R2,??DataTable12_23
   \   00000218   0x2105             MOVS     R1,#+5
   \   0000021A   0x2006             MOVS     R0,#+6
   \   0000021C   0x.... 0x....      BL       write_6_8_string
    991                       write_6_8_number(60,5,lcd_ref_p2);
   \   00000220   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   00000224   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000228   0x.... 0x....      BL       __aeabi_i2f
   \   0000022C   0x0002             MOVS     R2,R0
   \   0000022E   0x2105             MOVS     R1,#+5
   \   00000230   0x203C             MOVS     R0,#+60
   \   00000232   0x.... 0x....      BL       write_6_8_number
    992                        write_6_8_string(6,6,"lcd_d2:");   
   \   00000236   0x.... 0x....      LDR.W    R2,??DataTable12_25
   \   0000023A   0x2106             MOVS     R1,#+6
   \   0000023C   0x2006             MOVS     R0,#+6
   \   0000023E   0x.... 0x....      BL       write_6_8_string
    993                       write_6_8_number(60,6,lcd_ref_d2);
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   00000246   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000024A   0x.... 0x....      BL       __aeabi_i2f
   \   0000024E   0x0002             MOVS     R2,R0
   \   00000250   0x2106             MOVS     R1,#+6
   \   00000252   0x203C             MOVS     R0,#+60
   \   00000254   0x.... 0x....      BL       write_6_8_number
    994                         // write_6_8_string(6,4,"Rg:");    //
    995                      // write_6_8_number(60,4,Rg);
    996                     //  LCD_Set_Pos(0, 5) ;
    997                       //for(i=22;i<106;i++){
    998                         //if(CCD_value[i])  LCD_write_byte(0xfe,1);       
    999                         //else LCD_write_byte(0x80,1);      
   1000                       //}
   1001                       break;
   \   00000258   0xE0EA             B.N      ??pre_show_5
   1002                       
   1003                       
   1004                case 3:write_6_8_char(0,line_num,'*');
   \                     ??pre_show_4: (+1)
   \   0000025A   0x222A             MOVS     R2,#+42
   \   0000025C   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000260   0x7801             LDRB     R1,[R0, #+0]
   \   00000262   0x2000             MOVS     R0,#+0
   \   00000264   0x.... 0x....      BL       write_6_8_char
   1005                       
   1006                       write_6_8_string(6,0,"ang_kp:");    //
   \   00000268   0x.... 0x....      LDR.W    R2,??DataTable12_27
   \   0000026C   0x2100             MOVS     R1,#+0
   \   0000026E   0x2006             MOVS     R0,#+6
   \   00000270   0x.... 0x....      BL       write_6_8_string
   1007                       write_6_8_number(60,0,angle_kp); 
   \   00000274   0x.... 0x....      LDR.W    R0,??DataTable12_28
   \   00000278   0x6802             LDR      R2,[R0, #+0]
   \   0000027A   0x2100             MOVS     R1,#+0
   \   0000027C   0x203C             MOVS     R0,#+60
   \   0000027E   0x.... 0x....      BL       write_6_8_number
   1008                       
   1009                       write_6_8_string(6,1,"ang_kd:");    //
   \   00000282   0x.... 0x....      LDR.W    R2,??DataTable13
   \   00000286   0x2101             MOVS     R1,#+1
   \   00000288   0x2006             MOVS     R0,#+6
   \   0000028A   0x.... 0x....      BL       write_6_8_string
   1010                       write_6_8_number(60,1,angle_kd);
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000292   0x6802             LDR      R2,[R0, #+0]
   \   00000294   0x2101             MOVS     R1,#+1
   \   00000296   0x203C             MOVS     R0,#+60
   \   00000298   0x.... 0x....      BL       write_6_8_number
   1011          
   1012                       write_6_8_string(6,2,"sped_kp:");    //
   \   0000029C   0x.... 0x....      LDR.W    R2,??DataTable13_2
   \   000002A0   0x2102             MOVS     R1,#+2
   \   000002A2   0x2006             MOVS     R0,#+6
   \   000002A4   0x.... 0x....      BL       write_6_8_string
   1013                       write_6_8_number(60,2,speed_kp); 
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   000002AC   0x6802             LDR      R2,[R0, #+0]
   \   000002AE   0x2102             MOVS     R1,#+2
   \   000002B0   0x203C             MOVS     R0,#+60
   \   000002B2   0x.... 0x....      BL       write_6_8_number
   1014                       
   1015                       write_6_8_string(6,3,"sped_ki:");    //
   \   000002B6   0x.... 0x....      LDR.W    R2,??DataTable13_4
   \   000002BA   0x2103             MOVS     R1,#+3
   \   000002BC   0x2006             MOVS     R0,#+6
   \   000002BE   0x.... 0x....      BL       write_6_8_string
   1016                       write_6_8_number(60,3,speed_ki); 
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   000002C6   0x6802             LDR      R2,[R0, #+0]
   \   000002C8   0x2103             MOVS     R1,#+3
   \   000002CA   0x203C             MOVS     R0,#+60
   \   000002CC   0x.... 0x....      BL       write_6_8_number
   1017                       
   1018                       write_6_8_string(6,4,"zhongj:");    //
   \   000002D0   0x.... 0x....      LDR.W    R2,??DataTable13_6
   \   000002D4   0x2104             MOVS     R1,#+4
   \   000002D6   0x2006             MOVS     R0,#+6
   \   000002D8   0x.... 0x....      BL       write_6_8_string
   1019                       write_6_8_number(60,4,zhongjian );
   \   000002DC   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   000002E0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000002E4   0x.... 0x....      BL       __aeabi_i2f
   \   000002E8   0x0002             MOVS     R2,R0
   \   000002EA   0x2104             MOVS     R1,#+4
   \   000002EC   0x203C             MOVS     R0,#+60
   \   000002EE   0x.... 0x....      BL       write_6_8_number
   1020                       
   1021                      write_6_8_string(6,5,"W_B_O:");    //
   \   000002F2   0x.... 0x....      LDR.W    R2,??DataTable13_8
   \   000002F6   0x2105             MOVS     R1,#+5
   \   000002F8   0x2006             MOVS     R0,#+6
   \   000002FA   0x.... 0x....      BL       write_6_8_string
   1022                       write_6_8_number(60,5,WHITE_BLACK_OT );
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000302   0x7800             LDRB     R0,[R0, #+0]
   \   00000304   0x.... 0x....      BL       __aeabi_ui2f
   \   00000308   0x0002             MOVS     R2,R0
   \   0000030A   0x2105             MOVS     R1,#+5
   \   0000030C   0x203C             MOVS     R0,#+60
   \   0000030E   0x.... 0x....      BL       write_6_8_number
   1023                         write_6_8_string(6,6,"ft1:");    //
   \   00000312   0x.... 0x....      LDR.W    R2,??DataTable13_10
   \   00000316   0x2106             MOVS     R1,#+6
   \   00000318   0x2006             MOVS     R0,#+6
   \   0000031A   0x.... 0x....      BL       write_6_8_string
   1024                       write_6_8_number(60,6,ft1);  
   \   0000031E   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   00000322   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000326   0x.... 0x....      BL       __aeabi_i2f
   \   0000032A   0x0002             MOVS     R2,R0
   \   0000032C   0x2106             MOVS     R1,#+6
   \   0000032E   0x203C             MOVS     R0,#+60
   \   00000330   0x.... 0x....      BL       write_6_8_number
   1025                       
   1026                       break;
   \   00000334   0xE07C             B.N      ??pre_show_5
   \   00000336   0xBF00             Nop      
   \                     ??pre_show_6:
   \   00000338   0x56 0x3A          DC8      0x56, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   \   0000033C   0x57 0x3A          DC8      0x57, 0x3A, 0x00, 0x00
   \              0x00 0x00    
   1027                 case 4:write_6_8_char(0,line_num,'*');
   \                     ??pre_show_3: (+1)
   \   00000340   0x222A             MOVS     R2,#+42
   \   00000342   0x.... 0x....      LDR.W    R0,??DataTable12_13
   \   00000346   0x7801             LDRB     R1,[R0, #+0]
   \   00000348   0x2000             MOVS     R0,#+0
   \   0000034A   0x.... 0x....      BL       write_6_8_char
   1028                       
   1029                       write_6_8_string(6,0,"ting_p:");    //
   \   0000034E   0x.... 0x....      LDR.W    R2,??DataTable13_12
   \   00000352   0x2100             MOVS     R1,#+0
   \   00000354   0x2006             MOVS     R0,#+6
   \   00000356   0x.... 0x....      BL       write_6_8_string
   1030                       write_6_8_number(60,0,tingting_p); 
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000035E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000362   0x.... 0x....      BL       __aeabi_i2f
   \   00000366   0x0002             MOVS     R2,R0
   \   00000368   0x2100             MOVS     R1,#+0
   \   0000036A   0x203C             MOVS     R0,#+60
   \   0000036C   0x.... 0x....      BL       write_6_8_number
   1031                       
   1032                       write_6_8_string(6,1,"ting_d:");    //
   \   00000370   0x.... 0x....      LDR.W    R2,??DataTable13_14
   \   00000374   0x2101             MOVS     R1,#+1
   \   00000376   0x2006             MOVS     R0,#+6
   \   00000378   0x.... 0x....      BL       write_6_8_string
   1033                       write_6_8_number(60,1,tingting_d);
   \   0000037C   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   00000380   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000384   0x.... 0x....      BL       __aeabi_i2f
   \   00000388   0x0002             MOVS     R2,R0
   \   0000038A   0x2101             MOVS     R1,#+1
   \   0000038C   0x203C             MOVS     R0,#+60
   \   0000038E   0x.... 0x....      BL       write_6_8_number
   1034                        
   1035                       write_6_8_string(6,2,"huanjie:");    //
   \   00000392   0x.... 0x....      LDR.W    R2,??DataTable13_16
   \   00000396   0x2102             MOVS     R1,#+2
   \   00000398   0x2006             MOVS     R0,#+6
   \   0000039A   0x.... 0x....      BL       write_6_8_string
   1036                       write_6_8_number(60,2,huanjie);
   \   0000039E   0x.... 0x....      LDR.W    R0,??DataTable13_17
   \   000003A2   0x7800             LDRB     R0,[R0, #+0]
   \   000003A4   0x.... 0x....      BL       __aeabi_ui2f
   \   000003A8   0x0002             MOVS     R2,R0
   \   000003AA   0x2102             MOVS     R1,#+2
   \   000003AC   0x203C             MOVS     R0,#+60
   \   000003AE   0x.... 0x....      BL       write_6_8_number
   1037          
   1038                       write_6_8_string(6,3,"qing:");    //
   \   000003B2   0x.... 0x....      LDR.W    R2,??DataTable13_18
   \   000003B6   0x2103             MOVS     R1,#+3
   \   000003B8   0x2006             MOVS     R0,#+6
   \   000003BA   0x.... 0x....      BL       write_6_8_string
   1039                       write_6_8_number(60,3,qing);
   \   000003BE   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   000003C2   0x7800             LDRB     R0,[R0, #+0]
   \   000003C4   0x.... 0x....      BL       __aeabi_ui2f
   \   000003C8   0x0002             MOVS     R2,R0
   \   000003CA   0x2103             MOVS     R1,#+3
   \   000003CC   0x203C             MOVS     R0,#+60
   \   000003CE   0x.... 0x....      BL       write_6_8_number
   1040                       
   1041                         write_6_8_string(6,4,"summ:");    //
   \   000003D2   0x.... 0x....      LDR.W    R2,??DataTable13_20
   \   000003D6   0x2104             MOVS     R1,#+4
   \   000003D8   0x2006             MOVS     R0,#+6
   \   000003DA   0x.... 0x....      BL       write_6_8_string
   1042                       write_6_8_number(60,4,summ);
   \   000003DE   0x.... 0x....      LDR.W    R0,??DataTable13_21
   \   000003E2   0x7800             LDRB     R0,[R0, #+0]
   \   000003E4   0x.... 0x....      BL       __aeabi_ui2f
   \   000003E8   0x0002             MOVS     R2,R0
   \   000003EA   0x2104             MOVS     R1,#+4
   \   000003EC   0x203C             MOVS     R0,#+60
   \   000003EE   0x.... 0x....      BL       write_6_8_number
   1043                       
   1044                       write_6_8_string(6,5,"da:");    //
   \   000003F2   0x....             ADR.N    R2,??DataTable11_1  ;; "da:"
   \   000003F4   0x2105             MOVS     R1,#+5
   \   000003F6   0x2006             MOVS     R0,#+6
   \   000003F8   0x.... 0x....      BL       write_6_8_string
   1045                       write_6_8_number(60,5,da);
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable13_22
   \   00000400   0x7800             LDRB     R0,[R0, #+0]
   \   00000402   0x.... 0x....      BL       __aeabi_ui2f
   \   00000406   0x0002             MOVS     R2,R0
   \   00000408   0x2105             MOVS     R1,#+5
   \   0000040A   0x203C             MOVS     R0,#+60
   \   0000040C   0x.... 0x....      BL       write_6_8_number
   1046                       
   1047                       write_6_8_string(6,6,"fuxiao:");    //
   \   00000410   0x.... 0x....      LDR.W    R2,??DataTable13_23
   \   00000414   0x2106             MOVS     R1,#+6
   \   00000416   0x2006             MOVS     R0,#+6
   \   00000418   0x.... 0x....      BL       write_6_8_string
   1048                       write_6_8_number(60,6,fuxiao);
   \   0000041C   0x.... 0x....      LDR.W    R0,??DataTable13_24
   \   00000420   0x7800             LDRB     R0,[R0, #+0]
   \   00000422   0x.... 0x....      BL       __aeabi_ui2f
   \   00000426   0x0002             MOVS     R2,R0
   \   00000428   0x2106             MOVS     R1,#+6
   \   0000042A   0x203C             MOVS     R0,#+60
   \   0000042C   0x.... 0x....      BL       write_6_8_number
   1049                        break;            
   1050              
   1051                                
   1052               }
   1053          
   1054          }
   \                     ??pre_show_5: (+1)
   \   00000430   0xBD01             POP      {R0,PC}          ;; return
   1055          //-------------------------------------------------------------------------------------------
   1056          
   1057          
   1058          /**************************************À¢∆¡£¨œ‘ æ ±±‰±‰¡ø*********************************/

   \                                 In section .text, align 2, keep-with-next
   1059          void redraw()
   1060          {
   \                     redraw: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1061            
   1062               
   1063            //if(page_num==0&&redraw_control==0)     //µ⁄“ª“≥
   1064            switch(page_num)
   \   00000002   0x....             LDR.N    R0,??DataTable11_7
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD002             BEQ.N    ??redraw_0
   \   0000000A   0x2801             CMP      R0,#+1
   \   0000000C   0xD074             BEQ.N    ??redraw_1
   \   0000000E   0xE0DB             B.N      ??redraw_2
   1065            {
   1066            case 0:
   1067              
   1068                  write_6_8_string(0,1,"V:");     
   \                     ??redraw_0: (+1)
   \   00000010   0x....             ADR.N    R2,??DataTable11_2  ;; 0x56, 0x3A, 0x00, 0x00
   \   00000012   0x2101             MOVS     R1,#+1
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       write_6_8_string
   1069                  write_6_8_number(20,1,V);
   \   0000001A   0x....             LDR.N    R0,??DataTable11_8
   \   0000001C   0x6802             LDR      R2,[R0, #+0]
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x2014             MOVS     R0,#+20
   \   00000022   0x.... 0x....      BL       write_6_8_number
   1070                  /*LCD_clear_L(70,1);
   1071                  
   1072                  write_6_8_number(70,1,w);*/
   1073                 
   1074                  LCD_clear_L(70,1);
   \   00000026   0x2101             MOVS     R1,#+1
   \   00000028   0x2046             MOVS     R0,#+70
   \   0000002A   0x.... 0x....      BL       LCD_clear_L
   1075                  
   1076                  write_6_8_number(70,1,w); 
   \   0000002E   0x....             LDR.N    R0,??DataTable11_9
   \   00000030   0x6802             LDR      R2,[R0, #+0]
   \   00000032   0x2101             MOVS     R1,#+1
   \   00000034   0x2046             MOVS     R0,#+70
   \   00000036   0x.... 0x....      BL       write_6_8_number
   1077                     
   1078                  LCD_clear_L(50,2);
   \   0000003A   0x2102             MOVS     R1,#+2
   \   0000003C   0x2032             MOVS     R0,#+50
   \   0000003E   0x.... 0x....      BL       LCD_clear_L
   1079                  write_6_8_number(50,2,acce);
   \   00000042   0x....             LDR.N    R0,??DataTable11_11
   \   00000044   0x6802             LDR      R2,[R0, #+0]
   \   00000046   0x2102             MOVS     R1,#+2
   \   00000048   0x2032             MOVS     R0,#+50
   \   0000004A   0x.... 0x....      BL       write_6_8_number
   1080                  
   1081                  LCD_clear_L(0,3);
   \   0000004E   0x2103             MOVS     R1,#+3
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      BL       LCD_clear_L
   1082                  write_6_8_string(0,3,"L_c:");
   \   00000056   0x.... 0x....      LDR.W    R2,??DataTable13_25
   \   0000005A   0x2103             MOVS     R1,#+3
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x.... 0x....      BL       write_6_8_string
   1083                  write_6_8_number(24,3,LeftRealSpeed);   
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable12_2
   \   00000066   0x6802             LDR      R2,[R0, #+0]
   \   00000068   0x2103             MOVS     R1,#+3
   \   0000006A   0x2018             MOVS     R0,#+24
   \   0000006C   0x.... 0x....      BL       write_6_8_number
   1084                  write_6_8_string(65,3,"R_c:");      
   \   00000070   0x.... 0x....      LDR.W    R2,??DataTable13_26
   \   00000074   0x2103             MOVS     R1,#+3
   \   00000076   0x2041             MOVS     R0,#+65
   \   00000078   0x.... 0x....      BL       write_6_8_string
   1085                  write_6_8_number(89,3,RightRealSpeed);
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable12_3
   \   00000080   0x6802             LDR      R2,[R0, #+0]
   \   00000082   0x2103             MOVS     R1,#+3
   \   00000084   0x2059             MOVS     R0,#+89
   \   00000086   0x.... 0x....      BL       write_6_8_number
   1086                  
   1087                  
   1088                  
   1089                
   1090                  /*LCD_clear_L(0,4);
   1091                  write_6_8_string(0,4,"g_Angle£∫");
   1092                  write_6_8_number(50,4,g_nCarAngle);*/
   1093               
   1094                
   1095                  
   1096                  
   1097                  LCD_clear_L(50,5);
   \   0000008A   0x2105             MOVS     R1,#+5
   \   0000008C   0x2032             MOVS     R0,#+50
   \   0000008E   0x.... 0x....      BL       LCD_clear_L
   1098          
   1099                  write_6_8_string(0,5,"Sp:");     
   \   00000092   0x....             ADR.N    R2,??DataTable11_4  ;; "Sp:"
   \   00000094   0x2105             MOVS     R1,#+5
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x.... 0x....      BL       write_6_8_string
   1100                  write_6_8_number(50,5,Speed_set);
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   000000A0   0x8800             LDRH     R0,[R0, #+0]
   \   000000A2   0x.... 0x....      BL       __aeabi_ui2f
   \   000000A6   0x0002             MOVS     R2,R0
   \   000000A8   0x2105             MOVS     R1,#+5
   \   000000AA   0x2032             MOVS     R0,#+50
   \   000000AC   0x.... 0x....      BL       write_6_8_number
   1101          
   1102                  
   1103                  LCD_clear_L(0,6);
   \   000000B0   0x2106             MOVS     R1,#+6
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       LCD_clear_L
   1104                  write_6_8_number(0,6,g_nCarAngle); 
   \   000000B8   0x....             LDR.N    R0,??DataTable11_12
   \   000000BA   0x6802             LDR      R2,[R0, #+0]
   \   000000BC   0x2106             MOVS     R1,#+6
   \   000000BE   0x2000             MOVS     R0,#+0
   \   000000C0   0x.... 0x....      BL       write_6_8_number
   1105                  write_6_8_number(50,6,acce_angle);
   \   000000C4   0x....             LDR.N    R0,??DataTable11_13
   \   000000C6   0x6802             LDR      R2,[R0, #+0]
   \   000000C8   0x2106             MOVS     R1,#+6
   \   000000CA   0x2032             MOVS     R0,#+50
   \   000000CC   0x.... 0x....      BL       write_6_8_number
   1106                  
   1107                  LCD_clear_L(0,7);
   \   000000D0   0x2107             MOVS     R1,#+7
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x.... 0x....      BL       LCD_clear_L
   1108                  write_6_8_string(0,7,"top:");     
   \   000000D8   0x....             LDR.N    R2,??DataTable11_6
   \   000000DA   0x2107             MOVS     R1,#+7
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0x.... 0x....      BL       write_6_8_string
   1109                  write_6_8_number(50,7,control_top_whiteline);
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable12
   \   000000E6   0x7800             LDRB     R0,[R0, #+0]
   \   000000E8   0x.... 0x....      BL       __aeabi_ui2f
   \   000000EC   0x0002             MOVS     R2,R0
   \   000000EE   0x2107             MOVS     R1,#+7
   \   000000F0   0x2032             MOVS     R0,#+50
   \   000000F2   0x.... 0x....      BL       write_6_8_number
   1110              
   1111                  
   1112                  break;
   \   000000F6   0xE067             B.N      ??redraw_2
   1113                  
   1114            case 1:     //µ⁄∂˛“≥
   1115                  LCD_clear_L(0,0);
   \                     ??redraw_1: (+1)
   \   000000F8   0x2100             MOVS     R1,#+0
   \   000000FA   0x2000             MOVS     R0,#+0
   \   000000FC   0x.... 0x....      BL       LCD_clear_L
   1116                  write_6_8_number(0,0,g_nLeftCount);
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable13_27
   \   00000104   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000108   0x.... 0x....      BL       __aeabi_i2f
   \   0000010C   0x0002             MOVS     R2,R0
   \   0000010E   0x2100             MOVS     R1,#+0
   \   00000110   0x2000             MOVS     R0,#+0
   \   00000112   0x.... 0x....      BL       write_6_8_number
   1117                  write_6_8_number(60,0,g_nRightCount);
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable13_28
   \   0000011A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000011E   0x.... 0x....      BL       __aeabi_i2f
   \   00000122   0x0002             MOVS     R2,R0
   \   00000124   0x2100             MOVS     R1,#+0
   \   00000126   0x203C             MOVS     R0,#+60
   \   00000128   0x.... 0x....      BL       write_6_8_number
   1118                  
   1119                  LCD_clear_L(60,1);     
   \   0000012C   0x2101             MOVS     R1,#+1
   \   0000012E   0x203C             MOVS     R0,#+60
   \   00000130   0x.... 0x....      BL       LCD_clear_L
   1120                  write_6_8_number(60,1,RealSpeed);
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable12_5
   \   00000138   0x6802             LDR      R2,[R0, #+0]
   \   0000013A   0x2101             MOVS     R1,#+1
   \   0000013C   0x203C             MOVS     R0,#+60
   \   0000013E   0x.... 0x....      BL       write_6_8_number
   1121          
   1122                  
   1123                  LCD_clear_L(60,2);
   \   00000142   0x2102             MOVS     R1,#+2
   \   00000144   0x203C             MOVS     R0,#+60
   \   00000146   0x.... 0x....      BL       LCD_clear_L
   1124                  write_6_8_number(60,2,LeftSpeedPwm);
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable12_7
   \   0000014E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000152   0x.... 0x....      BL       __aeabi_i2f
   \   00000156   0x0002             MOVS     R2,R0
   \   00000158   0x2102             MOVS     R1,#+2
   \   0000015A   0x203C             MOVS     R0,#+60
   \   0000015C   0x.... 0x....      BL       write_6_8_number
   1125                  
   1126                  LCD_clear_L(60,3);
   \   00000160   0x2103             MOVS     R1,#+3
   \   00000162   0x203C             MOVS     R0,#+60
   \   00000164   0x.... 0x....      BL       LCD_clear_L
   1127                  write_6_8_number(60,3,RightSpeedPwm);
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable12_9
   \   0000016C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000170   0x.... 0x....      BL       __aeabi_i2f
   \   00000174   0x0002             MOVS     R2,R0
   \   00000176   0x2103             MOVS     R1,#+3
   \   00000178   0x203C             MOVS     R0,#+60
   \   0000017A   0x.... 0x....      BL       write_6_8_number
   1128                  
   1129                  LCD_clear_L(0,4);        
   \   0000017E   0x2104             MOVS     R1,#+4
   \   00000180   0x2000             MOVS     R0,#+0
   \   00000182   0x.... 0x....      BL       LCD_clear_L
   1130                  write_6_8_number(0,4,anglePD);
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable12_10
   \   0000018A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000018E   0x.... 0x....      BL       __aeabi_i2f
   \   00000192   0x0002             MOVS     R2,R0
   \   00000194   0x2104             MOVS     R1,#+4
   \   00000196   0x2000             MOVS     R0,#+0
   \   00000198   0x.... 0x....      BL       write_6_8_number
   1131                  write_6_8_number(50,4,steerpwmout);
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable12_11
   \   000001A0   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001A4   0x.... 0x....      BL       __aeabi_i2f
   \   000001A8   0x0002             MOVS     R2,R0
   \   000001AA   0x2104             MOVS     R1,#+4
   \   000001AC   0x2032             MOVS     R0,#+50
   \   000001AE   0x.... 0x....      BL       write_6_8_number
   1132                  write_6_8_number(100,4,SpeedPIDout);
   \   000001B2   0x.... 0x....      LDR.W    R0,??DataTable12_12
   \   000001B6   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001BA   0x.... 0x....      BL       __aeabi_i2f
   \   000001BE   0x0002             MOVS     R2,R0
   \   000001C0   0x2104             MOVS     R1,#+4
   \   000001C2   0x2064             MOVS     R0,#+100
   \   000001C4   0x.... 0x....      BL       write_6_8_number
   1133                  break;
   1134                  
   1135           /*  case 2:     //µ⁄∂˛“≥
   1136                     LCD_PrintImage((uint8 *)VideoImage1, 50, 157);
   1137                       
   1138                  
   1139                  break;*/
   1140                  
   1141                  
   1142                  
   1143               
   1144           
   1145            } 
   1146          }
   \                     ??redraw_2: (+1)
   \   000001C8   0xBD01             POP      {R0,PC}          ;; return
   1147          
   1148          
   1149          
   1150          /*********************************–ﬁ∏ƒ±‰¡ø ˝÷µ***********************************/

   \                                 In section .text, align 2, keep-with-next
   1151          void change_value(unsigned char page,unsigned char m,float i)
   1152          {  
   \                     change_value: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   1153            switch (page)
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x2C02             CMP      R4,#+2
   \   0000000E   0xD007             BEQ.N    ??change_value_0
   \   00000010   0xF0C0 0x82F3      BCC.W    ??change_value_1
   \   00000014   0x2C04             CMP      R4,#+4
   \   00000016   0xF000 0x8200      BEQ.W    ??change_value_2
   \   0000001A   0xF0C0 0x80FF      BCC.W    ??change_value_3
   \   0000001E   0xE2EC             B.N      ??change_value_1
   1154            {  
   1155            case 2:
   1156               switch(m)
   \                     ??change_value_0: (+1)
   \   00000020   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000022   0x2D00             CMP      R5,#+0
   \   00000024   0xD00C             BEQ.N    ??change_value_4
   \   00000026   0x2D02             CMP      R5,#+2
   \   00000028   0xD04B             BEQ.N    ??change_value_5
   \   0000002A   0xD323             BCC.N    ??change_value_6
   \   0000002C   0x2D04             CMP      R5,#+4
   \   0000002E   0xF000 0x808C      BEQ.W    ??change_value_7
   \   00000032   0xD367             BCC.N    ??change_value_8
   \   00000034   0x2D06             CMP      R5,#+6
   \   00000036   0xF000 0x80CE      BEQ.W    ??change_value_9
   \   0000003A   0xF0C0 0x80A9      BCC.W    ??change_value_10
   \   0000003E   0xE0EC             B.N      ??change_value_11
   1157                  {         
   1158                       
   1159                   case 0:ACCE_STATIC+=i;       
   \                     ??change_value_4: (+1)
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0x0031             MOVS     R1,R6
   \   00000048   0x.... 0x....      BL       __aeabi_fadd
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable12_15
   \   00000050   0x6008             STR      R0,[R1, #+0]
   1160                          LCD_clear_L(60,0);
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x203C             MOVS     R0,#+60
   \   00000056   0x.... 0x....      BL       LCD_clear_L
   1161                          write_6_8_char(0,0,'*');
   \   0000005A   0x222A             MOVS     R2,#+42
   \   0000005C   0x2100             MOVS     R1,#+0
   \   0000005E   0x2000             MOVS     R0,#+0
   \   00000060   0x.... 0x....      BL       write_6_8_char
   1162                          write_6_8_number(60,0,ACCE_STATIC);  
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable12_15
   \   00000068   0x6802             LDR      R2,[R0, #+0]
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x203C             MOVS     R0,#+60
   \   0000006E   0x.... 0x....      BL       write_6_8_number
   1163                          break;
   \   00000072   0xE0D2             B.N      ??change_value_11
   1164                   case 1:stopcount+=10*i;
   \                     ??change_value_6: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   00000078   0x8800             LDRH     R0,[R0, #+0]
   \   0000007A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000007E   0x0007             MOVS     R7,R0
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable13_29  ;; 0x41200000
   \   00000084   0x0031             MOVS     R1,R6
   \   00000086   0x.... 0x....      BL       __aeabi_fmul
   \   0000008A   0x0039             MOVS     R1,R7
   \   0000008C   0x.... 0x....      BL       __aeabi_fadd
   \   00000090   0x.... 0x....      BL       __aeabi_f2iz
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable12_17
   \   00000098   0x8008             STRH     R0,[R1, #+0]
   1165                          LCD_clear_L(60,1);
   \   0000009A   0x2101             MOVS     R1,#+1
   \   0000009C   0x203C             MOVS     R0,#+60
   \   0000009E   0x.... 0x....      BL       LCD_clear_L
   1166                          write_6_8_char(0,1,'*');
   \   000000A2   0x222A             MOVS     R2,#+42
   \   000000A4   0x2101             MOVS     R1,#+1
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x.... 0x....      BL       write_6_8_char
   1167                          write_6_8_number(60,1,stopcount);
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable12_17
   \   000000B0   0x8800             LDRH     R0,[R0, #+0]
   \   000000B2   0x.... 0x....      BL       __aeabi_ui2f
   \   000000B6   0x0002             MOVS     R2,R0
   \   000000B8   0x2101             MOVS     R1,#+1
   \   000000BA   0x203C             MOVS     R0,#+60
   \   000000BC   0x.... 0x....      BL       write_6_8_number
   1168                          break;
   \   000000C0   0xE0AB             B.N      ??change_value_11
   1169                  
   1170                  case 2:Speed_set+=i;
   \                     ??change_value_5: (+1)
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   000000C6   0x8800             LDRH     R0,[R0, #+0]
   \   000000C8   0x.... 0x....      BL       __aeabi_ui2f
   \   000000CC   0x0031             MOVS     R1,R6
   \   000000CE   0x.... 0x....      BL       __aeabi_fadd
   \   000000D2   0x.... 0x....      BL       __aeabi_f2iz
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable12_1
   \   000000DA   0x8008             STRH     R0,[R1, #+0]
   1171                          LCD_clear_L(60,2);
   \   000000DC   0x2102             MOVS     R1,#+2
   \   000000DE   0x203C             MOVS     R0,#+60
   \   000000E0   0x.... 0x....      BL       LCD_clear_L
   1172                          write_6_8_char(0,2,'*');
   \   000000E4   0x222A             MOVS     R2,#+42
   \   000000E6   0x2102             MOVS     R1,#+2
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x.... 0x....      BL       write_6_8_char
   1173                          write_6_8_number(60,2,Speed_set);
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable12_1
   \   000000F2   0x8800             LDRH     R0,[R0, #+0]
   \   000000F4   0x.... 0x....      BL       __aeabi_ui2f
   \   000000F8   0x0002             MOVS     R2,R0
   \   000000FA   0x2102             MOVS     R1,#+2
   \   000000FC   0x203C             MOVS     R0,#+60
   \   000000FE   0x.... 0x....      BL       write_6_8_number
   1174                          break; 
   \   00000102   0xE08A             B.N      ??change_value_11
   1175                          //lcd_ref_p1
   1176                  case 3:lcd_ref_p1+=i;
   \                     ??change_value_8: (+1)
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   00000108   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000010C   0x.... 0x....      BL       __aeabi_i2f
   \   00000110   0x0031             MOVS     R1,R6
   \   00000112   0x.... 0x....      BL       __aeabi_fadd
   \   00000116   0x.... 0x....      BL       __aeabi_f2iz
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable12_20
   \   0000011E   0x8008             STRH     R0,[R1, #+0]
   1177                          LCD_clear_L(60,3);
   \   00000120   0x2103             MOVS     R1,#+3
   \   00000122   0x203C             MOVS     R0,#+60
   \   00000124   0x.... 0x....      BL       LCD_clear_L
   1178                          write_6_8_char(0,3,'*');
   \   00000128   0x222A             MOVS     R2,#+42
   \   0000012A   0x2103             MOVS     R1,#+3
   \   0000012C   0x2000             MOVS     R0,#+0
   \   0000012E   0x.... 0x....      BL       write_6_8_char
   1179                          write_6_8_number(60,3,lcd_ref_p1);
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable12_20
   \   00000136   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000013A   0x.... 0x....      BL       __aeabi_i2f
   \   0000013E   0x0002             MOVS     R2,R0
   \   00000140   0x2103             MOVS     R1,#+3
   \   00000142   0x203C             MOVS     R0,#+60
   \   00000144   0x.... 0x....      BL       write_6_8_number
   1180                          break;
   \   00000148   0xE067             B.N      ??change_value_11
   1181                  case 4:lcd_ref_d1+=i;
   \                     ??change_value_7: (+1)
   \   0000014A   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   0000014E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000152   0x.... 0x....      BL       __aeabi_i2f
   \   00000156   0x0031             MOVS     R1,R6
   \   00000158   0x.... 0x....      BL       __aeabi_fadd
   \   0000015C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable12_22
   \   00000164   0x8008             STRH     R0,[R1, #+0]
   1182                          LCD_clear_L(60,4);
   \   00000166   0x2104             MOVS     R1,#+4
   \   00000168   0x203C             MOVS     R0,#+60
   \   0000016A   0x.... 0x....      BL       LCD_clear_L
   1183                          write_6_8_char(0,4,'*');
   \   0000016E   0x222A             MOVS     R2,#+42
   \   00000170   0x2104             MOVS     R1,#+4
   \   00000172   0x2000             MOVS     R0,#+0
   \   00000174   0x.... 0x....      BL       write_6_8_char
   1184                          write_6_8_number(60,4,lcd_ref_d1);
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable12_22
   \   0000017C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000180   0x.... 0x....      BL       __aeabi_i2f
   \   00000184   0x0002             MOVS     R2,R0
   \   00000186   0x2104             MOVS     R1,#+4
   \   00000188   0x203C             MOVS     R0,#+60
   \   0000018A   0x.... 0x....      BL       write_6_8_number
   1185                          break;
   \   0000018E   0xE044             B.N      ??change_value_11
   1186                  case 5:lcd_ref_p2+=i;
   \                     ??change_value_10: (+1)
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   00000194   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000198   0x.... 0x....      BL       __aeabi_i2f
   \   0000019C   0x0031             MOVS     R1,R6
   \   0000019E   0x.... 0x....      BL       __aeabi_fadd
   \   000001A2   0x.... 0x....      BL       __aeabi_f2iz
   \   000001A6   0x.... 0x....      LDR.W    R1,??DataTable12_24
   \   000001AA   0x8008             STRH     R0,[R1, #+0]
   1187                          LCD_clear_L(60,5);
   \   000001AC   0x2105             MOVS     R1,#+5
   \   000001AE   0x203C             MOVS     R0,#+60
   \   000001B0   0x.... 0x....      BL       LCD_clear_L
   1188                          write_6_8_char(0,5,'*');
   \   000001B4   0x222A             MOVS     R2,#+42
   \   000001B6   0x2105             MOVS     R1,#+5
   \   000001B8   0x2000             MOVS     R0,#+0
   \   000001BA   0x.... 0x....      BL       write_6_8_char
   1189                          write_6_8_number(60,5,lcd_ref_p2);
   \   000001BE   0x.... 0x....      LDR.W    R0,??DataTable12_24
   \   000001C2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001C6   0x.... 0x....      BL       __aeabi_i2f
   \   000001CA   0x0002             MOVS     R2,R0
   \   000001CC   0x2105             MOVS     R1,#+5
   \   000001CE   0x203C             MOVS     R0,#+60
   \   000001D0   0x.... 0x....      BL       write_6_8_number
   1190                          break;
   \   000001D4   0xE021             B.N      ??change_value_11
   1191                  case 6:lcd_ref_d2+=i;
   \                     ??change_value_9: (+1)
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   000001DA   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001DE   0x.... 0x....      BL       __aeabi_i2f
   \   000001E2   0x0031             MOVS     R1,R6
   \   000001E4   0x.... 0x....      BL       __aeabi_fadd
   \   000001E8   0x.... 0x....      BL       __aeabi_f2iz
   \   000001EC   0x.... 0x....      LDR.W    R1,??DataTable12_26
   \   000001F0   0x8008             STRH     R0,[R1, #+0]
   1192                          LCD_clear_L(60,6);
   \   000001F2   0x2106             MOVS     R1,#+6
   \   000001F4   0x203C             MOVS     R0,#+60
   \   000001F6   0x.... 0x....      BL       LCD_clear_L
   1193                          write_6_8_char(0,6,'*');
   \   000001FA   0x222A             MOVS     R2,#+42
   \   000001FC   0x2106             MOVS     R1,#+6
   \   000001FE   0x2000             MOVS     R0,#+0
   \   00000200   0x.... 0x....      BL       write_6_8_char
   1194                          write_6_8_number(60,6,lcd_ref_d2);
   \   00000204   0x.... 0x....      LDR.W    R0,??DataTable12_26
   \   00000208   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000020C   0x.... 0x....      BL       __aeabi_i2f
   \   00000210   0x0002             MOVS     R2,R0
   \   00000212   0x2106             MOVS     R1,#+6
   \   00000214   0x203C             MOVS     R0,#+60
   \   00000216   0x.... 0x....      BL       write_6_8_number
   1195                          break;        
   1196                /*   case 4:Rg+=i;
   1197                          LCD_clear_L(60,4);
   1198                          write_6_8_char(0,4,'*');
   1199                          write_6_8_number(60,4,Rg);
   1200                          break;
   1201                  */ /*        
   1202                   case 4:angle_kp+=i;
   1203                          LCD_clear_L(8,4);
   1204                          write_6_8_char(0,4,'*');
   1205                          write_6_8_number(8,4,angle_kp);
   1206                          break;   
   1207                   case 5:angle_kd+=0.1*i;
   1208                          LCD_clear_L(8,5);
   1209                          write_6_8_char(0,5,'*');
   1210                          write_6_8_number(8,5,angle_kd);
   1211                          break;
   1212                     */
   1213          	      }
   1214               break;
   \                     ??change_value_11: (+1)
   \   0000021A   0xE1EE             B.N      ??change_value_1
   1215            case 3:
   1216               switch(m)
   \                     ??change_value_3: (+1)
   \   0000021C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000021E   0x2D00             CMP      R5,#+0
   \   00000220   0xD00C             BEQ.N    ??change_value_12
   \   00000222   0x2D02             CMP      R5,#+2
   \   00000224   0xD04E             BEQ.N    ??change_value_13
   \   00000226   0xD323             BCC.N    ??change_value_14
   \   00000228   0x2D04             CMP      R5,#+4
   \   0000022A   0xF000 0x808F      BEQ.W    ??change_value_15
   \   0000022E   0xD363             BCC.N    ??change_value_16
   \   00000230   0x2D06             CMP      R5,#+6
   \   00000232   0xF000 0x80CF      BEQ.W    ??change_value_17
   \   00000236   0xF0C0 0x80AC      BCC.W    ??change_value_18
   \   0000023A   0xE0ED             B.N      ??change_value_19
   1217                  {
   1218                    
   1219                   case 0:angle_kp+=i;       
   \                     ??change_value_12: (+1)
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable12_28
   \   00000240   0x6800             LDR      R0,[R0, #+0]
   \   00000242   0x0031             MOVS     R1,R6
   \   00000244   0x.... 0x....      BL       __aeabi_fadd
   \   00000248   0x.... 0x....      LDR.W    R1,??DataTable12_28
   \   0000024C   0x6008             STR      R0,[R1, #+0]
   1220                          LCD_clear_L(60,0);
   \   0000024E   0x2100             MOVS     R1,#+0
   \   00000250   0x203C             MOVS     R0,#+60
   \   00000252   0x.... 0x....      BL       LCD_clear_L
   1221                          write_6_8_char(0,0,'*');
   \   00000256   0x222A             MOVS     R2,#+42
   \   00000258   0x2100             MOVS     R1,#+0
   \   0000025A   0x2000             MOVS     R0,#+0
   \   0000025C   0x.... 0x....      BL       write_6_8_char
   1222                          write_6_8_number(60,0,angle_kp); 
   \   00000260   0x.... 0x....      LDR.W    R0,??DataTable12_28
   \   00000264   0x6802             LDR      R2,[R0, #+0]
   \   00000266   0x2100             MOVS     R1,#+0
   \   00000268   0x203C             MOVS     R0,#+60
   \   0000026A   0x.... 0x....      BL       write_6_8_number
   1223                          break;
   \   0000026E   0xE0D3             B.N      ??change_value_19
   1224                   case 1:angle_kd+=0.1*i;
   \                     ??change_value_14: (+1)
   \   00000270   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000274   0x6800             LDR      R0,[R0, #+0]
   \   00000276   0x.... 0x....      BL       __aeabi_f2d
   \   0000027A   0x4680             MOV      R8,R0
   \   0000027C   0x4689             MOV      R9,R1
   \   0000027E   0x0030             MOVS     R0,R6
   \   00000280   0x.... 0x....      BL       __aeabi_f2d
   \   00000284   0x.... 0x....      LDR.W    R2,??DataTable13_30  ;; 0x9999999a
   \   00000288   0x.... 0x....      LDR.W    R3,??DataTable13_31  ;; 0x3fb99999
   \   0000028C   0x.... 0x....      BL       __aeabi_dmul
   \   00000290   0x4642             MOV      R2,R8
   \   00000292   0x464B             MOV      R3,R9
   \   00000294   0x.... 0x....      BL       __aeabi_dadd
   \   00000298   0x.... 0x....      BL       __aeabi_d2f
   \   0000029C   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   000002A0   0x6008             STR      R0,[R1, #+0]
   1225                          LCD_clear_L(60,1);
   \   000002A2   0x2101             MOVS     R1,#+1
   \   000002A4   0x203C             MOVS     R0,#+60
   \   000002A6   0x.... 0x....      BL       LCD_clear_L
   1226                          write_6_8_char(0,1,'*');
   \   000002AA   0x222A             MOVS     R2,#+42
   \   000002AC   0x2101             MOVS     R1,#+1
   \   000002AE   0x2000             MOVS     R0,#+0
   \   000002B0   0x.... 0x....      BL       write_6_8_char
   1227                          write_6_8_number(60,1,angle_kd); 
   \   000002B4   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   000002B8   0x6802             LDR      R2,[R0, #+0]
   \   000002BA   0x2101             MOVS     R1,#+1
   \   000002BC   0x203C             MOVS     R0,#+60
   \   000002BE   0x.... 0x....      BL       write_6_8_number
   1228                          break;
   \   000002C2   0xE0A9             B.N      ??change_value_19
   1229                          
   1230                   case 2:speed_kp+=i;
   \                     ??change_value_13: (+1)
   \   000002C4   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   000002C8   0x6800             LDR      R0,[R0, #+0]
   \   000002CA   0x0031             MOVS     R1,R6
   \   000002CC   0x.... 0x....      BL       __aeabi_fadd
   \   000002D0   0x.... 0x....      LDR.W    R1,??DataTable13_3
   \   000002D4   0x6008             STR      R0,[R1, #+0]
   1231                          LCD_clear_L(60,2);
   \   000002D6   0x2102             MOVS     R1,#+2
   \   000002D8   0x203C             MOVS     R0,#+60
   \   000002DA   0x.... 0x....      BL       LCD_clear_L
   1232                          write_6_8_char(0,2,'*');
   \   000002DE   0x222A             MOVS     R2,#+42
   \   000002E0   0x2102             MOVS     R1,#+2
   \   000002E2   0x2000             MOVS     R0,#+0
   \   000002E4   0x.... 0x....      BL       write_6_8_char
   1233                          write_6_8_number(60,2,speed_kp); 
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable13_3
   \   000002EC   0x6802             LDR      R2,[R0, #+0]
   \   000002EE   0x2102             MOVS     R1,#+2
   \   000002F0   0x203C             MOVS     R0,#+60
   \   000002F2   0x.... 0x....      BL       write_6_8_number
   1234                          break;
   \   000002F6   0xE08F             B.N      ??change_value_19
   1235                          
   1236                   case 3:speed_ki+=0.01*i;
   \                     ??change_value_16: (+1)
   \   000002F8   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   000002FC   0x6800             LDR      R0,[R0, #+0]
   \   000002FE   0x.... 0x....      BL       __aeabi_f2d
   \   00000302   0x4680             MOV      R8,R0
   \   00000304   0x4689             MOV      R9,R1
   \   00000306   0x0030             MOVS     R0,R6
   \   00000308   0x.... 0x....      BL       __aeabi_f2d
   \   0000030C   0x.... 0x....      LDR.W    R2,??DataTable13_32  ;; 0x47ae147b
   \   00000310   0x.... 0x....      LDR.W    R3,??DataTable13_33  ;; 0x3f847ae1
   \   00000314   0x.... 0x....      BL       __aeabi_dmul
   \   00000318   0x4642             MOV      R2,R8
   \   0000031A   0x464B             MOV      R3,R9
   \   0000031C   0x.... 0x....      BL       __aeabi_dadd
   \   00000320   0x.... 0x....      BL       __aeabi_d2f
   \   00000324   0x.... 0x....      LDR.W    R1,??DataTable13_5
   \   00000328   0x6008             STR      R0,[R1, #+0]
   1237                          LCD_clear_L(60,3);
   \   0000032A   0x2103             MOVS     R1,#+3
   \   0000032C   0x203C             MOVS     R0,#+60
   \   0000032E   0x.... 0x....      BL       LCD_clear_L
   1238                          write_6_8_char(0,3,'*');
   \   00000332   0x222A             MOVS     R2,#+42
   \   00000334   0x2103             MOVS     R1,#+3
   \   00000336   0x2000             MOVS     R0,#+0
   \   00000338   0x.... 0x....      BL       write_6_8_char
   1239                          write_6_8_number(60,3,speed_ki); 
   \   0000033C   0x.... 0x....      LDR.W    R0,??DataTable13_5
   \   00000340   0x6802             LDR      R2,[R0, #+0]
   \   00000342   0x2103             MOVS     R1,#+3
   \   00000344   0x203C             MOVS     R0,#+60
   \   00000346   0x.... 0x....      BL       write_6_8_number
   1240                          break; 
   \   0000034A   0xE065             B.N      ??change_value_19
   1241                          
   1242                   case 4: zhongjian+=i;
   \                     ??change_value_15: (+1)
   \   0000034C   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   00000350   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000354   0x.... 0x....      BL       __aeabi_i2f
   \   00000358   0x0031             MOVS     R1,R6
   \   0000035A   0x.... 0x....      BL       __aeabi_fadd
   \   0000035E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000362   0x.... 0x....      LDR.W    R1,??DataTable13_7
   \   00000366   0x8008             STRH     R0,[R1, #+0]
   1243                          LCD_clear_L(60,4);
   \   00000368   0x2104             MOVS     R1,#+4
   \   0000036A   0x203C             MOVS     R0,#+60
   \   0000036C   0x.... 0x....      BL       LCD_clear_L
   1244                          write_6_8_char(0,4,'*');
   \   00000370   0x222A             MOVS     R2,#+42
   \   00000372   0x2104             MOVS     R1,#+4
   \   00000374   0x2000             MOVS     R0,#+0
   \   00000376   0x.... 0x....      BL       write_6_8_char
   1245                          write_6_8_number(60,4,zhongjian); 
   \   0000037A   0x.... 0x....      LDR.W    R0,??DataTable13_7
   \   0000037E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000382   0x.... 0x....      BL       __aeabi_i2f
   \   00000386   0x0002             MOVS     R2,R0
   \   00000388   0x2104             MOVS     R1,#+4
   \   0000038A   0x203C             MOVS     R0,#+60
   \   0000038C   0x.... 0x....      BL       write_6_8_number
   1246                          break;
   \   00000390   0xE042             B.N      ??change_value_19
   1247                     case 5: WHITE_BLACK_OT+=i;
   \                     ??change_value_18: (+1)
   \   00000392   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   00000396   0x7800             LDRB     R0,[R0, #+0]
   \   00000398   0x.... 0x....      BL       __aeabi_ui2f
   \   0000039C   0x0031             MOVS     R1,R6
   \   0000039E   0x.... 0x....      BL       __aeabi_fadd
   \   000003A2   0x.... 0x....      BL       __aeabi_f2iz
   \   000003A6   0x.... 0x....      LDR.W    R1,??DataTable13_9
   \   000003AA   0x7008             STRB     R0,[R1, #+0]
   1248                          LCD_clear_L(60,5);
   \   000003AC   0x2105             MOVS     R1,#+5
   \   000003AE   0x203C             MOVS     R0,#+60
   \   000003B0   0x.... 0x....      BL       LCD_clear_L
   1249                          write_6_8_char(0,5,'*');
   \   000003B4   0x222A             MOVS     R2,#+42
   \   000003B6   0x2105             MOVS     R1,#+5
   \   000003B8   0x2000             MOVS     R0,#+0
   \   000003BA   0x.... 0x....      BL       write_6_8_char
   1250                          write_6_8_number(60,5,WHITE_BLACK_OT); 
   \   000003BE   0x.... 0x....      LDR.W    R0,??DataTable13_9
   \   000003C2   0x7800             LDRB     R0,[R0, #+0]
   \   000003C4   0x.... 0x....      BL       __aeabi_ui2f
   \   000003C8   0x0002             MOVS     R2,R0
   \   000003CA   0x2105             MOVS     R1,#+5
   \   000003CC   0x203C             MOVS     R0,#+60
   \   000003CE   0x.... 0x....      BL       write_6_8_number
   1251                          break;
   \   000003D2   0xE021             B.N      ??change_value_19
   1252                                
   1253                 
   1254                   case 6: ft1+=i;
   \                     ??change_value_17: (+1)
   \   000003D4   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   000003D8   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000003DC   0x.... 0x....      BL       __aeabi_i2f
   \   000003E0   0x0031             MOVS     R1,R6
   \   000003E2   0x.... 0x....      BL       __aeabi_fadd
   \   000003E6   0x.... 0x....      BL       __aeabi_f2iz
   \   000003EA   0x.... 0x....      LDR.W    R1,??DataTable13_11
   \   000003EE   0x8008             STRH     R0,[R1, #+0]
   1255                          LCD_clear_L(60,6);
   \   000003F0   0x2106             MOVS     R1,#+6
   \   000003F2   0x203C             MOVS     R0,#+60
   \   000003F4   0x.... 0x....      BL       LCD_clear_L
   1256                          write_6_8_char(0,6,'*');
   \   000003F8   0x222A             MOVS     R2,#+42
   \   000003FA   0x2106             MOVS     R1,#+6
   \   000003FC   0x2000             MOVS     R0,#+0
   \   000003FE   0x.... 0x....      BL       write_6_8_char
   1257                          write_6_8_number(60,6,ft1); 
   \   00000402   0x.... 0x....      LDR.W    R0,??DataTable13_11
   \   00000406   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000040A   0x.... 0x....      BL       __aeabi_i2f
   \   0000040E   0x0002             MOVS     R2,R0
   \   00000410   0x2106             MOVS     R1,#+6
   \   00000412   0x203C             MOVS     R0,#+60
   \   00000414   0x.... 0x....      BL       write_6_8_number
   1258                          break; 
   1259                  }
   1260                 break; 
   \                     ??change_value_19: (+1)
   \   00000418   0xE0EF             B.N      ??change_value_1
   1261                case 4:
   1262               switch(m)
   \                     ??change_value_2: (+1)
   \   0000041A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000041C   0x2D00             CMP      R5,#+0
   \   0000041E   0xD00C             BEQ.N    ??change_value_20
   \   00000420   0x2D02             CMP      R5,#+2
   \   00000422   0xD050             BEQ.N    ??change_value_21
   \   00000424   0xD32C             BCC.N    ??change_value_22
   \   00000426   0x2D04             CMP      R5,#+4
   \   00000428   0xF000 0x808E      BEQ.W    ??change_value_23
   \   0000042C   0xD36C             BCC.N    ??change_value_24
   \   0000042E   0x2D06             CMP      R5,#+6
   \   00000430   0xF000 0x80C6      BEQ.W    ??change_value_25
   \   00000434   0xF0C0 0x80A6      BCC.W    ??change_value_26
   \   00000438   0xE0DF             B.N      ??change_value_27
   1263                  {
   1264                    
   1265                   case 0:tingting_p+=i;       
   \                     ??change_value_20: (+1)
   \   0000043A   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000043E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000442   0x.... 0x....      BL       __aeabi_i2f
   \   00000446   0x0031             MOVS     R1,R6
   \   00000448   0x.... 0x....      BL       __aeabi_fadd
   \   0000044C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000450   0x.... 0x....      LDR.W    R1,??DataTable13_13
   \   00000454   0x8008             STRH     R0,[R1, #+0]
   1266                          LCD_clear_L(60,0);
   \   00000456   0x2100             MOVS     R1,#+0
   \   00000458   0x203C             MOVS     R0,#+60
   \   0000045A   0x.... 0x....      BL       LCD_clear_L
   1267                          write_6_8_char(0,0,'*');
   \   0000045E   0x222A             MOVS     R2,#+42
   \   00000460   0x2100             MOVS     R1,#+0
   \   00000462   0x2000             MOVS     R0,#+0
   \   00000464   0x.... 0x....      BL       write_6_8_char
   1268                          write_6_8_number(60,0,tingting_p); 
   \   00000468   0x.... 0x....      LDR.W    R0,??DataTable13_13
   \   0000046C   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000470   0x.... 0x....      BL       __aeabi_i2f
   \   00000474   0x0002             MOVS     R2,R0
   \   00000476   0x2100             MOVS     R1,#+0
   \   00000478   0x203C             MOVS     R0,#+60
   \   0000047A   0x.... 0x....      BL       write_6_8_number
   1269                          break;
   \   0000047E   0xE0BC             B.N      ??change_value_27
   1270                   case 1:tingting_d+=i;
   \                     ??change_value_22: (+1)
   \   00000480   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   00000484   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000488   0x.... 0x....      BL       __aeabi_i2f
   \   0000048C   0x0031             MOVS     R1,R6
   \   0000048E   0x.... 0x....      BL       __aeabi_fadd
   \   00000492   0x.... 0x....      BL       __aeabi_f2iz
   \   00000496   0x.... 0x....      LDR.W    R1,??DataTable13_15
   \   0000049A   0x8008             STRH     R0,[R1, #+0]
   1271                          LCD_clear_L(60,1);
   \   0000049C   0x2101             MOVS     R1,#+1
   \   0000049E   0x203C             MOVS     R0,#+60
   \   000004A0   0x.... 0x....      BL       LCD_clear_L
   1272                          write_6_8_char(0,1,'*');
   \   000004A4   0x222A             MOVS     R2,#+42
   \   000004A6   0x2101             MOVS     R1,#+1
   \   000004A8   0x2000             MOVS     R0,#+0
   \   000004AA   0x.... 0x....      BL       write_6_8_char
   1273                          write_6_8_number(60,1,tingting_d); 
   \   000004AE   0x.... 0x....      LDR.W    R0,??DataTable13_15
   \   000004B2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000004B6   0x.... 0x....      BL       __aeabi_i2f
   \   000004BA   0x0002             MOVS     R2,R0
   \   000004BC   0x2101             MOVS     R1,#+1
   \   000004BE   0x203C             MOVS     R0,#+60
   \   000004C0   0x.... 0x....      BL       write_6_8_number
   1274                          break;
   \   000004C4   0xE099             B.N      ??change_value_27
   1275                  case 2:huanjie+=i;
   \                     ??change_value_21: (+1)
   \   000004C6   0x.... 0x....      LDR.W    R0,??DataTable13_17
   \   000004CA   0x7800             LDRB     R0,[R0, #+0]
   \   000004CC   0x.... 0x....      BL       __aeabi_ui2f
   \   000004D0   0x0031             MOVS     R1,R6
   \   000004D2   0x.... 0x....      BL       __aeabi_fadd
   \   000004D6   0x.... 0x....      BL       __aeabi_f2iz
   \   000004DA   0x.... 0x....      LDR.W    R1,??DataTable13_17
   \   000004DE   0x7008             STRB     R0,[R1, #+0]
   1276                          LCD_clear_L(60,2);
   \   000004E0   0x2102             MOVS     R1,#+2
   \   000004E2   0x203C             MOVS     R0,#+60
   \   000004E4   0x.... 0x....      BL       LCD_clear_L
   1277                          write_6_8_char(0,2,'*');
   \   000004E8   0x222A             MOVS     R2,#+42
   \   000004EA   0x2102             MOVS     R1,#+2
   \   000004EC   0x2000             MOVS     R0,#+0
   \   000004EE   0x.... 0x....      BL       write_6_8_char
   1278                          write_6_8_number(60,2,huanjie); 
   \   000004F2   0x.... 0x....      LDR.W    R0,??DataTable13_17
   \   000004F6   0x7800             LDRB     R0,[R0, #+0]
   \   000004F8   0x.... 0x....      BL       __aeabi_ui2f
   \   000004FC   0x0002             MOVS     R2,R0
   \   000004FE   0x2102             MOVS     R1,#+2
   \   00000500   0x203C             MOVS     R0,#+60
   \   00000502   0x.... 0x....      BL       write_6_8_number
   1279                          break;
   \   00000506   0xE078             B.N      ??change_value_27
   1280                     case 3:qing+=i;
   \                     ??change_value_24: (+1)
   \   00000508   0x.... 0x....      LDR.W    R0,??DataTable13_19
   \   0000050C   0x7800             LDRB     R0,[R0, #+0]
   \   0000050E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000512   0x0031             MOVS     R1,R6
   \   00000514   0x.... 0x....      BL       __aeabi_fadd
   \   00000518   0x.... 0x....      BL       __aeabi_f2iz
   \   0000051C   0x.... 0x....      LDR.W    R1,??DataTable13_19
   \   00000520   0x7008             STRB     R0,[R1, #+0]
   1281                          LCD_clear_L(60,3);
   \   00000522   0x2103             MOVS     R1,#+3
   \   00000524   0x203C             MOVS     R0,#+60
   \   00000526   0x.... 0x....      BL       LCD_clear_L
   1282                          write_6_8_char(0,3,'*');
   \   0000052A   0x222A             MOVS     R2,#+42
   \   0000052C   0x2103             MOVS     R1,#+3
   \   0000052E   0x2000             MOVS     R0,#+0
   \   00000530   0x.... 0x....      BL       write_6_8_char
   1283                          write_6_8_number(60,3,qing); 
   \   00000534   0x....             LDR.N    R0,??DataTable13_19
   \   00000536   0x7800             LDRB     R0,[R0, #+0]
   \   00000538   0x.... 0x....      BL       __aeabi_ui2f
   \   0000053C   0x0002             MOVS     R2,R0
   \   0000053E   0x2103             MOVS     R1,#+3
   \   00000540   0x203C             MOVS     R0,#+60
   \   00000542   0x.... 0x....      BL       write_6_8_number
   1284                          break;
   \   00000546   0xE058             B.N      ??change_value_27
   1285                     case 4:summ+=i;
   \                     ??change_value_23: (+1)
   \   00000548   0x....             LDR.N    R0,??DataTable13_21
   \   0000054A   0x7800             LDRB     R0,[R0, #+0]
   \   0000054C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000550   0x0031             MOVS     R1,R6
   \   00000552   0x.... 0x....      BL       __aeabi_fadd
   \   00000556   0x.... 0x....      BL       __aeabi_f2iz
   \   0000055A   0x....             LDR.N    R1,??DataTable13_21
   \   0000055C   0x7008             STRB     R0,[R1, #+0]
   1286                          LCD_clear_L(60,4);
   \   0000055E   0x2104             MOVS     R1,#+4
   \   00000560   0x203C             MOVS     R0,#+60
   \   00000562   0x.... 0x....      BL       LCD_clear_L
   1287                          write_6_8_char(0,4,'*');
   \   00000566   0x222A             MOVS     R2,#+42
   \   00000568   0x2104             MOVS     R1,#+4
   \   0000056A   0x2000             MOVS     R0,#+0
   \   0000056C   0x.... 0x....      BL       write_6_8_char
   1288                          write_6_8_number(60,4,summ); 
   \   00000570   0x....             LDR.N    R0,??DataTable13_21
   \   00000572   0x7800             LDRB     R0,[R0, #+0]
   \   00000574   0x.... 0x....      BL       __aeabi_ui2f
   \   00000578   0x0002             MOVS     R2,R0
   \   0000057A   0x2104             MOVS     R1,#+4
   \   0000057C   0x203C             MOVS     R0,#+60
   \   0000057E   0x.... 0x....      BL       write_6_8_number
   1289                          break;
   \   00000582   0xE03A             B.N      ??change_value_27
   1290                  case 5:da+=i;
   \                     ??change_value_26: (+1)
   \   00000584   0x....             LDR.N    R0,??DataTable13_22
   \   00000586   0x7800             LDRB     R0,[R0, #+0]
   \   00000588   0x.... 0x....      BL       __aeabi_ui2f
   \   0000058C   0x0031             MOVS     R1,R6
   \   0000058E   0x.... 0x....      BL       __aeabi_fadd
   \   00000592   0x.... 0x....      BL       __aeabi_f2iz
   \   00000596   0x....             LDR.N    R1,??DataTable13_22
   \   00000598   0x7008             STRB     R0,[R1, #+0]
   1291                          LCD_clear_L(60,5);
   \   0000059A   0x2105             MOVS     R1,#+5
   \   0000059C   0x203C             MOVS     R0,#+60
   \   0000059E   0x.... 0x....      BL       LCD_clear_L
   1292                          write_6_8_char(0,5,'*');
   \   000005A2   0x222A             MOVS     R2,#+42
   \   000005A4   0x2105             MOVS     R1,#+5
   \   000005A6   0x2000             MOVS     R0,#+0
   \   000005A8   0x.... 0x....      BL       write_6_8_char
   1293                          write_6_8_number(60,5,da); 
   \   000005AC   0x....             LDR.N    R0,??DataTable13_22
   \   000005AE   0x7800             LDRB     R0,[R0, #+0]
   \   000005B0   0x.... 0x....      BL       __aeabi_ui2f
   \   000005B4   0x0002             MOVS     R2,R0
   \   000005B6   0x2105             MOVS     R1,#+5
   \   000005B8   0x203C             MOVS     R0,#+60
   \   000005BA   0x.... 0x....      BL       write_6_8_number
   1294                          break;
   \   000005BE   0xE01C             B.N      ??change_value_27
   1295                case 6:fuxiao+=i;
   \                     ??change_value_25: (+1)
   \   000005C0   0x....             LDR.N    R0,??DataTable13_24
   \   000005C2   0x7800             LDRB     R0,[R0, #+0]
   \   000005C4   0x.... 0x....      BL       __aeabi_ui2f
   \   000005C8   0x0031             MOVS     R1,R6
   \   000005CA   0x.... 0x....      BL       __aeabi_fadd
   \   000005CE   0x.... 0x....      BL       __aeabi_f2iz
   \   000005D2   0x....             LDR.N    R1,??DataTable13_24
   \   000005D4   0x7008             STRB     R0,[R1, #+0]
   1296                          LCD_clear_L(60,6);
   \   000005D6   0x2106             MOVS     R1,#+6
   \   000005D8   0x203C             MOVS     R0,#+60
   \   000005DA   0x.... 0x....      BL       LCD_clear_L
   1297                          write_6_8_char(0,6,'*');
   \   000005DE   0x222A             MOVS     R2,#+42
   \   000005E0   0x2106             MOVS     R1,#+6
   \   000005E2   0x2000             MOVS     R0,#+0
   \   000005E4   0x.... 0x....      BL       write_6_8_char
   1298                          write_6_8_number(60,6,fuxiao); 
   \   000005E8   0x....             LDR.N    R0,??DataTable13_24
   \   000005EA   0x7800             LDRB     R0,[R0, #+0]
   \   000005EC   0x.... 0x....      BL       __aeabi_ui2f
   \   000005F0   0x0002             MOVS     R2,R0
   \   000005F2   0x2106             MOVS     R1,#+6
   \   000005F4   0x203C             MOVS     R0,#+60
   \   000005F6   0x.... 0x....      BL       write_6_8_number
   1299                          break;
   1300                  }
   1301             
   1302             break;
   1303            }
   1304           
   1305          }	 		    
   \                     ??change_value_27: (+1)
   \                     ??change_value_1: (+1)
   \   000005FA   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1306            
   1307          /****************************************************
   1308                               ∞¥º¸…®√Ë∫Ø ˝
   1309          *****************************************************/
   1310          

   \                                 In section .text, align 2, keep-with-next
   1311          void KeyScan(void)
   1312          {                  
   \                     KeyScan: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   1313           //if(scan_control==0)        //—≠ª∑…®√Ë
   1314            //{
   1315            
   1316            /////////////////////////////////////////////////////«–∆¡
   1317            if(!change_page)  //»Áπ˚ºÏ≤‚µΩµÕµÁ∆Ω£¨Àµ√˜∞¥º¸∞¥œ¬
   \   00000002   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF3C0 0x40C0      UBFX     R0,R0,#+19,#+1
   \   0000000A   0x2800             CMP      R0,#+0
   \   0000000C   0xD120             BNE.N    ??KeyScan_0
   1318              {
   1319                LCD_DLY_ms(30); //—” ±»•∂∂£¨“ª∞„10-20ms
   \   0000000E   0x201E             MOVS     R0,#+30
   \   00000010   0x.... 0x....      BL       LCD_DLY_ms
   1320                if(!change_page)     //‘Ÿ¥Œ»∑»œ∞¥º¸ «∑Ò∞¥œ¬£¨√ª”–∞¥œ¬‘ÚÕÀ≥ˆ
   \   00000014   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF3C0 0x40C0      UBFX     R0,R0,#+19,#+1
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD117             BNE.N    ??KeyScan_0
   1321          	     {
   1322                 while(!change_page);//»Áπ˚»∑»œ∞¥œ¬∞¥º¸µ»¥˝∞¥º¸ Õ∑≈£¨√ª”– Õ∑≈‘Ú“ª÷±µ»¥˝
   \                     ??KeyScan_1: (+1)
   \   00000020   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF3C0 0x40C0      UBFX     R0,R0,#+19,#+1
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD0F9             BEQ.N    ??KeyScan_1
   1323          	           
   1324          		   if(page_num<5)    //“≥–Ú∫≈º”≤Ÿ◊˜
   \   0000002C   0x....             LDR.N    R0,??DataTable13_35
   \   0000002E   0x7800             LDRB     R0,[R0, #+0]
   \   00000030   0x2805             CMP      R0,#+5
   \   00000032   0xDA05             BGE.N    ??KeyScan_2
   1325          	         page_num++;
   \   00000034   0x....             LDR.N    R0,??DataTable13_35
   \   00000036   0x7800             LDRB     R0,[R0, #+0]
   \   00000038   0x1C40             ADDS     R0,R0,#+1
   \   0000003A   0x....             LDR.N    R1,??DataTable13_35
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
   \   0000003E   0xE002             B.N      ??KeyScan_3
   1326          		   else
   1327          		       page_num=0;
   \                     ??KeyScan_2: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR.N    R1,??DataTable13_35
   \   00000044   0x7008             STRB     R0,[R1, #+0]
   1328          		   
   1329          		   line_num=0;
   \                     ??KeyScan_3: (+1)
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x....             LDR.N    R1,??DataTable13_36
   \   0000004A   0x7008             STRB     R0,[R1, #+0]
   1330          		   pre_show();
   \   0000004C   0x.... 0x....      BL       pre_show
   1331          
   1332          	     }
   1333                // fanting=1;
   1334               
   1335               }
   1336              
   1337          
   1338           if(page_num==2||page_num==3||page_num==4)     //»Á≤ªŒ™µ⁄“ª“≥£¨‘ÚΩ¯––œ¬“ª≤Ω…®√Ë
   \                     ??KeyScan_0: (+1)
   \   00000050   0x....             LDR.N    R0,??DataTable13_35
   \   00000052   0x7800             LDRB     R0,[R0, #+0]
   \   00000054   0x2802             CMP      R0,#+2
   \   00000056   0xD008             BEQ.N    ??KeyScan_4
   \   00000058   0x....             LDR.N    R0,??DataTable13_35
   \   0000005A   0x7800             LDRB     R0,[R0, #+0]
   \   0000005C   0x2803             CMP      R0,#+3
   \   0000005E   0xD004             BEQ.N    ??KeyScan_4
   \   00000060   0x....             LDR.N    R0,??DataTable13_35
   \   00000062   0x7800             LDRB     R0,[R0, #+0]
   \   00000064   0x2804             CMP      R0,#+4
   \   00000066   0xF040 0x80A1      BNE.W    ??KeyScan_5
   1339           {
   1340            /////////////////////////////////////////////////////«–––
   1341            if(!change_line)  //»Áπ˚ºÏ≤‚µΩµÕµÁ∆Ω£¨Àµ√˜∞¥º¸∞¥œ¬
   \                     ??KeyScan_4: (+1)
   \   0000006A   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF3C0 0x4040      UBFX     R0,R0,#+17,#+1
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD12F             BNE.N    ??KeyScan_6
   1342              {
   1343                LCD_DLY_ms(30); //—” ±»•∂∂£¨“ª∞„10-20ms
   \   00000076   0x201E             MOVS     R0,#+30
   \   00000078   0x.... 0x....      BL       LCD_DLY_ms
   1344               if(!change_line)     //‘Ÿ¥Œ»∑»œ∞¥º¸ «∑Ò∞¥œ¬£¨√ª”–∞¥œ¬‘ÚÕÀ≥ˆ
   \   0000007C   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0xF3C0 0x4040      UBFX     R0,R0,#+17,#+1
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xD126             BNE.N    ??KeyScan_6
   1345          	     {
   1346                 while(!change_line);//»Áπ˚»∑»œ∞¥œ¬∞¥º¸µ»¥˝∞¥º¸ Õ∑≈£¨√ª”– Õ∑≈‘Ú“ª÷±µ»¥˝
   \                     ??KeyScan_7: (+1)
   \   00000088   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   0000008A   0x6800             LDR      R0,[R0, #+0]
   \   0000008C   0xF3C0 0x4040      UBFX     R0,R0,#+17,#+1
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD0F9             BEQ.N    ??KeyScan_7
   1347          	     
   1348          	     if(page_num!=0)
   \   00000094   0x....             LDR.N    R0,??DataTable13_35
   \   00000096   0x7800             LDRB     R0,[R0, #+0]
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD005             BEQ.N    ??KeyScan_8
   1349          	        write_6_8_char(0,line_num,' ');
   \   0000009C   0x2220             MOVS     R2,#+32
   \   0000009E   0x....             LDR.N    R0,??DataTable13_36
   \   000000A0   0x7801             LDRB     R1,[R0, #+0]
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x.... 0x....      BL       write_6_8_char
   1350          	           
   1351          		   if(line_num<6)    //–––Ú∫≈º”≤Ÿ◊˜
   \                     ??KeyScan_8: (+1)
   \   000000A8   0x....             LDR.N    R0,??DataTable13_36
   \   000000AA   0x7800             LDRB     R0,[R0, #+0]
   \   000000AC   0x2806             CMP      R0,#+6
   \   000000AE   0xDA05             BGE.N    ??KeyScan_9
   1352          	         line_num++;
   \   000000B0   0x....             LDR.N    R0,??DataTable13_36
   \   000000B2   0x7800             LDRB     R0,[R0, #+0]
   \   000000B4   0x1C40             ADDS     R0,R0,#+1
   \   000000B6   0x....             LDR.N    R1,??DataTable13_36
   \   000000B8   0x7008             STRB     R0,[R1, #+0]
   \   000000BA   0xE002             B.N      ??KeyScan_10
   1353          		   else
   1354          		       line_num=0;
   \                     ??KeyScan_9: (+1)
   \   000000BC   0x2000             MOVS     R0,#+0
   \   000000BE   0x....             LDR.N    R1,??DataTable13_36
   \   000000C0   0x7008             STRB     R0,[R1, #+0]
   1355          		   
   1356          		   if(page_num!=0)
   \                     ??KeyScan_10: (+1)
   \   000000C2   0x....             LDR.N    R0,??DataTable13_35
   \   000000C4   0x7800             LDRB     R0,[R0, #+0]
   \   000000C6   0x2800             CMP      R0,#+0
   \   000000C8   0xD005             BEQ.N    ??KeyScan_6
   1357          	        write_6_8_char(0,line_num,'*');
   \   000000CA   0x222A             MOVS     R2,#+42
   \   000000CC   0x....             LDR.N    R0,??DataTable13_36
   \   000000CE   0x7801             LDRB     R1,[R0, #+0]
   \   000000D0   0x2000             MOVS     R0,#+0
   \   000000D2   0x.... 0x....      BL       write_6_8_char
   1358                          
   1359          	     } 
   1360          	     
   1361             }
   1362          /*∂‘”¶≤Œ ˝º” Æ*/
   1363          
   1364           if(!Add_10)  //»Áπ˚ºÏ≤‚µΩµÕµÁ∆Ω£¨Àµ√˜∞¥º¸∞¥œ¬
   \                     ??KeyScan_6: (+1)
   \   000000D6   0x....             LDR.N    R0,??DataTable13_37  ;; 0x400ff050
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x07C0             LSLS     R0,R0,#+31
   \   000000DC   0xD411             BMI.N    ??KeyScan_11
   1365              {
   1366                 LCD_DLY_ms(30); //—” ±»•∂∂£¨“ª∞„10-20ms
   \   000000DE   0x201E             MOVS     R0,#+30
   \   000000E0   0x.... 0x....      BL       LCD_DLY_ms
   1367               if(!Add_10)     //‘Ÿ¥Œ»∑»œ∞¥º¸ «∑Ò∞¥œ¬£¨√ª”–∞¥œ¬‘ÚÕÀ≥ˆ
   \   000000E4   0x....             LDR.N    R0,??DataTable13_37  ;; 0x400ff050
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0x07C0             LSLS     R0,R0,#+31
   \   000000EA   0xD40A             BMI.N    ??KeyScan_11
   1368          	   {
   1369                while(!Add_10);//»Áπ˚»∑»œ∞¥œ¬∞¥º¸µ»¥˝∞¥º¸ Õ∑≈£¨√ª”– Õ∑≈‘Ú“ª÷±µ»¥˝
   \                     ??KeyScan_12: (+1)
   \   000000EC   0x....             LDR.N    R0,??DataTable13_37  ;; 0x400ff050
   \   000000EE   0x6800             LDR      R0,[R0, #+0]
   \   000000F0   0x07C0             LSLS     R0,R0,#+31
   \   000000F2   0xD5FB             BPL.N    ??KeyScan_12
   1370                  change_value(page_num,line_num,10);
   \   000000F4   0x....             LDR.N    R2,??DataTable13_29  ;; 0x41200000
   \   000000F6   0x....             LDR.N    R0,??DataTable13_36
   \   000000F8   0x7801             LDRB     R1,[R0, #+0]
   \   000000FA   0x....             LDR.N    R0,??DataTable13_35
   \   000000FC   0x7800             LDRB     R0,[R0, #+0]
   \   000000FE   0x.... 0x....      BL       change_value
   1371          	   }
   1372          	  }
   1373          /*∂‘”¶≤Œ ˝º”“ª*/
   1374          if(!Add_1)  
   \                     ??KeyScan_11: (+1)
   \   00000102   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0xF3C0 0x7000      UBFX     R0,R0,#+28,#+1
   \   0000010A   0x2800             CMP      R0,#+0
   \   0000010C   0xD116             BNE.N    ??KeyScan_13
   1375              {
   1376          	 LCD_DLY_ms(30); 
   \   0000010E   0x201E             MOVS     R0,#+30
   \   00000110   0x.... 0x....      BL       LCD_DLY_ms
   1377               if(!Add_1)
   \   00000114   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   00000116   0x6800             LDR      R0,[R0, #+0]
   \   00000118   0xF3C0 0x7000      UBFX     R0,R0,#+28,#+1
   \   0000011C   0x2800             CMP      R0,#+0
   \   0000011E   0xD10D             BNE.N    ??KeyScan_13
   1378          	   {
   1379                  while(!Add_1);
   \                     ??KeyScan_14: (+1)
   \   00000120   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0xF3C0 0x7000      UBFX     R0,R0,#+28,#+1
   \   00000128   0x2800             CMP      R0,#+0
   \   0000012A   0xD0F9             BEQ.N    ??KeyScan_14
   1380                  change_value(page_num,line_num,1);  
   \   0000012C   0xF05F 0x527E      MOVS     R2,#+1065353216
   \   00000130   0x....             LDR.N    R0,??DataTable13_36
   \   00000132   0x7801             LDRB     R1,[R0, #+0]
   \   00000134   0x....             LDR.N    R0,??DataTable13_35
   \   00000136   0x7800             LDRB     R0,[R0, #+0]
   \   00000138   0x.... 0x....      BL       change_value
   1381          	   }
   1382          	  }
   1383          /*∂‘”¶≤Œ ˝ºı“ª*/
   1384          if(!Sub_1)
   \                     ??KeyScan_13: (+1)
   \   0000013C   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   0000013E   0x6800             LDR      R0,[R0, #+0]
   \   00000140   0xF3C0 0x7040      UBFX     R0,R0,#+29,#+1
   \   00000144   0x2800             CMP      R0,#+0
   \   00000146   0xD115             BNE.N    ??KeyScan_15
   1385             {
   1386            	 LCD_DLY_ms(30);  
   \   00000148   0x201E             MOVS     R0,#+30
   \   0000014A   0x.... 0x....      BL       LCD_DLY_ms
   1387               if(!Sub_1)     
   \   0000014E   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   00000150   0x6800             LDR      R0,[R0, #+0]
   \   00000152   0xF3C0 0x7040      UBFX     R0,R0,#+29,#+1
   \   00000156   0x2800             CMP      R0,#+0
   \   00000158   0xD10C             BNE.N    ??KeyScan_15
   1388          	   {
   1389                  while(!Sub_1);
   \                     ??KeyScan_16: (+1)
   \   0000015A   0x....             LDR.N    R0,??DataTable13_34  ;; 0x400ff010
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0xF3C0 0x7040      UBFX     R0,R0,#+29,#+1
   \   00000162   0x2800             CMP      R0,#+0
   \   00000164   0xD0F9             BEQ.N    ??KeyScan_16
   1390                  change_value(page_num,line_num,-1);
   \   00000166   0x....             LDR.N    R2,??DataTable13_38  ;; 0xbf800000
   \   00000168   0x....             LDR.N    R0,??DataTable13_36
   \   0000016A   0x7801             LDRB     R1,[R0, #+0]
   \   0000016C   0x....             LDR.N    R0,??DataTable13_35
   \   0000016E   0x7800             LDRB     R0,[R0, #+0]
   \   00000170   0x.... 0x....      BL       change_value
   1391          	 	 }
   1392          	  }
   1393          /*∂‘”¶≤Œ ˝ºı Æ*/
   1394          if(!Sub_10){
   \                     ??KeyScan_15: (+1)
   \   00000174   0x....             LDR.N    R0,??DataTable13_37  ;; 0x400ff050
   \   00000176   0x6800             LDR      R0,[R0, #+0]
   \   00000178   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   0000017C   0x2800             CMP      R0,#+0
   \   0000017E   0xD115             BNE.N    ??KeyScan_5
   1395            LCD_DLY_ms(30); 
   \   00000180   0x201E             MOVS     R0,#+30
   \   00000182   0x.... 0x....      BL       LCD_DLY_ms
   1396            if(!Sub_10){
   \   00000186   0x....             LDR.N    R0,??DataTable13_37  ;; 0x400ff050
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   0000018E   0x2800             CMP      R0,#+0
   \   00000190   0xD10C             BNE.N    ??KeyScan_5
   1397              while(!Sub_10);
   \                     ??KeyScan_17: (+1)
   \   00000192   0x....             LDR.N    R0,??DataTable13_37  ;; 0x400ff050
   \   00000194   0x6800             LDR      R0,[R0, #+0]
   \   00000196   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   0000019A   0x2800             CMP      R0,#+0
   \   0000019C   0xD0F9             BEQ.N    ??KeyScan_17
   1398              change_value(page_num,line_num,-10);
   \   0000019E   0x....             LDR.N    R2,??DataTable13_39  ;; 0xc1200000
   \   000001A0   0x....             LDR.N    R0,??DataTable13_36
   \   000001A2   0x7801             LDRB     R1,[R0, #+0]
   \   000001A4   0x....             LDR.N    R0,??DataTable13_35
   \   000001A6   0x7800             LDRB     R0,[R0, #+0]
   \   000001A8   0x.... 0x....      BL       change_value
   1399            }
   1400           }
   1401          	  
   1402          
   1403           }
   1404           
   1405          }
   \                     ??KeyScan_5: (+1)
   \   000001AC   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x4004B028         DC32     0x4004b028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x4004B024         DC32     0x4004b024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x4004B020         DC32     0x4004b020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x4004B01C         DC32     0x4004b01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_5:
   \   00000000   0x400FF094         DC32     0x400ff094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x53 0x70          DC8      "Sp:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x38D1B718         DC32     0x38d1b718

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x64 0x61          DC8      "da:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x56 0x3A          DC8      0x56, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x53 0x70          DC8      "Sp:"
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x........         DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     page_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x........         DC32     V

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     w

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     acce

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x........         DC32     g_nCarAngle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x........         DC32     acce_angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x........         DC32     control_top_whiteline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x........         DC32     Speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x........         DC32     LeftRealSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x........         DC32     RightRealSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     RealSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     LeftSpeedPwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     RightSpeedPwm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     anglePD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     steerpwmout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     SpeedPIDout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     line_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     ACCE_STATIC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x........         DC32     stopcount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_20:
   \   00000000   0x........         DC32     lcd_ref_p1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_21:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_22:
   \   00000000   0x........         DC32     lcd_ref_d1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_23:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_24:
   \   00000000   0x........         DC32     lcd_ref_p2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_25:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_26:
   \   00000000   0x........         DC32     lcd_ref_d2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_27:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_28:
   \   00000000   0x........         DC32     angle_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     angle_kd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_2:
   \   00000000   0x........         DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_3:
   \   00000000   0x........         DC32     speed_kp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_4:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_5:
   \   00000000   0x........         DC32     speed_ki

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_6:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_7:
   \   00000000   0x........         DC32     zhongjian

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_8:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_9:
   \   00000000   0x........         DC32     WHITE_BLACK_OT

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_10:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_11:
   \   00000000   0x........         DC32     ft1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_12:
   \   00000000   0x........         DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_13:
   \   00000000   0x........         DC32     tingting_p

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_14:
   \   00000000   0x........         DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_15:
   \   00000000   0x........         DC32     tingting_d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_16:
   \   00000000   0x........         DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_17:
   \   00000000   0x........         DC32     huanjie

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_18:
   \   00000000   0x........         DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_19:
   \   00000000   0x........         DC32     qing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_20:
   \   00000000   0x........         DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_21:
   \   00000000   0x........         DC32     summ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_22:
   \   00000000   0x........         DC32     da

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_23:
   \   00000000   0x........         DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_24:
   \   00000000   0x........         DC32     fuxiao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_25:
   \   00000000   0x........         DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_26:
   \   00000000   0x........         DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_27:
   \   00000000   0x........         DC32     g_nLeftCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_28:
   \   00000000   0x........         DC32     g_nRightCount

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_29:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_30:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_31:
   \   00000000   0x3FB99999         DC32     0x3fb99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_32:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_33:
   \   00000000   0x3F847AE1         DC32     0x3f847ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_34:
   \   00000000   0x400FF010         DC32     0x400ff010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_35:
   \   00000000   0x........         DC32     page_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_36:
   \   00000000   0x........         DC32     line_num

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_37:
   \   00000000   0x400FF050         DC32     0x400ff050

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_38:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_39:
   \   00000000   0xC1200000         DC32     0xc1200000

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000031   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000041   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000051   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000061   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000071   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x74 0x6F          DC8 "top:"
   \              0x70 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x56 0x3A          DC8 "V:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x57 0x3A          DC8 "W:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x61 0x63          DC8 "acce:"
   \              0x63 0x65    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x53 0x70          DC8 "Sp:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x52 0x73          DC8 "Rsp:"
   \              0x70 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x4C 0x5F          DC8 "L_PWM:"
   \              0x50 0x57    
   \              0x4D 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x52 0x5F          DC8 "R_PWM:"
   \              0x50 0x57    
   \              0x4D 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x41 0x43          DC8 "ACCE:"
   \              0x43 0x45    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x53 0x5F          DC8 "S_P_C:"
   \              0x50 0x5F    
   \              0x43 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x73 0x65          DC8 "set_d:"
   \              0x74 0x5F    
   \              0x64 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x6C 0x63          DC8 "lcd_p1:"
   \              0x64 0x5F    
   \              0x70 0x31    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x6C 0x63          DC8 "lcd_d1:"
   \              0x64 0x5F    
   \              0x64 0x31    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x6C 0x63          DC8 "lcd_p2:"
   \              0x64 0x5F    
   \              0x70 0x32    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x6C 0x63          DC8 "lcd_d2:"
   \              0x64 0x5F    
   \              0x64 0x32    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x61 0x6E          DC8 "ang_kp:"
   \              0x67 0x5F    
   \              0x6B 0x70    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x61 0x6E          DC8 "ang_kd:"
   \              0x67 0x5F    
   \              0x6B 0x64    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x73 0x70          DC8 "sped_kp:"
   \              0x65 0x64    
   \              0x5F 0x6B    
   \              0x70 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x73 0x70          DC8 "sped_ki:"
   \              0x65 0x64    
   \              0x5F 0x6B    
   \              0x69 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x7A 0x68          DC8 "zhongj:"
   \              0x6F 0x6E    
   \              0x67 0x6A    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x57 0x5F          DC8 "W_B_O:"
   \              0x42 0x5F    
   \              0x4F 0x3A    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x66 0x74          DC8 "ft1:"
   \              0x31 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x74 0x69          DC8 "ting_p:"
   \              0x6E 0x67    
   \              0x5F 0x70    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x74 0x69          DC8 "ting_d:"
   \              0x6E 0x67    
   \              0x5F 0x64    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x68 0x75          DC8 "huanjie:"
   \              0x61 0x6E    
   \              0x6A 0x69    
   \              0x65 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x71 0x69          DC8 "qing:"
   \              0x6E 0x67    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x73 0x75          DC8 "summ:"
   \              0x6D 0x6D    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \   00000000   0x64 0x61          DC8 "da:"
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0x66 0x75          DC8 "fuxiao:"
   \              0x78 0x69    
   \              0x61 0x6F    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     ?_30:
   \   00000000   0x4C 0x5F          DC8 "L_c:"
   \              0x63 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_31:
   \   00000000   0x52 0x5F          DC8 "R_c:"
   \              0x63 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         
   1406          
   1407          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   Draw_BMP
        40   -> LCD_Set_Pos
        40   -> LCD_WrDat
       8   KeyScan
         8   -> LCD_DLY_ms
         8   -> change_value
         8   -> pre_show
         8   -> write_6_8_char
      16   LCD_CLS
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       0   LCD_DLY_ms
      16   LCD_Fill
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
       8   LCD_Init
         8   -> LCD_DLY_ms
         8   -> LCD_Fill
         8   -> LCD_Set_Pos
         8   -> LCD_WrCmd
         8   -> gpio_init
      40   LCD_PrintImage
        40   -> LCD_Set_Pos
        40   -> LCD_WrDat
        40   -> LCD_clear_L
        40   -> __aeabi_ui2f
        40   -> write_6_8_number
        40   -> write_6_8_string
      16   LCD_PutPixel
        16   -> LCD_Set_Pos
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
      32   LCD_Rectangle
        32   -> LCD_DLY_ms
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      16   LCD_Set_Pos
        16   -> LCD_WrCmd
       0   LCD_WrCmd
       0   LCD_WrDat
      16   LCD_clear_L
        16   -> LCD_Set_Pos
        16   -> LCD_WrCmd
        16   -> LCD_WrDat
      40   LED_PrintImage
        40   -> LCD_Set_Pos
        40   -> LCD_WrDat
     160   MAIN_ConvertData
       160   -> __aeabi_memclr4
       160   -> __aeabi_memset
      32   change_value
        32   -> LCD_clear_L
        32   -> __aeabi_d2f
        32   -> __aeabi_dadd
        32   -> __aeabi_dmul
        32   -> __aeabi_f2d
        32   -> __aeabi_f2iz
        32   -> __aeabi_fadd
        32   -> __aeabi_fmul
        32   -> __aeabi_i2f
        32   -> __aeabi_ui2f
        32   -> write_6_8_char
        32   -> write_6_8_number
       8   pre_show
         8   -> LCD_CLS
         8   -> __aeabi_i2f
         8   -> __aeabi_ui2f
         8   -> write_6_8_char
         8   -> write_6_8_number
         8   -> write_6_8_string
       8   redraw
         8   -> LCD_clear_L
         8   -> __aeabi_i2f
         8   -> __aeabi_ui2f
         8   -> write_6_8_number
         8   -> write_6_8_string
      24   write_6_8_char
        24   -> LCD_Set_Pos
        24   -> LCD_WrDat
      48   write_6_8_number
        48   -> __aeabi_f2iz
        48   -> __aeabi_fmul
        48   -> __aeabi_fsub
        48   -> __aeabi_i2f
        48   -> write_6_8_char
        48   -> write_6_8_string
        48 __aeabi_cfcmple
        48 __aeabi_cfrcmple
      32   write_6_8_string
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      32   write_8_16_char
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat
      48   write_8_16_number
        48   -> __aeabi_f2iz
        48   -> __aeabi_fmul
        48   -> __aeabi_fsub
        48   -> __aeabi_i2f
        48   -> write_8_16_char
        48   -> write_8_16_string
        48 __aeabi_cfcmple
        48 __aeabi_cfrcmple
      32   write_8_16_string
        32   -> LCD_Set_Pos
        32   -> LCD_WrDat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_20
       4  ??DataTable12_21
       4  ??DataTable12_22
       4  ??DataTable12_23
       4  ??DataTable12_24
       4  ??DataTable12_25
       4  ??DataTable12_26
       4  ??DataTable12_27
       4  ??DataTable12_28
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable13_10
       4  ??DataTable13_11
       4  ??DataTable13_12
       4  ??DataTable13_13
       4  ??DataTable13_14
       4  ??DataTable13_15
       4  ??DataTable13_16
       4  ??DataTable13_17
       4  ??DataTable13_18
       4  ??DataTable13_19
       4  ??DataTable13_2
       4  ??DataTable13_20
       4  ??DataTable13_21
       4  ??DataTable13_22
       4  ??DataTable13_23
       4  ??DataTable13_24
       4  ??DataTable13_25
       4  ??DataTable13_26
       4  ??DataTable13_27
       4  ??DataTable13_28
       4  ??DataTable13_29
       4  ??DataTable13_3
       4  ??DataTable13_30
       4  ??DataTable13_31
       4  ??DataTable13_32
       4  ??DataTable13_33
       4  ??DataTable13_34
       4  ??DataTable13_35
       4  ??DataTable13_36
       4  ??DataTable13_37
       4  ??DataTable13_38
       4  ??DataTable13_39
       4  ??DataTable13_4
       4  ??DataTable13_5
       4  ??DataTable13_6
       4  ??DataTable13_7
       4  ??DataTable13_8
       4  ??DataTable13_9
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
       4  ??DataTable9_5
     128  ?_0
       8  ?_1
       8  ?_10
       8  ?_11
       8  ?_12
       8  ?_13
       8  ?_14
       8  ?_15
       8  ?_16
       8  ?_17
      12  ?_18
      12  ?_19
       4  ?_2
       8  ?_20
       8  ?_21
       8  ?_22
       8  ?_23
       8  ?_24
      12  ?_25
       8  ?_26
       8  ?_27
       4  ?_28
       8  ?_29
       4  ?_3
       8  ?_30
       8  ?_31
       8  ?_4
       4  ?_5
       8  ?_6
       8  ?_7
       8  ?_8
       8  ?_9
     128  Draw_BMP
     552  F6x8
    1520  F8X16
     430  KeyScan
      60  LCD_CLS
      28  LCD_DLY_ms
      64  LCD_Fill
     362  LCD_Init
     318  LCD_PrintImage
      80  LCD_PutPixel
     152  LCD_Rectangle
      46  LCD_Set_Pos
     130  LCD_WrCmd
     150  LCD_WrDat
      58  LCD_clear_L
     278  LED_PrintImage
     106  MAIN_ConvertData
    1534  change_value
    7680  g_aucImageTable
       1  line_num
       1  page_num
    1074  pre_show
       1  re_display
     458  redraw
      80  write_6_8_char
     378  write_6_8_number
     124  write_6_8_string
     140  write_8_16_char
     378  write_8_16_number
     170  write_8_16_string

 
 7 682 bytes in section .bss
     1 byte  in section .data
 2 444 bytes in section .rodata
 7 090 bytes in section .text
 
 7 090 bytes of CODE  memory
 2 444 bytes of CONST memory
 7 683 bytes of DATA  memory

Errors: none
Warnings: none
